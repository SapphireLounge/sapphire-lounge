{"version":3,"file":"ui-B-Wa4-hK.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-fast-compare/index.js","../../node_modules/invariant/browser.js","../../node_modules/shallowequal/index.js","../../node_modules/react-helmet-async/lib/index.esm.js","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../node_modules/framer-motion/dist/es/utils/memo.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.3\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    // START: Modifications:\n    // Apply guards for `Object.create(null)` handling. See:\n    // - https://github.com/FormidableLabs/react-fast-compare/issues/64\n    // - https://github.com/epoberezkin/fast-deep-equal/issues/49\n    if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === 'function' && typeof b.valueOf === 'function') return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString && typeof a.toString === 'function' && typeof b.toString === 'function') return a.toString() === b.toString();\n    // END: Modifications\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","// src/index.tsx\nimport React3, { Component as Component3 } from \"react\";\nimport fastCompare from \"react-fast-compare\";\nimport invariant from \"invariant\";\n\n// src/Provider.tsx\nimport React2, { Component } from \"react\";\n\n// src/server.ts\nimport React from \"react\";\n\n// src/constants.ts\nvar TAG_NAMES = /* @__PURE__ */ ((TAG_NAMES2) => {\n  TAG_NAMES2[\"BASE\"] = \"base\";\n  TAG_NAMES2[\"BODY\"] = \"body\";\n  TAG_NAMES2[\"HEAD\"] = \"head\";\n  TAG_NAMES2[\"HTML\"] = \"html\";\n  TAG_NAMES2[\"LINK\"] = \"link\";\n  TAG_NAMES2[\"META\"] = \"meta\";\n  TAG_NAMES2[\"NOSCRIPT\"] = \"noscript\";\n  TAG_NAMES2[\"SCRIPT\"] = \"script\";\n  TAG_NAMES2[\"STYLE\"] = \"style\";\n  TAG_NAMES2[\"TITLE\"] = \"title\";\n  TAG_NAMES2[\"FRAGMENT\"] = \"Symbol(react.fragment)\";\n  return TAG_NAMES2;\n})(TAG_NAMES || {});\nvar SEO_PRIORITY_TAGS = {\n  link: { rel: [\"amphtml\", \"canonical\", \"alternate\"] },\n  script: { type: [\"application/ld+json\"] },\n  meta: {\n    charset: \"\",\n    name: [\"generator\", \"robots\", \"description\"],\n    property: [\n      \"og:type\",\n      \"og:title\",\n      \"og:url\",\n      \"og:image\",\n      \"og:image:alt\",\n      \"og:description\",\n      \"twitter:url\",\n      \"twitter:title\",\n      \"twitter:description\",\n      \"twitter:image\",\n      \"twitter:image:alt\",\n      \"twitter:card\",\n      \"twitter:site\"\n    ]\n  }\n};\nvar VALID_TAG_NAMES = Object.values(TAG_NAMES);\nvar REACT_TAG_MAP = {\n  accesskey: \"accessKey\",\n  charset: \"charSet\",\n  class: \"className\",\n  contenteditable: \"contentEditable\",\n  contextmenu: \"contextMenu\",\n  \"http-equiv\": \"httpEquiv\",\n  itemprop: \"itemProp\",\n  tabindex: \"tabIndex\"\n};\nvar HTML_TAG_MAP = Object.entries(REACT_TAG_MAP).reduce(\n  (carry, [key, value]) => {\n    carry[value] = key;\n    return carry;\n  },\n  {}\n);\nvar HELMET_ATTRIBUTE = \"data-rh\";\n\n// src/utils.ts\nvar HELMET_PROPS = {\n  DEFAULT_TITLE: \"defaultTitle\",\n  DEFER: \"defer\",\n  ENCODE_SPECIAL_CHARACTERS: \"encodeSpecialCharacters\",\n  ON_CHANGE_CLIENT_STATE: \"onChangeClientState\",\n  TITLE_TEMPLATE: \"titleTemplate\",\n  PRIORITIZE_SEO_TAGS: \"prioritizeSeoTags\"\n};\nvar getInnermostProperty = (propsList, property) => {\n  for (let i = propsList.length - 1; i >= 0; i -= 1) {\n    const props = propsList[i];\n    if (Object.prototype.hasOwnProperty.call(props, property)) {\n      return props[property];\n    }\n  }\n  return null;\n};\nvar getTitleFromPropsList = (propsList) => {\n  let innermostTitle = getInnermostProperty(propsList, \"title\" /* TITLE */);\n  const innermostTemplate = getInnermostProperty(propsList, HELMET_PROPS.TITLE_TEMPLATE);\n  if (Array.isArray(innermostTitle)) {\n    innermostTitle = innermostTitle.join(\"\");\n  }\n  if (innermostTemplate && innermostTitle) {\n    return innermostTemplate.replace(/%s/g, () => innermostTitle);\n  }\n  const innermostDefaultTitle = getInnermostProperty(propsList, HELMET_PROPS.DEFAULT_TITLE);\n  return innermostTitle || innermostDefaultTitle || void 0;\n};\nvar getOnChangeClientState = (propsList) => getInnermostProperty(propsList, HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || (() => {\n});\nvar getAttributesFromPropsList = (tagType, propsList) => propsList.filter((props) => typeof props[tagType] !== \"undefined\").map((props) => props[tagType]).reduce((tagAttrs, current) => ({ ...tagAttrs, ...current }), {});\nvar getBaseTagFromPropsList = (primaryAttributes, propsList) => propsList.filter((props) => typeof props[\"base\" /* BASE */] !== \"undefined\").map((props) => props[\"base\" /* BASE */]).reverse().reduce((innermostBaseTag, tag) => {\n  if (!innermostBaseTag.length) {\n    const keys = Object.keys(tag);\n    for (let i = 0; i < keys.length; i += 1) {\n      const attributeKey = keys[i];\n      const lowerCaseAttributeKey = attributeKey.toLowerCase();\n      if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n        return innermostBaseTag.concat(tag);\n      }\n    }\n  }\n  return innermostBaseTag;\n}, []);\nvar warn = (msg) => console && typeof console.warn === \"function\" && console.warn(msg);\nvar getTagsFromPropsList = (tagName, primaryAttributes, propsList) => {\n  const approvedSeenTags = {};\n  return propsList.filter((props) => {\n    if (Array.isArray(props[tagName])) {\n      return true;\n    }\n    if (typeof props[tagName] !== \"undefined\") {\n      warn(\n        `Helmet: ${tagName} should be of type \"Array\". Instead found type \"${typeof props[tagName]}\"`\n      );\n    }\n    return false;\n  }).map((props) => props[tagName]).reverse().reduce((approvedTags, instanceTags) => {\n    const instanceSeenTags = {};\n    instanceTags.filter((tag) => {\n      let primaryAttributeKey;\n      const keys2 = Object.keys(tag);\n      for (let i = 0; i < keys2.length; i += 1) {\n        const attributeKey = keys2[i];\n        const lowerCaseAttributeKey = attributeKey.toLowerCase();\n        if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === \"rel\" /* REL */ && tag[primaryAttributeKey].toLowerCase() === \"canonical\") && !(lowerCaseAttributeKey === \"rel\" /* REL */ && tag[lowerCaseAttributeKey].toLowerCase() === \"stylesheet\")) {\n          primaryAttributeKey = lowerCaseAttributeKey;\n        }\n        if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === \"innerHTML\" /* INNER_HTML */ || attributeKey === \"cssText\" /* CSS_TEXT */ || attributeKey === \"itemprop\" /* ITEM_PROP */)) {\n          primaryAttributeKey = attributeKey;\n        }\n      }\n      if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n        return false;\n      }\n      const value = tag[primaryAttributeKey].toLowerCase();\n      if (!approvedSeenTags[primaryAttributeKey]) {\n        approvedSeenTags[primaryAttributeKey] = {};\n      }\n      if (!instanceSeenTags[primaryAttributeKey]) {\n        instanceSeenTags[primaryAttributeKey] = {};\n      }\n      if (!approvedSeenTags[primaryAttributeKey][value]) {\n        instanceSeenTags[primaryAttributeKey][value] = true;\n        return true;\n      }\n      return false;\n    }).reverse().forEach((tag) => approvedTags.push(tag));\n    const keys = Object.keys(instanceSeenTags);\n    for (let i = 0; i < keys.length; i += 1) {\n      const attributeKey = keys[i];\n      const tagUnion = {\n        ...approvedSeenTags[attributeKey],\n        ...instanceSeenTags[attributeKey]\n      };\n      approvedSeenTags[attributeKey] = tagUnion;\n    }\n    return approvedTags;\n  }, []).reverse();\n};\nvar getAnyTrueFromPropsList = (propsList, checkedTag) => {\n  if (Array.isArray(propsList) && propsList.length) {\n    for (let index = 0; index < propsList.length; index += 1) {\n      const prop = propsList[index];\n      if (prop[checkedTag]) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\nvar reducePropsToState = (propsList) => ({\n  baseTag: getBaseTagFromPropsList([\"href\" /* HREF */], propsList),\n  bodyAttributes: getAttributesFromPropsList(\"bodyAttributes\" /* BODY */, propsList),\n  defer: getInnermostProperty(propsList, HELMET_PROPS.DEFER),\n  encode: getInnermostProperty(propsList, HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n  htmlAttributes: getAttributesFromPropsList(\"htmlAttributes\" /* HTML */, propsList),\n  linkTags: getTagsFromPropsList(\n    \"link\" /* LINK */,\n    [\"rel\" /* REL */, \"href\" /* HREF */],\n    propsList\n  ),\n  metaTags: getTagsFromPropsList(\n    \"meta\" /* META */,\n    [\n      \"name\" /* NAME */,\n      \"charset\" /* CHARSET */,\n      \"http-equiv\" /* HTTPEQUIV */,\n      \"property\" /* PROPERTY */,\n      \"itemprop\" /* ITEM_PROP */\n    ],\n    propsList\n  ),\n  noscriptTags: getTagsFromPropsList(\"noscript\" /* NOSCRIPT */, [\"innerHTML\" /* INNER_HTML */], propsList),\n  onChangeClientState: getOnChangeClientState(propsList),\n  scriptTags: getTagsFromPropsList(\n    \"script\" /* SCRIPT */,\n    [\"src\" /* SRC */, \"innerHTML\" /* INNER_HTML */],\n    propsList\n  ),\n  styleTags: getTagsFromPropsList(\"style\" /* STYLE */, [\"cssText\" /* CSS_TEXT */], propsList),\n  title: getTitleFromPropsList(propsList),\n  titleAttributes: getAttributesFromPropsList(\"titleAttributes\" /* TITLE */, propsList),\n  prioritizeSeoTags: getAnyTrueFromPropsList(propsList, HELMET_PROPS.PRIORITIZE_SEO_TAGS)\n});\nvar flattenArray = (possibleArray) => Array.isArray(possibleArray) ? possibleArray.join(\"\") : possibleArray;\nvar checkIfPropsMatch = (props, toMatch) => {\n  const keys = Object.keys(props);\n  for (let i = 0; i < keys.length; i += 1) {\n    if (toMatch[keys[i]] && toMatch[keys[i]].includes(props[keys[i]])) {\n      return true;\n    }\n  }\n  return false;\n};\nvar prioritizer = (elementsList, propsToMatch) => {\n  if (Array.isArray(elementsList)) {\n    return elementsList.reduce(\n      (acc, elementAttrs) => {\n        if (checkIfPropsMatch(elementAttrs, propsToMatch)) {\n          acc.priority.push(elementAttrs);\n        } else {\n          acc.default.push(elementAttrs);\n        }\n        return acc;\n      },\n      { priority: [], default: [] }\n    );\n  }\n  return { default: elementsList, priority: [] };\n};\nvar without = (obj, key) => {\n  return {\n    ...obj,\n    [key]: void 0\n  };\n};\n\n// src/server.ts\nvar SELF_CLOSING_TAGS = [\"noscript\" /* NOSCRIPT */, \"script\" /* SCRIPT */, \"style\" /* STYLE */];\nvar encodeSpecialCharacters = (str, encode = true) => {\n  if (encode === false) {\n    return String(str);\n  }\n  return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n};\nvar generateElementAttributesAsString = (attributes) => Object.keys(attributes).reduce((str, key) => {\n  const attr = typeof attributes[key] !== \"undefined\" ? `${key}=\"${attributes[key]}\"` : `${key}`;\n  return str ? `${str} ${attr}` : attr;\n}, \"\");\nvar generateTitleAsString = (type, title, attributes, encode) => {\n  const attributeString = generateElementAttributesAsString(attributes);\n  const flattenedTitle = flattenArray(title);\n  return attributeString ? `<${type} ${HELMET_ATTRIBUTE}=\"true\" ${attributeString}>${encodeSpecialCharacters(\n    flattenedTitle,\n    encode\n  )}</${type}>` : `<${type} ${HELMET_ATTRIBUTE}=\"true\">${encodeSpecialCharacters(\n    flattenedTitle,\n    encode\n  )}</${type}>`;\n};\nvar generateTagsAsString = (type, tags, encode = true) => tags.reduce((str, t) => {\n  const tag = t;\n  const attributeHtml = Object.keys(tag).filter(\n    (attribute) => !(attribute === \"innerHTML\" /* INNER_HTML */ || attribute === \"cssText\" /* CSS_TEXT */)\n  ).reduce((string, attribute) => {\n    const attr = typeof tag[attribute] === \"undefined\" ? attribute : `${attribute}=\"${encodeSpecialCharacters(tag[attribute], encode)}\"`;\n    return string ? `${string} ${attr}` : attr;\n  }, \"\");\n  const tagContent = tag.innerHTML || tag.cssText || \"\";\n  const isSelfClosing = SELF_CLOSING_TAGS.indexOf(type) === -1;\n  return `${str}<${type} ${HELMET_ATTRIBUTE}=\"true\" ${attributeHtml}${isSelfClosing ? `/>` : `>${tagContent}</${type}>`}`;\n}, \"\");\nvar convertElementAttributesToReactProps = (attributes, initProps = {}) => Object.keys(attributes).reduce((obj, key) => {\n  const mapped = REACT_TAG_MAP[key];\n  obj[mapped || key] = attributes[key];\n  return obj;\n}, initProps);\nvar generateTitleAsReactComponent = (_type, title, attributes) => {\n  const initProps = {\n    key: title,\n    [HELMET_ATTRIBUTE]: true\n  };\n  const props = convertElementAttributesToReactProps(attributes, initProps);\n  return [React.createElement(\"title\" /* TITLE */, props, title)];\n};\nvar generateTagsAsReactComponent = (type, tags) => tags.map((tag, i) => {\n  const mappedTag = {\n    key: i,\n    [HELMET_ATTRIBUTE]: true\n  };\n  Object.keys(tag).forEach((attribute) => {\n    const mapped = REACT_TAG_MAP[attribute];\n    const mappedAttribute = mapped || attribute;\n    if (mappedAttribute === \"innerHTML\" /* INNER_HTML */ || mappedAttribute === \"cssText\" /* CSS_TEXT */) {\n      const content = tag.innerHTML || tag.cssText;\n      mappedTag.dangerouslySetInnerHTML = { __html: content };\n    } else {\n      mappedTag[mappedAttribute] = tag[attribute];\n    }\n  });\n  return React.createElement(type, mappedTag);\n});\nvar getMethodsForTag = (type, tags, encode = true) => {\n  switch (type) {\n    case \"title\" /* TITLE */:\n      return {\n        toComponent: () => generateTitleAsReactComponent(type, tags.title, tags.titleAttributes),\n        toString: () => generateTitleAsString(type, tags.title, tags.titleAttributes, encode)\n      };\n    case \"bodyAttributes\" /* BODY */:\n    case \"htmlAttributes\" /* HTML */:\n      return {\n        toComponent: () => convertElementAttributesToReactProps(tags),\n        toString: () => generateElementAttributesAsString(tags)\n      };\n    default:\n      return {\n        toComponent: () => generateTagsAsReactComponent(type, tags),\n        toString: () => generateTagsAsString(type, tags, encode)\n      };\n  }\n};\nvar getPriorityMethods = ({ metaTags, linkTags, scriptTags, encode }) => {\n  const meta = prioritizer(metaTags, SEO_PRIORITY_TAGS.meta);\n  const link = prioritizer(linkTags, SEO_PRIORITY_TAGS.link);\n  const script = prioritizer(scriptTags, SEO_PRIORITY_TAGS.script);\n  const priorityMethods = {\n    toComponent: () => [\n      ...generateTagsAsReactComponent(\"meta\" /* META */, meta.priority),\n      ...generateTagsAsReactComponent(\"link\" /* LINK */, link.priority),\n      ...generateTagsAsReactComponent(\"script\" /* SCRIPT */, script.priority)\n    ],\n    toString: () => (\n      // generate all the tags as strings and concatenate them\n      `${getMethodsForTag(\"meta\" /* META */, meta.priority, encode)} ${getMethodsForTag(\n        \"link\" /* LINK */,\n        link.priority,\n        encode\n      )} ${getMethodsForTag(\"script\" /* SCRIPT */, script.priority, encode)}`\n    )\n  };\n  return {\n    priorityMethods,\n    metaTags: meta.default,\n    linkTags: link.default,\n    scriptTags: script.default\n  };\n};\nvar mapStateOnServer = (props) => {\n  const {\n    baseTag,\n    bodyAttributes,\n    encode = true,\n    htmlAttributes,\n    noscriptTags,\n    styleTags,\n    title = \"\",\n    titleAttributes,\n    prioritizeSeoTags\n  } = props;\n  let { linkTags, metaTags, scriptTags } = props;\n  let priorityMethods = {\n    toComponent: () => {\n    },\n    toString: () => \"\"\n  };\n  if (prioritizeSeoTags) {\n    ({ priorityMethods, linkTags, metaTags, scriptTags } = getPriorityMethods(props));\n  }\n  return {\n    priority: priorityMethods,\n    base: getMethodsForTag(\"base\" /* BASE */, baseTag, encode),\n    bodyAttributes: getMethodsForTag(\"bodyAttributes\" /* BODY */, bodyAttributes, encode),\n    htmlAttributes: getMethodsForTag(\"htmlAttributes\" /* HTML */, htmlAttributes, encode),\n    link: getMethodsForTag(\"link\" /* LINK */, linkTags, encode),\n    meta: getMethodsForTag(\"meta\" /* META */, metaTags, encode),\n    noscript: getMethodsForTag(\"noscript\" /* NOSCRIPT */, noscriptTags, encode),\n    script: getMethodsForTag(\"script\" /* SCRIPT */, scriptTags, encode),\n    style: getMethodsForTag(\"style\" /* STYLE */, styleTags, encode),\n    title: getMethodsForTag(\"title\" /* TITLE */, { title, titleAttributes }, encode)\n  };\n};\nvar server_default = mapStateOnServer;\n\n// src/HelmetData.ts\nvar instances = [];\nvar isDocument = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nvar HelmetData = class {\n  instances = [];\n  canUseDOM = isDocument;\n  context;\n  value = {\n    setHelmet: (serverState) => {\n      this.context.helmet = serverState;\n    },\n    helmetInstances: {\n      get: () => this.canUseDOM ? instances : this.instances,\n      add: (instance) => {\n        (this.canUseDOM ? instances : this.instances).push(instance);\n      },\n      remove: (instance) => {\n        const index = (this.canUseDOM ? instances : this.instances).indexOf(instance);\n        (this.canUseDOM ? instances : this.instances).splice(index, 1);\n      }\n    }\n  };\n  constructor(context, canUseDOM) {\n    this.context = context;\n    this.canUseDOM = canUseDOM || false;\n    if (!canUseDOM) {\n      context.helmet = server_default({\n        baseTag: [],\n        bodyAttributes: {},\n        encodeSpecialCharacters: true,\n        htmlAttributes: {},\n        linkTags: [],\n        metaTags: [],\n        noscriptTags: [],\n        scriptTags: [],\n        styleTags: [],\n        title: \"\",\n        titleAttributes: {}\n      });\n    }\n  }\n};\n\n// src/Provider.tsx\nvar defaultValue = {};\nvar Context = React2.createContext(defaultValue);\nvar HelmetProvider = class _HelmetProvider extends Component {\n  static canUseDOM = isDocument;\n  helmetData;\n  constructor(props) {\n    super(props);\n    this.helmetData = new HelmetData(this.props.context || {}, _HelmetProvider.canUseDOM);\n  }\n  render() {\n    return /* @__PURE__ */ React2.createElement(Context.Provider, { value: this.helmetData.value }, this.props.children);\n  }\n};\n\n// src/Dispatcher.tsx\nimport { Component as Component2 } from \"react\";\nimport shallowEqual from \"shallowequal\";\n\n// src/client.ts\nvar updateTags = (type, tags) => {\n  const headElement = document.head || document.querySelector(\"head\" /* HEAD */);\n  const tagNodes = headElement.querySelectorAll(`${type}[${HELMET_ATTRIBUTE}]`);\n  const oldTags = [].slice.call(tagNodes);\n  const newTags = [];\n  let indexToDelete;\n  if (tags && tags.length) {\n    tags.forEach((tag) => {\n      const newElement = document.createElement(type);\n      for (const attribute in tag) {\n        if (Object.prototype.hasOwnProperty.call(tag, attribute)) {\n          if (attribute === \"innerHTML\" /* INNER_HTML */) {\n            newElement.innerHTML = tag.innerHTML;\n          } else if (attribute === \"cssText\" /* CSS_TEXT */) {\n            if (newElement.styleSheet) {\n              newElement.styleSheet.cssText = tag.cssText;\n            } else {\n              newElement.appendChild(document.createTextNode(tag.cssText));\n            }\n          } else {\n            const attr = attribute;\n            const value = typeof tag[attr] === \"undefined\" ? \"\" : tag[attr];\n            newElement.setAttribute(attribute, value);\n          }\n        }\n      }\n      newElement.setAttribute(HELMET_ATTRIBUTE, \"true\");\n      if (oldTags.some((existingTag, index) => {\n        indexToDelete = index;\n        return newElement.isEqualNode(existingTag);\n      })) {\n        oldTags.splice(indexToDelete, 1);\n      } else {\n        newTags.push(newElement);\n      }\n    });\n  }\n  oldTags.forEach((tag) => tag.parentNode?.removeChild(tag));\n  newTags.forEach((tag) => headElement.appendChild(tag));\n  return {\n    oldTags,\n    newTags\n  };\n};\nvar updateAttributes = (tagName, attributes) => {\n  const elementTag = document.getElementsByTagName(tagName)[0];\n  if (!elementTag) {\n    return;\n  }\n  const helmetAttributeString = elementTag.getAttribute(HELMET_ATTRIBUTE);\n  const helmetAttributes = helmetAttributeString ? helmetAttributeString.split(\",\") : [];\n  const attributesToRemove = [...helmetAttributes];\n  const attributeKeys = Object.keys(attributes);\n  for (const attribute of attributeKeys) {\n    const value = attributes[attribute] || \"\";\n    if (elementTag.getAttribute(attribute) !== value) {\n      elementTag.setAttribute(attribute, value);\n    }\n    if (helmetAttributes.indexOf(attribute) === -1) {\n      helmetAttributes.push(attribute);\n    }\n    const indexToSave = attributesToRemove.indexOf(attribute);\n    if (indexToSave !== -1) {\n      attributesToRemove.splice(indexToSave, 1);\n    }\n  }\n  for (let i = attributesToRemove.length - 1; i >= 0; i -= 1) {\n    elementTag.removeAttribute(attributesToRemove[i]);\n  }\n  if (helmetAttributes.length === attributesToRemove.length) {\n    elementTag.removeAttribute(HELMET_ATTRIBUTE);\n  } else if (elementTag.getAttribute(HELMET_ATTRIBUTE) !== attributeKeys.join(\",\")) {\n    elementTag.setAttribute(HELMET_ATTRIBUTE, attributeKeys.join(\",\"));\n  }\n};\nvar updateTitle = (title, attributes) => {\n  if (typeof title !== \"undefined\" && document.title !== title) {\n    document.title = flattenArray(title);\n  }\n  updateAttributes(\"title\" /* TITLE */, attributes);\n};\nvar commitTagChanges = (newState, cb) => {\n  const {\n    baseTag,\n    bodyAttributes,\n    htmlAttributes,\n    linkTags,\n    metaTags,\n    noscriptTags,\n    onChangeClientState,\n    scriptTags,\n    styleTags,\n    title,\n    titleAttributes\n  } = newState;\n  updateAttributes(\"body\" /* BODY */, bodyAttributes);\n  updateAttributes(\"html\" /* HTML */, htmlAttributes);\n  updateTitle(title, titleAttributes);\n  const tagUpdates = {\n    baseTag: updateTags(\"base\" /* BASE */, baseTag),\n    linkTags: updateTags(\"link\" /* LINK */, linkTags),\n    metaTags: updateTags(\"meta\" /* META */, metaTags),\n    noscriptTags: updateTags(\"noscript\" /* NOSCRIPT */, noscriptTags),\n    scriptTags: updateTags(\"script\" /* SCRIPT */, scriptTags),\n    styleTags: updateTags(\"style\" /* STYLE */, styleTags)\n  };\n  const addedTags = {};\n  const removedTags = {};\n  Object.keys(tagUpdates).forEach((tagType) => {\n    const { newTags, oldTags } = tagUpdates[tagType];\n    if (newTags.length) {\n      addedTags[tagType] = newTags;\n    }\n    if (oldTags.length) {\n      removedTags[tagType] = tagUpdates[tagType].oldTags;\n    }\n  });\n  if (cb) {\n    cb();\n  }\n  onChangeClientState(newState, addedTags, removedTags);\n};\nvar _helmetCallback = null;\nvar handleStateChangeOnClient = (newState) => {\n  if (_helmetCallback) {\n    cancelAnimationFrame(_helmetCallback);\n  }\n  if (newState.defer) {\n    _helmetCallback = requestAnimationFrame(() => {\n      commitTagChanges(newState, () => {\n        _helmetCallback = null;\n      });\n    });\n  } else {\n    commitTagChanges(newState);\n    _helmetCallback = null;\n  }\n};\nvar client_default = handleStateChangeOnClient;\n\n// src/Dispatcher.tsx\nvar HelmetDispatcher = class extends Component2 {\n  rendered = false;\n  shouldComponentUpdate(nextProps) {\n    return !shallowEqual(nextProps, this.props);\n  }\n  componentDidUpdate() {\n    this.emitChange();\n  }\n  componentWillUnmount() {\n    const { helmetInstances } = this.props.context;\n    helmetInstances.remove(this);\n    this.emitChange();\n  }\n  emitChange() {\n    const { helmetInstances, setHelmet } = this.props.context;\n    let serverState = null;\n    const state = reducePropsToState(\n      helmetInstances.get().map((instance) => {\n        const props = { ...instance.props };\n        delete props.context;\n        return props;\n      })\n    );\n    if (HelmetProvider.canUseDOM) {\n      client_default(state);\n    } else if (server_default) {\n      serverState = server_default(state);\n    }\n    setHelmet(serverState);\n  }\n  // componentWillMount will be deprecated\n  // for SSR, initialize on first render\n  // constructor is also unsafe in StrictMode\n  init() {\n    if (this.rendered) {\n      return;\n    }\n    this.rendered = true;\n    const { helmetInstances } = this.props.context;\n    helmetInstances.add(this);\n    this.emitChange();\n  }\n  render() {\n    this.init();\n    return null;\n  }\n};\n\n// src/index.tsx\nvar Helmet = class extends Component3 {\n  static defaultProps = {\n    defer: true,\n    encodeSpecialCharacters: true,\n    prioritizeSeoTags: false\n  };\n  shouldComponentUpdate(nextProps) {\n    return !fastCompare(without(this.props, \"helmetData\"), without(nextProps, \"helmetData\"));\n  }\n  mapNestedChildrenToProps(child, nestedChildren) {\n    if (!nestedChildren) {\n      return null;\n    }\n    switch (child.type) {\n      case \"script\" /* SCRIPT */:\n      case \"noscript\" /* NOSCRIPT */:\n        return {\n          innerHTML: nestedChildren\n        };\n      case \"style\" /* STYLE */:\n        return {\n          cssText: nestedChildren\n        };\n      default:\n        throw new Error(\n          `<${child.type} /> elements are self-closing and can not contain children. Refer to our API for more information.`\n        );\n    }\n  }\n  flattenArrayTypeChildren(child, arrayTypeChildren, newChildProps, nestedChildren) {\n    return {\n      ...arrayTypeChildren,\n      [child.type]: [\n        ...arrayTypeChildren[child.type] || [],\n        {\n          ...newChildProps,\n          ...this.mapNestedChildrenToProps(child, nestedChildren)\n        }\n      ]\n    };\n  }\n  mapObjectTypeChildren(child, newProps, newChildProps, nestedChildren) {\n    switch (child.type) {\n      case \"title\" /* TITLE */:\n        return {\n          ...newProps,\n          [child.type]: nestedChildren,\n          titleAttributes: { ...newChildProps }\n        };\n      case \"body\" /* BODY */:\n        return {\n          ...newProps,\n          bodyAttributes: { ...newChildProps }\n        };\n      case \"html\" /* HTML */:\n        return {\n          ...newProps,\n          htmlAttributes: { ...newChildProps }\n        };\n      default:\n        return {\n          ...newProps,\n          [child.type]: { ...newChildProps }\n        };\n    }\n  }\n  mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n    let newFlattenedProps = { ...newProps };\n    Object.keys(arrayTypeChildren).forEach((arrayChildName) => {\n      newFlattenedProps = {\n        ...newFlattenedProps,\n        [arrayChildName]: arrayTypeChildren[arrayChildName]\n      };\n    });\n    return newFlattenedProps;\n  }\n  warnOnInvalidChildren(child, nestedChildren) {\n    invariant(\n      VALID_TAG_NAMES.some((name) => child.type === name),\n      typeof child.type === \"function\" ? `You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.` : `Only elements types ${VALID_TAG_NAMES.join(\n        \", \"\n      )} are allowed. Helmet does not support rendering <${child.type}> elements. Refer to our API for more information.`\n    );\n    invariant(\n      !nestedChildren || typeof nestedChildren === \"string\" || Array.isArray(nestedChildren) && !nestedChildren.some((nestedChild) => typeof nestedChild !== \"string\"),\n      `Helmet expects a string as a child of <${child.type}>. Did you forget to wrap your children in braces? ( <${child.type}>{\\`\\`}</${child.type}> ) Refer to our API for more information.`\n    );\n    return true;\n  }\n  mapChildrenToProps(children, newProps) {\n    let arrayTypeChildren = {};\n    React3.Children.forEach(children, (child) => {\n      if (!child || !child.props) {\n        return;\n      }\n      const { children: nestedChildren, ...childProps } = child.props;\n      const newChildProps = Object.keys(childProps).reduce((obj, key) => {\n        obj[HTML_TAG_MAP[key] || key] = childProps[key];\n        return obj;\n      }, {});\n      let { type } = child;\n      if (typeof type === \"symbol\") {\n        type = type.toString();\n      } else {\n        this.warnOnInvalidChildren(child, nestedChildren);\n      }\n      switch (type) {\n        case \"Symbol(react.fragment)\" /* FRAGMENT */:\n          newProps = this.mapChildrenToProps(nestedChildren, newProps);\n          break;\n        case \"link\" /* LINK */:\n        case \"meta\" /* META */:\n        case \"noscript\" /* NOSCRIPT */:\n        case \"script\" /* SCRIPT */:\n        case \"style\" /* STYLE */:\n          arrayTypeChildren = this.flattenArrayTypeChildren(\n            child,\n            arrayTypeChildren,\n            newChildProps,\n            nestedChildren\n          );\n          break;\n        default:\n          newProps = this.mapObjectTypeChildren(child, newProps, newChildProps, nestedChildren);\n          break;\n      }\n    });\n    return this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n  }\n  render() {\n    const { children, ...props } = this.props;\n    let newProps = { ...props };\n    let { helmetData } = props;\n    if (children) {\n      newProps = this.mapChildrenToProps(children, newProps);\n    }\n    if (helmetData && !(helmetData instanceof HelmetData)) {\n      const data = helmetData;\n      helmetData = new HelmetData(data.context, true);\n      delete newProps.helmetData;\n    }\n    return helmetData ? /* @__PURE__ */ React3.createElement(HelmetDispatcher, { ...newProps, context: helmetData.value }) : /* @__PURE__ */ React3.createElement(Context.Consumer, null, (context) => /* @__PURE__ */ React3.createElement(HelmetDispatcher, { ...newProps, context }));\n  }\n};\nexport {\n  Helmet,\n  HelmetData,\n  HelmetProvider\n};\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","const noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.12.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.12.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.12.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = presentChildren === renderedChildren ||\n                presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","hasElementType","Element","hasMap","Map","hasSet","Set","hasArrayBuffer","ArrayBuffer","isView","equal","constructor","length","i","keys","it","Array","isArray","size","entries","next","done","has","value","get","RegExp","source","flags","valueOf","toString","error","message","match","condition","format","Error","args","argIndex","replace","name","framesToPop","objA","objB","compare","compareContext","ret","keysA","keysB","bHasOwnProperty","bind","idx","valueA","valueB","TAG_NAMES","TAG_NAMES2","SEO_PRIORITY_TAGS","rel","charset","property","VALID_TAG_NAMES","values","REACT_TAG_MAP","accesskey","class","contenteditable","contextmenu","itemprop","tabindex","HTML_TAG_MAP","reduce","carry","HELMET_ATTRIBUTE","HELMET_PROPS","getInnermostProperty","propsList","getTitleFromPropsList","innermostTitle","innermostTemplate","join","innermostDefaultTitle","getOnChangeClientState","getAttributesFromPropsList","tagType","filter","map","tagAttrs","getBaseTagFromPropsList","primaryAttributes","reverse","innermostBaseTag","tag","lowerCaseAttributeKey","toLowerCase","indexOf","concat","getTagsFromPropsList","tagName","approvedSeenTags","console","warn","approvedTags","instanceTags","instanceSeenTags","primaryAttributeKey","keys2","attributeKey","forEach","push","tagUnion","getAnyTrueFromPropsList","checkedTag","index","flattenArray","possibleArray","prioritizer","elementsList","propsToMatch","acc","elementAttrs","toMatch","includes","checkIfPropsMatch","priority","default","without","obj","SELF_CLOSING_TAGS","encodeSpecialCharacters","str","encode","String","generateElementAttributesAsString","attributes","attr","convertElementAttributesToReactProps","initProps","generateTagsAsReactComponent","tags","mappedTag","attribute","mappedAttribute","content","innerHTML","cssText","dangerouslySetInnerHTML","__html","React","createElement","getMethodsForTag","toComponent","_type","title","generateTitleAsReactComponent","titleAttributes","attributeString","flattenedTitle","generateTitleAsString","t","attributeHtml","string","tagContent","isSelfClosing","generateTagsAsString","server_default","baseTag","bodyAttributes","htmlAttributes","noscriptTags","styleTags","prioritizeSeoTags","linkTags","metaTags","scriptTags","priorityMethods","meta","link","script","getPriorityMethods","base","noscript","style","instances","isDocument","window","document","HelmetData","context","canUseDOM","__publicField","this","setHelmet","serverState","helmet","helmetInstances","add","instance","remove","splice","Context","React2","createContext","HelmetProvider","_a","Component","super","helmetData","render","Provider","children","updateTags","headElement","head","querySelector","tagNodes","querySelectorAll","oldTags","slice","newTags","indexToDelete","newElement","styleSheet","appendChild","createTextNode","setAttribute","some","existingTag","isEqualNode","parentNode","removeChild","updateAttributes","elementTag","getElementsByTagName","helmetAttributeString","getAttribute","helmetAttributes","split","attributesToRemove","attributeKeys","indexToSave","removeAttribute","commitTagChanges","newState","cb","onChangeClientState","updateTitle","tagUpdates","addedTags","removedTags","_helmetCallback","client_default","cancelAnimationFrame","defer","requestAnimationFrame","HelmetDispatcher","Component2","arguments","shouldComponentUpdate","nextProps","shallowEqual","componentDidUpdate","emitChange","componentWillUnmount","state","init","rendered","Helmet","_b","Component3","fastCompare","mapNestedChildrenToProps","child","nestedChildren","flattenArrayTypeChildren","arrayTypeChildren","newChildProps","mapObjectTypeChildren","newProps","mapArrayTypeChildrenToProps","newFlattenedProps","arrayChildName","warnOnInvalidChildren","invariant","nestedChild","mapChildrenToProps","React3","Children","childProps","Consumer","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","_target","set","isAnimationControls","v","start","isKeyframesTarget","shallowCompare","prev","prevLength","isVariantLabel","getValueState","visualElement","getVelocity","resolveVariantFromProps","definition","custom","velocity","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","noop","any","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","keepAlive","immediate","queue","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","postRender","processBatch","performance","now","max","min","frame","cancelFrame","frameSteps","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","element","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","scale","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","y","paddingTop","paddingBottom","top","left","bottom","right","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","getValue","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","splitColor","aName","bName","cName","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","progress","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","result","rootIterations","approximateRoot","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","visualDuration","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","transformers","mixNumber","hueToRgb","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","addUniqueItem","item","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","resolveMotionValue","unwrappedValue","toValue","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","MotionConfigContext","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","reactExports","layoutProjection","combined","getProjectionFunctionality","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","useConstant","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","motion","PopChildMeasure","React.Component","childRef","sizeRef","offsetHeight","offsetWidth","offsetTop","offsetLeft","PopChild","nonce","dataset","motionPopId","sheet","insertRule","React.cloneElement","cloneElement","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","childId","random","_","React.useEffect","getChildKey","onlyElements","filtered","isValidElement","AnimatePresence","exitBeforeEnter","presentChildren","presentKeys","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","setRenderedChildren","exitingChildren","nextChildren","forceRender","isEveryExitComplete","isExitComplete"],"mappings":"6OASiBA,EAAEC,EAAiBC,EAAEC,OAAOC,IAAI,iBAAiBC,EAAEF,OAAOC,IAAI,kBAAkBE,EAAEC,OAAOC,UAAUC,eAAeC,EAAEV,EAAEW,mDAAmDC,kBAAkBC,EAAE,CAACC,KAAI,EAAGC,KAAI,EAAGC,QAAO,EAAGC,UAAS,GAChP,SAASC,EAAEC,EAAEC,EAAEC,GAAG,IAAIC,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAiF,IAAIH,UAAvE,IAAAD,IAAIG,EAAE,GAAGH,QAAG,IAASD,EAAEN,MAAMU,EAAE,GAAGJ,EAAEN,UAAc,IAAAM,EAAEL,MAAMU,EAAEL,EAAEL,KAAcK,EAAEd,EAAEoB,KAAKN,EAAEE,KAAKT,EAAEJ,eAAea,KAAKC,EAAED,GAAGF,EAAEE,IAAI,GAAGH,GAAGA,EAAEQ,aAAiB,IAAAL,KAAKF,EAAED,EAAEQ,kBAAe,IAASJ,EAAED,KAAKC,EAAED,GAAGF,EAAEE,IAAI,MAAM,CAACM,SAAS1B,EAAE2B,KAAKV,EAAEL,IAAIU,EAAET,IAAIU,EAAEK,MAAMP,EAAEQ,OAAOrB,EAAEsB,QAAQ,YAAkB3B,EAAa4B,EAAAC,IAAChB,EAAEe,EAAAE,KAAajB,ECPjWkB,EAAAC,QAAUpC,kBCDfqC,EAAoC,oBAAZC,QACxBC,EAAwB,mBAARC,IAChBC,EAAwB,mBAARC,IAChBC,EAAwC,mBAAhBC,eAAgCA,YAAYC,OAIxE,SAASC,EAAM3B,EAAGE,GAEZ,GAAAF,IAAME,EAAU,OAAA,EAEpB,GAAIF,GAAKE,GAAiB,iBAALF,GAA6B,iBAALE,EAAe,CAC1D,GAAIF,EAAE4B,cAAgB1B,EAAE0B,YAAoB,OAAA,EAE5C,IAAIC,EAAQC,EAAGC,EA6BXC,EA5BA,GAAAC,MAAMC,QAAQlC,GAAI,CAEhB,IADJ6B,EAAS7B,EAAE6B,SACG3B,EAAE2B,OAAe,OAAA,EAC1B,IAAAC,EAAID,EAAgB,GAARC,KACX,IAACH,EAAM3B,EAAE8B,GAAI5B,EAAE4B,IAAY,OAAA,EAC1B,OAAA,CACb,CAuBI,GAAIV,GAAWpB,aAAaqB,KAASnB,aAAamB,IAAM,CACtD,GAAIrB,EAAEmC,OAASjC,EAAEiC,KAAa,OAAA,EAE9B,IADAH,EAAKhC,EAAEoC,YACEN,EAAIE,EAAGK,QAAQC,UACjBpC,EAAEqC,IAAIT,EAAEU,MAAM,IAAY,OAAA,EAEjC,IADAR,EAAKhC,EAAEoC,YACEN,EAAIE,EAAGK,QAAQC,UACjBX,EAAMG,EAAEU,MAAM,GAAItC,EAAEuC,IAAIX,EAAEU,MAAM,KAAa,OAAA,EAC7C,OAAA,CACb,CAEI,GAAIlB,GAAWtB,aAAauB,KAASrB,aAAaqB,IAAM,CACtD,GAAIvB,EAAEmC,OAASjC,EAAEiC,KAAa,OAAA,EAE9B,IADAH,EAAKhC,EAAEoC,YACEN,EAAIE,EAAGK,QAAQC,UACjBpC,EAAEqC,IAAIT,EAAEU,MAAM,IAAY,OAAA,EAC1B,OAAA,CACb,CAGQ,GAAAhB,GAAkBC,YAAYC,OAAO1B,IAAMyB,YAAYC,OAAOxB,GAAI,CAEhE,IADJ2B,EAAS7B,EAAE6B,SACG3B,EAAE2B,OAAe,OAAA,EAC1B,IAAAC,EAAID,EAAgB,GAARC,KACf,GAAI9B,EAAE8B,KAAO5B,EAAE4B,GAAW,OAAA,EACrB,OAAA,CACb,CAEQ,GAAA9B,EAAE4B,cAAgBc,OAAe,OAAA1C,EAAE2C,SAAWzC,EAAEyC,QAAU3C,EAAE4C,QAAU1C,EAAE0C,MAK5E,GAAI5C,EAAE6C,UAAY1D,OAAOC,UAAUyD,SAAgC,mBAAd7C,EAAE6C,SAA+C,mBAAd3C,EAAE2C,QAAwB,OAAO7C,EAAE6C,YAAc3C,EAAE2C,UAC3I,GAAI7C,EAAE8C,WAAa3D,OAAOC,UAAU0D,UAAkC,mBAAf9C,EAAE8C,UAAiD,mBAAf5C,EAAE4C,SAAyB,OAAO9C,EAAE8C,aAAe5C,EAAE4C,WAKhJ,IADAjB,GADOE,EAAA5C,OAAO4C,KAAK/B,IACL6B,UACC1C,OAAO4C,KAAK7B,GAAG2B,OAAe,OAAA,EAExC,IAAAC,EAAID,EAAgB,GAARC,KACX,IAAC3C,OAAOC,UAAUC,eAAeiB,KAAKJ,EAAG6B,EAAKD,IAAY,OAAA,EAK5D,GAAAZ,GAAkBlB,aAAamB,QAAgB,OAAA,EAG9C,IAAAW,EAAID,EAAgB,GAARC,KACf,IAAiB,WAAZC,EAAKD,IAA+B,QAAZC,EAAKD,IAA4B,QAAZC,EAAKD,KAAiB9B,EAAEQ,YAarEmB,EAAM3B,EAAE+B,EAAKD,IAAK5B,EAAE6B,EAAKD,KAAa,OAAA,EAKtC,OAAA,CACX,CAES,OAAA9B,GAAMA,GAAKE,GAAMA,CAC1B,YAGiB,SAAiBF,EAAGE,GAC/B,IACK,OAAAyB,EAAM3B,EAAGE,EACjB,OAAQ6C,GACP,IAAMA,EAAMC,SAAW,IAAIC,MAAM,oBAOxB,OAAA,EAGH,MAAAF,CACV,CACA,eCtHgB,SAASG,EAAWC,EAAQnD,EAAGE,EAAGH,EAAGI,EAAGC,EAAGxB,GAOzD,IAAKsE,EAAW,CACV,IAAAH,EACJ,QAAe,IAAXI,EACFJ,EAAQ,IAAIK,MACV,qIAGG,CACL,IAAIC,EAAO,CAACrD,EAAGE,EAAGH,EAAGI,EAAGC,EAAGxB,GACvB0E,EAAW,GACfP,EAAQ,IAAIK,MACVD,EAAOI,QAAQ,OAAO,WAAa,OAAOF,EAAKC,IAAc,MAEzDE,KAAO,qBAAA,CAIT,MADNT,EAAMU,YAAc,EACdV,CAAA,CAEV,eC5CiB,SAAsBW,EAAMC,EAAMC,EAASC,GAC1D,IAAIC,EAAMF,EAAUA,EAAQtD,KAAKuD,EAAgBH,EAAMC,QAAQ,EAE/D,QAAY,IAARG,EACF,QAASA,EAGX,GAAIJ,IAASC,EACJ,OAAA,EAGL,GAAgB,iBAATD,IAAsBA,GAAwB,iBAATC,IAAsBA,EAC7D,OAAA,EAGL,IAAAI,EAAQ5E,OAAO4C,KAAK2B,GACpBM,EAAQ7E,OAAO4C,KAAK4B,GAEpB,GAAAI,EAAMlC,SAAWmC,EAAMnC,OAClB,OAAA,EAMT,IAHA,IAAIoC,EAAkB9E,OAAOC,UAAUC,eAAe6E,KAAKP,GAGlDQ,EAAM,EAAGA,EAAMJ,EAAMlC,OAAQsC,IAAO,CACvC,IAAAzE,EAAMqE,EAAMI,GAEZ,IAACF,EAAgBvE,GACZ,OAAA,EAGL,IAAA0E,EAASV,EAAKhE,GACd2E,EAASV,EAAKjE,GAIlB,IAAY,KAFZoE,EAAMF,EAAUA,EAAQtD,KAAKuD,EAAgBO,EAAQC,EAAQ3E,QAAO,SAEtC,IAARoE,GAAkBM,IAAWC,EAC1C,OAAA,CAEb,CAES,OAAA,CACT,ICjCA,IAAIC,GAA8BC,IAChCA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAqB,SAAI,WACzBA,EAAmB,OAAI,SACvBA,EAAkB,MAAI,QACtBA,EAAkB,MAAI,QACtBA,EAAqB,SAAI,yBAClBA,IACND,GAAa,CAAA,GACZE,EACI,CAAEC,IAAK,CAAC,UAAW,YAAa,cADpCD,EAEM,CAAE/D,KAAM,CAAC,wBAFf+D,EAGI,CACJE,QAAS,GACTlB,KAAM,CAAC,YAAa,SAAU,eAC9BmB,SAAU,CACR,UACA,WACA,SACA,WACA,eACA,iBACA,cACA,gBACA,sBACA,gBACA,oBACA,eACA,iBAIFC,EAAkBzF,OAAO0F,OAAOP,GAChCQ,EAAgB,CAClBC,UAAW,YACXL,QAAS,UACTM,MAAO,YACPC,gBAAiB,kBACjBC,YAAa,cACb,aAAc,YACdC,SAAU,WACVC,SAAU,YAERC,EAAelG,OAAOiD,QAAQ0C,GAAeQ,QAC/C,CAACC,GAAQ7F,EAAK8C,MACZ+C,EAAM/C,GAAS9C,EACR6F,IAET,CAAA,GAEEC,EAAmB,UAGnBC,EACa,eADbA,EAEK,QAFLA,EAGyB,0BAHzBA,EAIsB,sBAJtBA,EAKc,gBALdA,EAMmB,oBAEnBC,EAAuB,CAACC,EAAWhB,KACrC,IAAA,IAAS7C,EAAI6D,EAAU9D,OAAS,EAAGC,GAAK,EAAGA,GAAK,EAAG,CAC3C,MAAApB,EAAQiF,EAAU7D,GACxB,GAAI3C,OAAOC,UAAUC,eAAeiB,KAAKI,EAAOiE,GAC9C,OAAOjE,EAAMiE,EAEnB,CACS,OAAA,IAAA,EAELiB,EAAyBD,IAC3B,IAAIE,EAAiBH,EAAqBC,EAAW,SACrD,MAAMG,EAAoBJ,EAAqBC,EAAWF,GAI1D,GAHIxD,MAAMC,QAAQ2D,KACCA,EAAAA,EAAeE,KAAK,KAEnCD,GAAqBD,EACvB,OAAOC,EAAkBvC,QAAQ,OAAO,IAAMsC,IAEhD,MAAMG,EAAwBN,EAAqBC,EAAWF,GAC9D,OAAOI,GAAkBG,QAAyB,CAAA,EAEhDC,EAA0BN,GAAcD,EAAqBC,EAAWF,UAC5E,GACIS,EAA6B,CAACC,EAASR,IAAcA,EAAUS,QAAQ1F,QAAoC,IAAnBA,EAAMyF,KAA0BE,KAAK3F,GAAUA,EAAMyF,KAAUb,QAAO,CAACgB,EAAU1F,KAAA,IAAkB0F,KAAa1F,KAAY,CAAA,GACpN2F,EAA0B,CAACC,EAAmBb,IAAcA,EAAUS,QAAQ1F,QAA8C,IAA7BA,SAA0C2F,KAAK3F,GAAUA,EAAwB,OAAE+F,UAAUnB,QAAO,CAACoB,EAAkBC,KACpN,IAACD,EAAiB7E,OAAQ,CACtB,MAAAE,EAAO5C,OAAO4C,KAAK4E,GACzB,IAAA,IAAS7E,EAAI,EAAGA,EAAIC,EAAKF,OAAQC,GAAK,EAAG,CACjC,MACA8E,EADe7E,EAAKD,GACiB+E,cAC3C,IAA+D,IAA3DL,EAAkBM,QAAQF,IAAiCD,EAAIC,GAC1D,OAAAF,EAAiBK,OAAOJ,EAEvC,CACA,CACS,OAAAD,CAAA,GACN,IAECM,EAAuB,CAACC,EAAST,EAAmBb,KACtD,MAAMuB,EAAmB,CAAE,EACpB,OAAAvB,EAAUS,QAAQ1F,KACnBuB,MAAMC,QAAQxB,EAAMuG,WAGM,IAAnBvG,EAAMuG,KAE+DvG,EAAMuG,GATtEE,SAAkBA,QAAQC,OAYnC,KACNf,KAAK3F,GAAUA,EAAMuG,KAAUR,UAAUnB,QAAO,CAAC+B,EAAcC,KAChE,MAAMC,EAAmB,CAAE,EACdD,EAAAlB,QAAQO,IACf,IAAAa,EACE,MAAAC,EAAQtI,OAAO4C,KAAK4E,GAC1B,IAAA,IAAS7E,EAAI,EAAGA,EAAI2F,EAAM5F,OAAQC,GAAK,EAAG,CAClC,MAAA4F,EAAeD,EAAM3F,GACrB8E,EAAwBc,EAAab,mBACvCL,EAAkBM,QAAQF,IAA2D,QAAxBY,GAAsF,cAA3Cb,EAAIa,GAAqBX,eAA8D,QAA1BD,GAA0F,eAA7CD,EAAIC,GAAuBC,gBACzNW,EAAAZ,IAEwB,IAA5CJ,EAAkBM,QAAQY,IAA0C,cAAjBA,GAAkE,YAAjBA,GAA8D,aAAjBA,IAC7HF,EAAAE,EAEhC,CACM,IAAKF,IAAwBb,EAAIa,GACxB,OAAA,EAET,MAAMhF,EAAQmE,EAAIa,GAAqBX,cAOvC,OANKK,EAAiBM,KACHN,EAAAM,GAAuB,CAAE,GAEvCD,EAAiBC,KACHD,EAAAC,GAAuB,CAAE,IAEvCN,EAAiBM,GAAqBhF,KACxB+E,EAAAC,GAAqBhF,IAAS,GACxC,EAEF,IACNiE,UAAUkB,SAAShB,GAAQU,EAAaO,KAAKjB,KAC1C,MAAA5E,EAAO5C,OAAO4C,KAAKwF,GACzB,IAAA,IAASzF,EAAI,EAAGA,EAAIC,EAAKF,OAAQC,GAAK,EAAG,CACjC,MAAA4F,EAAe3F,EAAKD,GACpB+F,EAAW,IACZX,EAAiBQ,MACjBH,EAAiBG,IAEtBR,EAAiBQ,GAAgBG,CACvC,CACW,OAAAR,CAAA,GACN,IAAIZ,SAAS,EAEdqB,EAA0B,CAACnC,EAAWoC,KACxC,GAAI9F,MAAMC,QAAQyD,IAAcA,EAAU9D,OACxC,IAAA,IAASmG,EAAQ,EAAGA,EAAQrC,EAAU9D,OAAQmG,GAAS,EAAG,CAEpD,GADSrC,EAAUqC,GACdD,GACA,OAAA,CAEf,CAES,OAAA,CAAA,EAoCLE,EAAgBC,GAAkBjG,MAAMC,QAAQgG,GAAiBA,EAAcnC,KAAK,IAAMmC,EAU1FC,EAAc,CAACC,EAAcC,IAC3BpG,MAAMC,QAAQkG,GACTA,EAAa9C,QAClB,CAACgD,EAAKC,KAZY,EAAC7H,EAAO8H,KACxB,MAAAzG,EAAO5C,OAAO4C,KAAKrB,GACzB,IAAA,IAASoB,EAAI,EAAGA,EAAIC,EAAKF,OAAQC,GAAK,EACpC,GAAI0G,EAAQzG,EAAKD,KAAO0G,EAAQzG,EAAKD,IAAI2G,SAAS/H,EAAMqB,EAAKD,KACpD,OAAA,EAGJ,OAAA,CAAA,EAMG4G,CAAkBH,EAAcF,GAC9BC,EAAAK,SAASf,KAAKW,GAEdD,EAAAM,QAAQhB,KAAKW,GAEZD,IAET,CAAEK,SAAU,GAAIC,QAAS,KAGtB,CAAEA,QAASR,EAAcO,SAAU,IAExCE,EAAU,CAACC,EAAKpJ,KACX,IACFoJ,EACHpJ,CAACA,QAAM,IAKPqJ,EAAoB,CAAC,WAA2B,SAAuB,SACvEC,EAA0B,CAACC,EAAKC,GAAS,KAC5B,IAAXA,EACKC,OAAOF,GAETE,OAAOF,GAAK1F,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,UAE1H6F,EAAqCC,GAAelK,OAAO4C,KAAKsH,GAAY/D,QAAO,CAAC2D,EAAKvJ,KAC3F,MAAM4J,OAAkC,IAApBD,EAAW3J,GAAuB,GAAGA,MAAQ2J,EAAW3J,MAAU,GAAGA,IACzF,OAAOuJ,EAAM,GAAGA,KAAOK,IAASA,CAAA,GAC/B,IAwBCC,EAAuC,CAACF,EAAYG,EAAY,CAAE,IAAKrK,OAAO4C,KAAKsH,GAAY/D,QAAO,CAACwD,EAAKpJ,KAE9GoJ,EADehE,EAAcpF,IACfA,GAAO2J,EAAW3J,GACzBoJ,IACNU,GASCC,EAA+B,CAAChJ,EAAMiJ,IAASA,EAAKrD,KAAI,CAACM,EAAK7E,KAChE,MAAM6H,EAAY,CAChBjK,IAAKoC,EACL0D,CAACA,IAAmB,GAYf,OAVPrG,OAAO4C,KAAK4E,GAAKgB,SAASiC,IAClB,MACAC,EADS/E,EAAc8E,IACKA,EAC9B,GAAoB,cAApBC,GAAwE,YAApBA,EAA8C,CAC9F,MAAAC,EAAUnD,EAAIoD,WAAapD,EAAIqD,QAC3BL,EAAAM,wBAA0B,CAAEC,OAAQJ,EACpD,MACgBH,EAAAE,GAAmBlD,EAAIiD,EACvC,IAESO,EAAMC,cAAc3J,EAAMkJ,EAAS,IAExCU,GAAmB,CAAC5J,EAAMiJ,EAAMR,GAAS,KAC3C,OAAQzI,GACN,IAAK,QACI,MAAA,CACL6J,YAAa,IA7Be,EAACC,EAAOC,EAAOnB,KACjD,MAIM3I,EAAQ6I,EAAqCF,EAJjC,CAChB3J,IAAK8K,EACLhF,CAACA,IAAmB,IAGtB,MAAO,CAAC2E,EAAMC,cAAc,QAAqB1J,EAAO8J,GAAM,EAuBrCC,CAA8BhK,EAAMiJ,EAAKc,MAAOd,EAAKgB,iBACxE5H,SAAU,IA1DU,EAACrC,EAAM+J,EAAOnB,EAAYH,KAC9C,MAAAyB,EAAkBvB,EAAkCC,GACpDuB,EAAiB3C,EAAauC,GACpC,OAAOG,EAAkB,IAAIlK,KAAQ+E,YAA2BmF,KAAmB3B,EACjF4B,EACA1B,OACIzI,KAAU,IAAIA,KAAQ+E,YAA2BwD,EACrD4B,EACA1B,OACIzI,IAAI,EAiDYoK,CAAsBpK,EAAMiJ,EAAKc,MAAOd,EAAKgB,gBAAiBxB,IAElF,IAAK,iBACL,IAAK,iBACI,MAAA,CACLoB,YAAa,IAAMf,EAAqCG,GACxD5G,SAAU,IAAMsG,EAAkCM,IAEtD,QACS,MAAA,CACLY,YAAa,IAAMb,EAA6BhJ,EAAMiJ,GACtD5G,SAAU,IA1DS,EAACrC,EAAMiJ,EAAMR,GAAS,IAASQ,EAAKpE,QAAO,CAAC2D,EAAK6B,KAC1E,MAAMnE,EAAMmE,EACNC,EAAgB5L,OAAO4C,KAAK4E,GAAKP,QACpCwD,KAA8B,cAAdA,GAA4D,YAAdA,KAC/DtE,QAAO,CAAC0F,EAAQpB,KAChB,MAAMN,OAAiC,IAAnB3C,EAAIiD,GAA6BA,EAAY,GAAGA,MAAcZ,EAAwBrC,EAAIiD,GAAYV,MAC1H,OAAO8B,EAAS,GAAGA,KAAU1B,IAASA,CAAA,GACrC,IACG2B,EAAatE,EAAIoD,WAAapD,EAAIqD,SAAW,GAC7CkB,GAAoD,IAApCnC,EAAkBjC,QAAQrG,GAChD,MAAO,GAAGwI,KAAOxI,KAAQ+E,YAA2BuF,IAAgBG,EAAgB,KAAO,IAAID,MAAexK,MAAO,GACpH,IA+CqB0K,CAAqB1K,EAAMiJ,EAAMR,IAEzD,EA8DIkC,GAlCoB1K,IAChB,MAAA2K,QACJA,EAAAC,eACAA,EAAApC,OACAA,GAAS,EAAAqC,eACTA,EAAAC,aACAA,EAAAC,UACAA,EAAAjB,MACAA,EAAQ,GAAAE,gBACRA,EAAAgB,kBACAA,GACEhL,EACJ,IAAIiL,SAAEA,EAAAC,SAAUA,EAAUC,WAAAA,GAAenL,EACrCoL,EAAkB,CACpBxB,YAAa,OAEbxH,SAAU,IAAM,IAKX,OAHH4I,KACCI,kBAAiBH,WAAUC,WAAUC,cA7CnB,GAAGD,WAAUD,WAAUE,aAAY3C,aAC1D,MAAM6C,EAAO5D,EAAYyD,EAAUpH,GAC7BwH,EAAO7D,EAAYwD,EAAUnH,GAC7ByH,EAAS9D,EAAY0D,EAAYrH,GAgBhC,MAAA,CACLsH,gBAhBsB,CACtBxB,YAAa,IAAM,IACdb,EAA6B,OAAmBsC,EAAKpD,aACrDc,EAA6B,OAAmBuC,EAAKrD,aACrDc,EAA6B,SAAuBwC,EAAOtD,WAEhE7F,SAAU,IAAA,GAELuH,GAAiB,OAAmB0B,EAAKpD,SAAUO,MAAWmB,GAC/D,OACA2B,EAAKrD,SACLO,MACGmB,GAAiB,SAAuB4B,EAAOtD,SAAUO,MAKhE0C,SAAUG,EAAKnD,QACf+C,SAAUK,EAAKpD,QACfiD,WAAYI,EAAOrD,QACpB,EAqBwDsD,CAAmBxL,IAErE,CACLiI,SAAUmD,EACVK,KAAM9B,GAAiB,OAAmBgB,EAASnC,GACnDoC,eAAgBjB,GAAiB,iBAA6BiB,EAAgBpC,GAC9EqC,eAAgBlB,GAAiB,iBAA6BkB,EAAgBrC,GAC9E8C,KAAM3B,GAAiB,OAAmBsB,EAAUzC,GACpD6C,KAAM1B,GAAiB,OAAmBuB,EAAU1C,GACpDkD,SAAU/B,GAAiB,WAA2BmB,EAActC,GACpE+C,OAAQ5B,GAAiB,SAAuBwB,EAAY3C,GAC5DmD,MAAOhC,GAAiB,QAAqBoB,EAAWvC,GACxDsB,MAAOH,GAAiB,QAAqB,CAAEG,QAAOE,mBAAmBxB,GAC1E,EAKCoD,GAAY,GACZC,KAAkC,oBAAXC,SAA0BA,OAAOC,WAAYD,OAAOC,SAASrC,eACpFsC,GAAa,MAmBf,WAAA9K,CAAY+K,EAASC,GAlBrBC,EAAAC,KAAA,YAAY,IACAD,EAAAC,KAAA,YAAAP,IACZM,EAAAC,KAAA,WACQD,EAAAC,KAAA,QAAA,CACNC,UAAYC,IACVF,KAAKH,QAAQM,OAASD,CAAA,EAExBE,gBAAiB,CACfzK,IAAK,IAAMqK,KAAKF,UAAYN,GAAYQ,KAAKR,UAC7Ca,IAAMC,KACHN,KAAKF,UAAYN,GAAYQ,KAAKR,WAAW1E,KAAKwF,EAAQ,EAE7DC,OAASD,IACP,MAAMpF,GAAS8E,KAAKF,UAAYN,GAAYQ,KAAKR,WAAWxF,QAAQsG,IACnEN,KAAKF,UAAYN,GAAYQ,KAAKR,WAAWgB,OAAOtF,EAAO,EAAC,KAKjE8E,KAAKH,QAAUA,EACfG,KAAKF,UAAYA,IAAa,EACzBA,IACHD,EAAQM,OAAS7B,GAAe,CAC9BC,QAAS,GACTC,eAAgB,CAAE,EAClBtC,yBAAyB,EACzBuC,eAAgB,CAAE,EAClBI,SAAU,GACVC,SAAU,GACVJ,aAAc,GACdK,WAAY,GACZJ,UAAW,GACXjB,MAAO,GACPE,gBAAiB,CAAA,IAGzB,GAKI6C,GAAUC,EAAOC,cADF,CAAE,GAEjBC,IAAiBC,EAA8BC,cAAAA,YAGjD,WAAAhM,CAAYlB,GACVmN,MAAMnN,GAFRmM,EAAAC,KAAA,cAGOA,KAAAgB,WAAa,IAAIpB,GAAWI,KAAKpM,MAAMiM,SAAW,CAAA,EAAIgB,EAAgBf,UAC/E,CACE,MAAAmB,GACE,OAA8B5D,EAAAC,cAAcmD,GAAQS,SAAU,CAAExL,MAAOsK,KAAKgB,WAAWtL,OAASsK,KAAKpM,MAAMuN,SAC/G,GAREpB,EADmBc,EACZ,YAAYpB,IADAoB,GAiBjBO,GAAa,CAACzN,EAAMiJ,KAChB,MAAAyE,EAAc1B,SAAS2B,MAAQ3B,SAAS4B,cAAc,QACtDC,EAAWH,EAAYI,iBAAiB,GAAG9N,KAAQ+E,MACnDgJ,EAAU,GAAGC,MAAMnO,KAAKgO,GACxBI,EAAU,GACZ,IAAAC,EAkCG,OAjCHjF,GAAQA,EAAK7H,QACV6H,EAAA/B,SAAShB,IACN,MAAAiI,EAAanC,SAASrC,cAAc3J,GAC1C,IAAA,MAAWmJ,KAAajD,EACtB,GAAIxH,OAAOC,UAAUC,eAAeiB,KAAKqG,EAAKiD,GAC5C,GAAkB,cAAdA,EACFgF,EAAW7E,UAAYpD,EAAIoD,eACvC,GAAmC,YAAdH,EACLgF,EAAWC,WACFD,EAAAC,WAAW7E,QAAUrD,EAAIqD,QAEpC4E,EAAWE,YAAYrC,SAASsC,eAAepI,EAAIqD,cAEhD,CACL,MAAMV,EAAOM,EACPpH,OAA6B,IAAdmE,EAAI2C,GAAwB,GAAK3C,EAAI2C,GAC/CsF,EAAAI,aAAapF,EAAWpH,EAC/C,CAGiBoM,EAAAI,aAAaxJ,EAAkB,QACtCgJ,EAAQS,MAAK,CAACC,EAAalH,KACb2G,EAAA3G,EACT4G,EAAWO,YAAYD,MAEtBV,EAAAlB,OAAOqB,EAAe,GAE9BD,EAAQ9G,KAAKgH,EACrB,IAGUJ,EAAA7G,SAAShB,UAAQ,OAAA,OAAAgH,EAAAhH,EAAIyI,iBAAJ,EAAAzB,EAAgB0B,YAAY1I,EAAA,IACrD+H,EAAQ/G,SAAShB,GAAQwH,EAAYW,YAAYnI,KAC1C,CACL6H,UACAE,UACD,EAECY,GAAmB,CAACrI,EAASoC,KAC/B,MAAMkG,EAAa9C,SAAS+C,qBAAqBvI,GAAS,GAC1D,IAAKsI,EACH,OAEI,MAAAE,EAAwBF,EAAWG,aAAalK,GAChDmK,EAAmBF,EAAwBA,EAAsBG,MAAM,KAAO,GAC9EC,EAAqB,IAAIF,GACzBG,EAAgB3Q,OAAO4C,KAAKsH,GAClC,IAAA,MAAWO,KAAakG,EAAe,CAC/B,MAAAtN,EAAQ6G,EAAWO,IAAc,GACnC2F,EAAWG,aAAa9F,KAAepH,GAC9B+M,EAAAP,aAAapF,EAAWpH,IAEW,IAA5CmN,EAAiB7I,QAAQ8C,IAC3B+F,EAAiB/H,KAAKgC,GAElB,MAAAmG,EAAcF,EAAmB/I,QAAQ8C,IACvB,IAApBmG,GACiBF,EAAAvC,OAAOyC,EAAa,EAE7C,CACE,IAAA,IAASjO,EAAI+N,EAAmBhO,OAAS,EAAGC,GAAK,EAAGA,GAAK,EAC5CyN,EAAAS,gBAAgBH,EAAmB/N,IAE5C6N,EAAiB9N,SAAWgO,EAAmBhO,OACjD0N,EAAWS,gBAAgBxK,GAClB+J,EAAWG,aAAalK,KAAsBsK,EAAc/J,KAAK,MAC1EwJ,EAAWP,aAAaxJ,EAAkBsK,EAAc/J,KAAK,KACjE,EAQIkK,GAAmB,CAACC,EAAUC,KAC1B,MAAA9E,QACJA,EAAAC,eACAA,EAAAC,eACAA,EAAAI,SACAA,EAAAC,SACAA,EAAAJ,aACAA,EAAA4E,oBACAA,EAAAvE,WACAA,EAAAJ,UACAA,EAAAjB,MACAA,EAAAE,gBACAA,GACEwF,EACJZ,GAAiB,OAAmBhE,GACpCgE,GAAiB,OAAmB/D,GArBpB,EAACf,EAAOnB,UACH,IAAVmB,GAAyBiC,SAASjC,QAAUA,IAC5CiC,SAAAjC,MAAQvC,EAAauC,IAEhC8E,GAAiB,QAAqBjG,EAAU,EAkBhDgH,CAAY7F,EAAOE,GACnB,MAAM4F,EAAa,CACjBjF,QAAS6C,GAAW,OAAmB7C,GACvCM,SAAUuC,GAAW,OAAmBvC,GACxCC,SAAUsC,GAAW,OAAmBtC,GACxCJ,aAAc0C,GAAW,WAA2B1C,GACpDK,WAAYqC,GAAW,SAAuBrC,GAC9CJ,UAAWyC,GAAW,QAAqBzC,IAEvC8E,EAAY,CAAE,EACdC,EAAc,CAAE,EACtBrR,OAAO4C,KAAKuO,GAAY3I,SAASxB,IAC/B,MAAMuI,QAAEA,EAAAF,QAASA,GAAY8B,EAAWnK,GACpCuI,EAAQ7M,SACV0O,EAAUpK,GAAWuI,GAEnBF,EAAQ3M,SACV2O,EAAYrK,GAAWmK,EAAWnK,GAASqI,QACjD,IAEM2B,GACEA,IAEcC,EAAAF,EAAUK,EAAWC,EAAW,EAElDC,GAAkB,KAgBlBC,GAf6BR,IAC3BO,IACFE,qBAAqBF,IAEnBP,EAASU,MACXH,GAAkBI,uBAAsB,KACtCZ,GAAiBC,GAAU,KACPO,GAAA,IAAA,GACnB,KAGHR,GAAiBC,GACCO,GAAA,KACtB,EAKIK,GAAmB,cAAcC,EAAAA,UAAd,WAAAnP,GAAAiM,SAAAmD,WACVnE,EAAAC,KAAA,YAAA,EAAA,CACX,qBAAAmE,CAAsBC,GACpB,OAAQC,EAAaD,EAAWpE,KAAKpM,MACzC,CACE,kBAAA0Q,GACEtE,KAAKuE,YACT,CACE,oBAAAC,GACE,MAAMpE,gBAAEA,GAAoBJ,KAAKpM,MAAMiM,QACvCO,EAAgBG,OAAOP,MACvBA,KAAKuE,YACT,CACE,UAAAA,GACE,MAAMnE,gBAAEA,EAAAH,UAAiBA,GAAcD,KAAKpM,MAAMiM,QAClD,IAAIK,EAAc,KAClB,MAAMuE,GAlbgB5L,EAmbpBuH,EAAgBzK,MAAM4D,KAAK+G,IACzB,MAAM1M,EAAQ,IAAK0M,EAAS1M,OAErB,cADAA,EAAMiM,QACNjM,CAAA,IAtb0B,CACvC2K,QAAS9E,EAAwB,CAAC,QAAoBZ,GACtD2F,eAAgBpF,EAA2B,iBAA6BP,GACxEiL,MAAOlL,EAAqBC,EAAWF,GACvCyD,OAAQxD,EAAqBC,EAAWF,GACxC8F,eAAgBrF,EAA2B,iBAA6BP,GACxEgG,SAAU3E,EACR,OACA,CAAC,MAAiB,QAClBrB,GAEFiG,SAAU5E,EACR,OACA,CACE,OACA,UACA,aACA,WACA,YAEFrB,GAEF6F,aAAcxE,EAAqB,WAA2B,CAAC,aAA+BrB,GAC9FyK,oBAAqBnK,EAAuBN,GAC5CkG,WAAY7E,EACV,SACA,CAAC,MAAiB,aAClBrB,GAEF8F,UAAWzE,EAAqB,QAAqB,CAAC,WAA2BrB,GACjF6E,MAAO5E,EAAsBD,GAC7B+E,gBAAiBxE,EAA2B,kBAA+BP,GAC3E+F,kBAAmB5D,EAAwBnC,EAAWF,KAhC/B,IAACE,EAyblB+H,GAAed,UACjB8D,GAAea,GACNnG,KACT4B,EAAc5B,GAAemG,IAE/BxE,EAAUC,EACd,CAIE,IAAAwE,GACE,GAAI1E,KAAK2E,SACP,OAEF3E,KAAK2E,UAAW,EAChB,MAAMvE,gBAAEA,GAAoBJ,KAAKpM,MAAMiM,QACvCO,EAAgBC,IAAIL,MACpBA,KAAKuE,YACT,CACE,MAAAtD,GAES,OADPjB,KAAK0E,OACE,IACX,GAIIE,IAASC,EAAcC,cAAAA,EAAAA,UAMzB,qBAAAX,CAAsBC,GACb,OAACW,EAAYhJ,EAAQiE,KAAKpM,MAAO,cAAemI,EAAQqI,EAAW,cAC9E,CACE,wBAAAY,CAAyBC,EAAOC,GAC9B,IAAKA,EACI,OAAA,KAET,OAAQD,EAAMtR,MACZ,IAAK,SACL,IAAK,WACI,MAAA,CACLsJ,UAAWiI,GAEf,IAAK,QACI,MAAA,CACLhI,QAASgI,GAEb,QACE,MAAM,IAAI5O,MACR,IAAI2O,EAAMtR,0GAGpB,CACE,wBAAAwR,CAAyBF,EAAOG,EAAmBC,EAAeH,GACzD,MAAA,IACFE,EACH,CAACH,EAAMtR,MAAO,IACTyR,EAAkBH,EAAMtR,OAAS,GACpC,IACK0R,KACArF,KAAKgF,yBAAyBC,EAAOC,KAIlD,CACE,qBAAAI,CAAsBL,EAAOM,EAAUF,EAAeH,GACpD,OAAQD,EAAMtR,MACZ,IAAK,QACI,MAAA,IACF4R,EACH,CAACN,EAAMtR,MAAOuR,EACdtH,gBAAiB,IAAKyH,IAE1B,IAAK,OACI,MAAA,IACFE,EACH/G,eAAgB,IAAK6G,IAEzB,IAAK,OACI,MAAA,IACFE,EACH9G,eAAgB,IAAK4G,IAEzB,QACS,MAAA,IACFE,EACH,CAACN,EAAMtR,MAAO,IAAK0R,IAG7B,CACE,2BAAAG,CAA4BJ,EAAmBG,GACzC,IAAAE,EAAoB,IAAKF,GAOtB,OANPlT,OAAO4C,KAAKmQ,GAAmBvK,SAAS6K,IAClBD,EAAA,IACfA,EACHC,CAACA,GAAiBN,EAAkBM,GACrC,IAEID,CACX,CACE,qBAAAE,CAAsBV,EAAOC,GAWpB,OAVPU,EACE9N,EAAgBqK,MAAMzL,GAASuO,EAAMtR,OAAS+C,IACxB,mBAAfuO,EAAMtR,KAAsB,oIAAsI,uBAAuBmE,EAAgBmB,KAC9M,yDACmDgM,EAAMtR,0DAE7DiS,GACGV,GAA4C,iBAAnBA,GAA+B/P,MAAMC,QAAQ8P,KAAoBA,EAAe/C,MAAM0D,GAAuC,iBAAhBA,IACvI,0CAA0CZ,EAAMtR,6DAA6DsR,EAAMtR,gBAAgBsR,EAAMtR,mDAEpI,CACX,CACE,kBAAAmS,CAAmB3E,EAAUoE,GAC3B,IAAIH,EAAoB,CAAE,EAqCnB,OApCPW,EAAOC,SAASnL,QAAQsG,GAAW8D,IACjC,IAAKA,IAAUA,EAAMrR,MACnB,OAEF,MAAQuN,SAAU+D,KAAmBe,GAAehB,EAAMrR,MACpDyR,EAAgBhT,OAAO4C,KAAKgR,GAAYzN,QAAO,CAACwD,EAAKpJ,KACzDoJ,EAAIzD,EAAa3F,IAAQA,GAAOqT,EAAWrT,GACpCoJ,IACN,IACC,IAAArI,KAAEA,GAASsR,EAMf,OALoB,iBAATtR,EACTA,EAAOA,EAAKqC,WAEPgK,KAAA2F,sBAAsBV,EAAOC,GAE5BvR,GACN,IAAK,yBACQ4R,EAAAvF,KAAK8F,mBAAmBZ,EAAgBK,GACnD,MACF,IAAK,OACL,IAAK,OACL,IAAK,WACL,IAAK,SACL,IAAK,QACHH,EAAoBpF,KAAKmF,yBACvBF,EACAG,EACAC,EACAH,GAEF,MACF,QACEK,EAAWvF,KAAKsF,sBAAsBL,EAAOM,EAAUF,EAAeH,GAEhF,IAEWlF,KAAKwF,4BAA4BJ,EAAmBG,EAC/D,CACE,MAAAtE,GACE,MAAME,SAAEA,KAAavN,GAAUoM,KAAKpM,MAChC,IAAA2R,EAAW,IAAK3R,IAChBoN,WAAEA,GAAepN,EAIjB,GAHAuN,IACSoE,EAAAvF,KAAK8F,mBAAmB3E,EAAUoE,IAE3CvE,KAAgBA,aAAsBpB,IAAa,CAErDoB,EAAa,IAAIpB,GADJoB,EACoBnB,SAAS,UACnC0F,EAASvE,UACtB,CACW,OAAAA,EAAoC3D,EAAAC,cAAc0G,GAAkB,IAAKuB,EAAU1F,QAASmB,EAAWtL,QAA2BqQ,EAAOzI,cAAcmD,GAAQyF,SAAU,MAAOrG,GAAmCxC,EAAAC,cAAc0G,GAAkB,IAAKuB,EAAU1F,aAC7Q,GA7IEE,EADW8E,EACJ,eAAe,CACpBf,OAAO,EACP5H,yBAAyB,EACzB0C,mBAAmB,IAJViG,GCvoBb,SAASsB,GAA8BC,GAC/B,GAAiB,oBAAVC,MACA,OAAAD,EAML,MAAAE,MAAqB/R,IAOpB,OAAA,IAAI8R,OANuB,IAAI9P,IAI3B6P,KAAoB7P,IAEa,CAMxCZ,IAAK,CAAC4Q,EAAS3T,IACC,WAARA,EACOwT,GAINE,EAAe7Q,IAAI7C,IACpB0T,EAAeE,IAAI5T,EAAKwT,EAAiBxT,IAEtC0T,EAAe3Q,IAAI/C,KAGtC,CCnCA,SAAS6T,GAAoBC,GACzB,OAAc,OAANA,GACS,iBAANA,GACY,mBAAZA,EAAEC,KACjB,CCJA,MAAMC,GAAqBF,GAChBvR,MAAMC,QAAQsR,GCDzB,SAASG,GAAetR,EAAMuR,GACtB,IAAC3R,MAAMC,QAAQ0R,GACR,OAAA,EACX,MAAMC,EAAaD,EAAK/R,OACxB,GAAIgS,IAAexR,EAAKR,OACb,OAAA,EACX,IAAA,IAASC,EAAI,EAAGA,EAAI+R,EAAY/R,IAC5B,GAAI8R,EAAK9R,KAAOO,EAAKP,GACV,OAAA,EAER,OAAA,CACX,CCRA,SAASgS,GAAeN,GACpB,MAAoB,iBAANA,GAAkBvR,MAAMC,QAAQsR,EAClD,CCLA,SAASO,GAAcC,GACnB,MAAMzC,EAAQ,CAAC,CAAE,EAAE,IAKZ,OAJWyC,SAA4CA,EAAcnP,OAAO8C,SAAQ,CAACnF,EAAO9C,KAC/F6R,EAAM,GAAG7R,GAAO8C,EAAMC,MACtB8O,EAAM,GAAG7R,GAAO8C,EAAMyR,aAAa,IAEhC1C,CACX,CACA,SAAS2C,GAAwBxT,EAAOyT,EAAYC,EAAQJ,GAIpD,GAAsB,mBAAfG,EAA2B,CAClC,MAAOvT,EAASyT,GAAYN,GAAcC,GAC1CG,EAAaA,OAAsB,IAAXC,EAAuBA,EAAS1T,EAAM0T,OAAQxT,EAASyT,EACvF,CAaQ,GARsB,iBAAfF,IACPA,EAAazT,EAAM4T,UAAY5T,EAAM4T,SAASH,IAOxB,mBAAfA,EAA2B,CAClC,MAAOvT,EAASyT,GAAYN,GAAcC,GAC1CG,EAAaA,OAAsB,IAAXC,EAAuBA,EAAS1T,EAAM0T,OAAQxT,EAASyT,EACvF,CACW,OAAAF,CACX,CC/BA,SAASI,GAAeP,EAAeG,EAAYC,GACzC,MAAA1T,EAAQsT,EAAcQ,WACrB,OAAAN,GAAwBxT,EAAOyT,OAAuB,IAAXC,EAAuBA,EAAS1T,EAAM0T,OAAQJ,EACpG,CCLA,MAAMS,GAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,GAAe,CAAC,aAAcD,ICN9BE,GAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,GAAiB,IAAIrT,IAAIoT,ICnBzBE,GAAyBC,GAAsB,IAAVA,EACrCC,GAAyBC,GAAiBA,EAAe,ICLzDC,GAAoB,CACtBxU,KAAM,SACNyU,UAAW,IACXC,QAAS,GACTC,UAAW,IAQTC,GAAsB,CACxB5U,KAAM,YACN6U,SAAU,IAMRC,GAAO,CACT9U,KAAM,YACN8U,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBD,SAAU,IAERE,GAAuB,CAACC,GAAYC,UAAAA,KAClCA,EAAU7T,OAAS,EACZwT,GAEFT,GAAerS,IAAIkT,GACjBA,EAASE,WAAW,SAxBS,CACxClV,KAAM,SACNyU,UAAW,IACXC,QAAoB,IAsBaO,EAAU,GAtBnB,EAAIE,KAAKC,KAAK,KAAO,GAC7CT,UAAW,IAsBDH,GAEHM,GCpCX,SAASO,GAAmBC,EAAYrW,GACpC,OAAOqW,EACDA,EAAWrW,IACTqW,EAAoB,SACpBA,OACF,CACV,CCNA,MAAMC,IAEe,ECFfC,GAAazT,GAAoB,OAAVA,EAC7B,SAAS0T,GAAiBR,GAAWS,OAAEA,aAAQC,EAAa,QAAUC,GAC5D,MAAAC,EAAoBZ,EAAUtP,OAAO6P,IACrCjO,EAAQmO,GAAyB,SAAfC,GAAyBD,EAAS,GAAM,EAC1D,EACAG,EAAkBzU,OAAS,EACjC,OAAQmG,QAA2B,IAAlBqO,EAEXA,EADAC,EAAkBtO,EAE5B,CCTA,MAAMuO,GAAQC,GAAQA,ECGtB,MAAMC,GAAa,CACf,OACA,mBACA,SACA,YACA,SACA,cAGJ,SAASC,GAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAMvF,EAAQ,CACVwF,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZC,EAAmB,IAAOL,GAAe,EACzCM,EAAQV,GAAWnR,QAAO,CAACgD,EAAK5I,KAC9B4I,EAAA5I,GCtBZ,SAA0BmX,GAKlB,IAAAO,MAAgB7V,IAChB8V,MAAgB9V,IAKhB0V,GAAe,EACfK,GAAiB,EAIf,MAAAC,MAAkBC,QACxB,IAAIC,EAAkB,CAClBV,MAAO,EACPC,UAAW,EACXC,cAAc,GAElB,SAASS,EAAgBC,GACjBJ,EAAYhV,IAAIoV,KAChBC,EAAKC,SAASF,GACAd,KAElBc,EAASF,EACjB,CACI,MAAMG,EAAO,CAITC,SAAU,CAACF,EAAUG,GAAY,EAAOC,GAAY,KAChD,MACMC,EADoBD,GAAad,EACLG,EAAYC,EAKvC,OAJHS,GACAP,EAAYpK,IAAIwK,GACfK,EAAMzV,IAAIoV,IACXK,EAAM7K,IAAIwK,GACPA,CAAA,EAKXM,OAASN,IACLN,EAAUa,OAAOP,GACjBJ,EAAYW,OAAOP,EAAQ,EAK/BQ,QAAUC,IACYA,EAAAA,EAMdnB,EACiBK,GAAA,GAGNL,GAAA,GACdG,EAAWC,GAAa,CAACA,EAAWD,GAErCC,EAAUgB,QAEVjB,EAAUzP,QAAQ+P,GACHT,GAAA,EACXK,IACiBA,GAAA,EACjBM,EAAKO,QAAQC,IAC7B,GAGW,OAAAR,CACX,CDvDmBU,CAAiBpB,GACrB5O,IACR,KACGiQ,KAAEA,EAAMC,iBAAAA,EAAAC,OAAkBA,YAAQC,EAAW3K,OAAAA,EAAA4K,WAAQA,GAAexB,EACpEyB,EAAe,KACX,MAAA5B,EAEA6B,YAAYC,MACHjC,GAAA,EACftF,EAAMwF,MAAQD,EACR,IAAO,GACPlB,KAAKmD,IAAInD,KAAKoD,IAAIhC,EAAYzF,EAAMyF,UAtB/B,IAsBuD,GAClEzF,EAAMyF,UAAYA,EAClBzF,EAAM0F,cAAe,EAErBsB,EAAKJ,QAAQ5G,GACbiH,EAAiBL,QAAQ5G,GACzBkH,EAAON,QAAQ5G,GACfmH,EAAUP,QAAQ5G,GAClBxD,EAAOoK,QAAQ5G,GACfoH,EAAWR,QAAQ5G,GACnBA,EAAM0F,cAAe,EACjBJ,GAAgBD,IACIE,GAAA,EACpBH,EAAkBiC,GAC9B,EAuBI,MAAO,CAAEf,SAdQpB,GAAWnR,QAAO,CAACgD,EAAK5I,KAC/B,MAAAkY,EAAOT,EAAMzX,GAMZ,OALP4I,EAAI5I,GAAO,CAACyY,EAASL,GAAY,EAAOC,GAAY,KAC3ClB,IATMA,GAAA,EACKC,GAAA,EACfvF,EAAM0F,cACPN,EAAkBiC,IAQXhB,EAAKC,SAASM,EAASL,EAAWC,IAEtCzP,CAAA,GACR,IAMgB2P,OALHE,IACZ,IAAA,IAASrW,EAAI,EAAGA,EAAI2U,GAAW5U,OAAQC,IACnCqV,EAAMV,GAAW3U,IAAImW,OAAOE,EACxC,EAE+B5G,QAAO4F,QACtC,CEpEA,MAAQU,SAAUoB,GAAOhB,OAAQiB,GAAa3H,MAAO6G,GAAWjB,MAAOgC,IAAgBzC,GAAqD,oBAA1B7F,sBAAwCA,sBAAwB0F,IAAM,GCiBlL6C,GAAa,CAACtO,EAAGuO,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMvO,GAAK,EAAMwO,EAAK,EAAMD,IAAOvO,EAAI,EAAMuO,GACrGvO,EAoBJ,SAASyO,GAAYC,EAAKC,EAAKC,EAAKC,GAE5B,GAAAH,IAAQC,GAAOC,IAAQC,EAChB,OAAApD,GACL,MAAAqD,EAAYC,GArBtB,SAAyBC,EAAGC,EAAYC,EAAYR,EAAKE,GACjD,IAAAO,EACAC,EACApY,EAAI,EACL,GACYoY,EAAAH,GAAcC,EAAaD,GAAc,EACpDE,EAAWb,GAAWc,EAAUV,EAAKE,GAAOI,EACxCG,EAAW,EACED,EAAAE,EAGAH,EAAAG,QAEZtE,KAAKuE,IAAIF,GAfO,QAgBnBnY,EAfuB,IAgBtB,OAAAoY,CACX,CAK6BE,CAAgBP,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQ5O,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAIsO,GAAWQ,EAAS9O,GAAI2O,EAAKE,EACxE,CC9CA,MAAMU,GAAgBC,GAAY7a,GAAMA,GAAK,GAAM6a,EAAO,EAAI7a,GAAK,GAAK,EAAI6a,EAAO,GAAK,EAAI7a,KAAO,ECA7F8a,GAAiBD,GAAY7a,GAAM,EAAI6a,EAAO,EAAI7a,GCElD+a,GAAwBjB,GAAY,IAAM,KAAM,IAAM,KACtDkB,MAAqCD,IACrCE,MAAuCD,ICJvCE,GAAclb,IAAOA,GAAK,GAAK,EAAI,GAAMgb,GAAOhb,GAAK,IAAO,EAAImW,KAAKgF,IAAI,GAAG,IAAOnb,EAAI,KCCvFob,GAAUpb,GAAM,EAAImW,KAAKkF,IAAIlF,KAAKmF,KAAKtb,IACvCub,GAAUT,GAAcM,IACxBI,GAAYZ,GAAaQ,ICFzBK,GAAqB1H,GAAM,cAAc2H,KAAK3H,GCApD,IAAId,GAAY6D,GCAhB,MAAM6E,GAAqB5H,GAAM,+BAA+B2H,KAAK3H,GCH/D6H,GAAyBC,GAAW5b,GAAuB,iBAARA,GAAoBA,EAAIiW,WAAW2F,GACtFC,MAC8B,MAC9BC,MAC8B,UAC9BC,GAAsBjZ,KACAgZ,GAAsBhZ,IAIvCkZ,GAAuBP,KAAK3Y,EAAMoN,MAAM,MAAM,GAAG+L,QAEtDD,GAAyB,sFCCzBE,GAAA,2DAWN,SAASC,GAAiBjb,EAASkb,EAASC,EAAQ,GAEhD,MAAOT,EAAOU,GAVlB,SAA0Bpb,GAChB,MAAAqC,EAAQ2Y,GAAsBK,KAAKrb,GACzC,IAAKqC,EACD,MAAO,CAAG,GACd,OAASiZ,EAAQC,EAAQH,GAAY/Y,EAC9B,MAAA,CAAC,KAAKiZ,QAAuCA,EAASC,IAAUH,EAC3E,CAI8BI,CAAiBxb,GAE3C,IAAK0a,EACD,OAEJ,MAAMe,EAAW7P,OAAO8P,iBAAiBR,GAASS,iBAAiBjB,GACnE,GAAIe,EAAU,CACJ,MAAAG,EAAUH,EAASV,OACzB,OAAOP,GAAkBoB,GAAWC,WAAWD,GAAWA,CAClE,CACW,OAAAf,GAAmBO,GACpBH,GAAiBG,EAAUF,EAASC,EAAQ,GAC5CC,CACV,CCvCA,MAAMU,GAAQ,CAAC1D,EAAKD,EAAKvF,IACjBA,EAAIuF,EACGA,EACPvF,EAAIwF,EACGA,EACJxF,ECHLmJ,GAAS,CACXxB,KAAO3H,GAAmB,iBAANA,EACpBoJ,MAAOH,WACPI,UAAYrJ,GAAMA,GAEhBsJ,GAAQ,IACPH,GACHE,UAAYrJ,GAAMkJ,GAAM,EAAG,EAAGlJ,IAE5BuJ,GAAQ,IACPJ,GACH/T,QAAS,GCbPoU,GAAkBC,IAAU,CAC9B9B,KAAO3H,GAAmB,iBAANA,GAAkBA,EAAE0J,SAASD,IAAiC,IAAxBzJ,EAAE5D,MAAM,KAAK/N,OACvE+a,MAAOH,WACPI,UAAYrJ,GAAM,GAAGA,IAAIyJ,MAEvBE,MAAuC,OACvCC,MAAuC,KACvCC,MAAkC,MAClCC,MAAkC,MAClCC,MAAkC,MAClCC,GAAqB,IACpBJ,GACHR,MAAQpJ,GAAM4J,GAAQR,MAAMpJ,GAAK,IACjCqJ,UAAYrJ,GAAM4J,GAAQP,UAAc,IAAJrJ,ICTlCiK,OAAqBlc,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEEmc,GAAiBlK,GAAMA,IAAMmJ,IAAUnJ,IAAM6J,GAC7CM,GAAmB,CAACC,EAAQC,IAAQpB,WAAWmB,EAAOhO,MAAM,MAAMiO,IAClEC,GAAyB,CAACC,EAAMC,IAAS,CAACC,GAASpB,gBACjD,GAAc,SAAdA,IAAyBA,EAClB,OAAA,EACL,MAAAqB,EAAWrB,EAAU5Z,MAAM,uBACjC,GAAIib,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACK,MAAAJ,EAASf,EAAU5Z,MAAM,qBAC/B,OAAI2a,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEnB,GAEMI,GAAoB,IAAA5c,IAAI,CAAC,IAAK,IAAK,MACnC6c,GAAgCzJ,GAAmBvO,QAAQ1G,IAASye,GAAc5b,IAAI7C,KAY5F,MAAM2e,GAAmB,CAErBC,MAAO,EAAGxE,MAAOyE,cAAc,IAAKC,eAAe,OAAU1E,EAAEf,IAAMe,EAAEd,IAAMyD,WAAW8B,GAAe9B,WAAW+B,GAClHC,OAAQ,EAAGC,MAAOC,aAAa,IAAKC,gBAAgB,OAAUF,EAAE3F,IAAM2F,EAAE1F,IAAMyD,WAAWkC,GAAclC,WAAWmC,GAClHC,IAAK,CAACZ,GAASY,SAAUpC,WAAWoC,GACpCC,KAAM,CAACb,GAASa,UAAWrC,WAAWqC,GACtCC,OAAQ,EAAGL,MAAOG,SAAUpC,WAAWoC,IAAQH,EAAE3F,IAAM2F,EAAE1F,KACzDgG,MAAO,EAAGlF,MAAOgF,UAAWrC,WAAWqC,IAAShF,EAAEf,IAAMe,EAAEd,KAE1Dc,EAAGgE,GAAuB,EAAG,IAC7BY,EAAGZ,GAAuB,EAAG,KAGjCO,GAAiBY,WAAaZ,GAAiBvE,EAC/CuE,GAAiBa,WAAab,GAAiBK,EC3D/C,MAAMS,GAAiB3L,GAAO/S,GAASA,EAAK0a,KAAK3H,GCK3C4L,GAAsB,CAACzC,GAAQU,GAAID,GAASD,GAASI,GAAID,GCLlD,CACTnC,KAAO3H,GAAY,SAANA,EACboJ,MAAQpJ,GAAMA,IDOZ6L,GAA0B7L,GAAM4L,GAAoBE,KAAKH,GAAc3L,IETvE+L,OAAgBhe,IACtB,IAAIie,IAAc,EACdC,IAAsB,EAC1B,SAASC,KACL,GAAID,GAAqB,CACf,MAAAE,EAAqB1d,MAAM2d,KAAKL,IAAWnZ,QAAQyZ,GAAaA,EAASC,mBACzEC,EAAoB,IAAIxe,IAAIoe,EAAmBtZ,KAAKwZ,GAAaA,EAAS/D,WAC1EkE,MAA0B3e,IAKd0e,EAAApY,SAASmU,IACjB,MAAAmE,EJqBlB,SAAyCjM,GACrC,MAAMiM,EAAoB,GAQnB,OAPuB7B,GAAAzW,SAASjI,IAC7B,MAAA8C,EAAQwR,EAAckM,SAASxgB,QACvB,IAAV8C,IACAyd,EAAkBrY,KAAK,CAAClI,EAAK8C,EAAMC,QACnCD,EAAM8Q,IAAI5T,EAAIiW,WAAW,SAAW,EAAI,GACpD,IAEWsK,CACX,CI/BsCE,CAAgCrE,GACrDmE,EAAkBpe,SAEHme,EAAA1M,IAAIwI,EAASmE,GACjCnE,EAAQ/N,SAAQ,IAGpB4R,EAAmBhY,SAASkY,GAAaA,EAASO,wBAEhCL,EAAApY,SAASmU,IACvBA,EAAQ/N,SACF,MAAAsS,EAAUL,EAAoBvd,IAAIqZ,GACpCuE,GACAA,EAAQ1Y,SAAQ,EAAEjI,EAAK8C,MACfmL,IAAAA,EAC6B,QAAhCA,EAAKmO,EAAQoE,SAASxgB,UAAyB,IAAPiO,GAAyBA,EAAG2F,IAAI9Q,EAAK,GAElG,IAGQmd,EAAmBhY,SAASkY,GAAaA,EAASS,oBAE/BX,EAAAhY,SAASkY,SACU,IAA9BA,EAASU,kBACF/T,OAAAgU,SAAS,EAAGX,EAASU,iBAC5C,GAEA,CAC0Bd,IAAA,EACRD,IAAA,EACdD,GAAU5X,SAASkY,GAAaA,EAASY,aACzClB,GAAUlH,OACd,CACA,SAASqI,KACKnB,GAAA5X,SAASkY,IACfA,EAASc,gBACLd,EAASC,mBACaL,IAAA,EAClC,GAEA,CAKA,MAAMmB,GACF,WAAAhf,CAAYif,EAAqBC,EAAYtd,EAAMud,EAAajF,EAASkF,GAAU,GAK/ElU,KAAKmU,YAAa,EAMlBnU,KAAKkU,SAAU,EAKflU,KAAKgT,kBAAmB,EAKxBhT,KAAK0S,aAAc,EACd1S,KAAA+T,oBAAsB,IAAIA,GAC/B/T,KAAKgU,WAAaA,EAClBhU,KAAKtJ,KAAOA,EACZsJ,KAAKiU,YAAcA,EACnBjU,KAAKgP,QAAUA,EACfhP,KAAKkU,QAAUA,CACvB,CACI,eAAAE,GACIpU,KAAK0S,aAAc,EACf1S,KAAKkU,SACLzB,GAAUpS,IAAIL,MACT0S,KACaA,IAAA,EACdvG,GAAMV,KAAKmI,IACXzH,GAAMT,iBAAiBkH,OAI3B5S,KAAK6T,gBACL7T,KAAK2T,WAEjB,CACI,aAAAE,GACI,MAAME,oBAAEA,EAAqBrd,KAAAA,EAAAsY,QAAMA,EAASiF,YAAAA,GAAgBjU,KAK5D,IAAA,IAAShL,EAAI,EAAGA,EAAI+e,EAAoBhf,OAAQC,IACxC,GAA2B,OAA3B+e,EAAoB/e,GAIpB,GAAU,IAANA,EAAS,CACT,MAAMqf,EAAeJ,aAAiD,EAASA,EAAYte,MACrF4T,EAAgBwK,EAAoBA,EAAoBhf,OAAS,GACvE,QAAqB,IAAjBsf,EACAN,EAAoB,GAAKM,OACjD,GAC6BrF,GAAWtY,EAAM,CACtB,MAAM4d,EAActF,EAAQuF,UAAU7d,EAAM6S,GACxC+K,UACAP,EAAoB,GAAKO,EAErD,MACmD,IAA3BP,EAAoB,KACpBA,EAAoB,GAAKxK,GAEzB0K,QAAgC,IAAjBI,GACfJ,EAAYzN,IAAIuN,EAAoB,GAE5D,MAEoBA,EAAoB/e,GAAK+e,EAAoB/e,EAAI,EAIrE,CACI,gBAAAwf,GAAmB,CACnB,mBAAAlB,GAAsB,CACtB,eAAAmB,GAAkB,CAClB,eAAAjB,GAAkB,CAClB,QAAAG,GACI3T,KAAKmU,YAAa,EAClBnU,KAAKgU,WAAWhU,KAAK+T,oBAAqB/T,KAAKuJ,eAC/CkJ,GAAUrH,OAAOpL,KACzB,CACI,MAAAmL,GACSnL,KAAKmU,aACNnU,KAAK0S,aAAc,EACnBD,GAAUrH,OAAOpL,MAE7B,CACI,MAAA0U,GACS1U,KAAKmU,YACNnU,KAAKoU,iBACjB,EC9JA,MAAMO,GAAYjO,GAAMoC,KAAK8L,MAAU,IAAJlO,GAAc,ICF3CmO,GAAa,8BCAnB,MAAMC,GAAmB,sHCQnBC,GAAgB,CAACphB,EAAMqhB,IAActO,GAChCuO,QAAsB,iBAANvO,GACnBoO,GAAiBzG,KAAK3H,IACtBA,EAAEmC,WAAWlV,IACZqhB,ICZT,SAAmBtO,GACf,OAAY,MAALA,CACX,CDWawO,CAAUxO,IACXrU,OAAOC,UAAUC,eAAeiB,KAAKkT,EAAGsO,IAE9CG,GAAa,CAACC,EAAOC,EAAOC,IAAW5O,IACzC,GAAiB,iBAANA,EACA,OAAAA,EACL,MAACxT,EAAGE,EAAGH,EAAG+c,GAAStJ,EAAEvQ,MAAM0e,IAC1B,MAAA,CACHO,CAACA,GAAQzF,WAAWzc,GACpBmiB,CAACA,GAAQ1F,WAAWvc,GACpBkiB,CAACA,GAAQ3F,WAAW1c,GACpB+c,WAAiB,IAAVA,EAAsBL,WAAWK,GAAS,EACpD,EEnBCuF,GAAU,IACT1F,GACHE,UAAYrJ,GAAMoC,KAAK8L,MAHN,CAAClO,GAAMkJ,GAAM,EAAG,IAAKlJ,GAGT8O,CAAa9O,KAExC+O,GAAO,CACTpH,KAAkC0G,GAAA,MAAO,OACzCjF,MAAqBqF,GAAW,MAAO,QAAS,QAChDpF,UAAW,EAAG2F,MAAKC,QAAOC,OAAM5F,MAAO6F,EAAU,KAAQ,QACrDN,GAAQxF,UAAU2F,GAClB,KACAH,GAAQxF,UAAU4F,GAClB,KACAJ,GAAQxF,UAAU6F,GAClB,KACAjB,GAAS3E,GAAMD,UAAU8F,IACzB,KCYR,MAAMC,GAAM,CACRzH,QAAkC,KAClCyB,MAhCJ,SAAkBpJ,GACd,IAAIqP,EAAI,GACJ5iB,EAAI,GACJC,EAAI,GACJF,EAAI,GAmBD,OAjBHwT,EAAE3R,OAAS,GACPghB,EAAArP,EAAEsP,UAAU,EAAG,GACf7iB,EAAAuT,EAAEsP,UAAU,EAAG,GACf5iB,EAAAsT,EAAEsP,UAAU,EAAG,GACf9iB,EAAAwT,EAAEsP,UAAU,EAAG,KAIfD,EAAArP,EAAEsP,UAAU,EAAG,GACf7iB,EAAAuT,EAAEsP,UAAU,EAAG,GACf5iB,EAAAsT,EAAEsP,UAAU,EAAG,GACf9iB,EAAAwT,EAAEsP,UAAU,EAAG,GACdD,GAAAA,EACA5iB,GAAAA,EACAC,GAAAA,EACAF,GAAAA,GAEF,CACHwiB,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAAS9iB,EAAG,IACnByiB,KAAMK,SAAS7iB,EAAG,IAClB4c,MAAO9c,EAAI+iB,SAAS/iB,EAAG,IAAM,IAAM,EAE3C,EAII6c,UAAW0F,GAAK1F,WC/BdmG,GAAO,CACT7H,KAAkC0G,GAAA,MAAO,OACzCjF,MAAqBqF,GAAW,MAAO,aAAc,aACrDpF,UAAW,EAAGoG,MAAKC,aAAYC,YAAWrG,MAAO6F,EAAU,KAC/C,QACJ/M,KAAK8L,MAAMuB,GACX,KACA7F,GAAQP,UAAU4E,GAASyB,IAC3B,KACA9F,GAAQP,UAAU4E,GAAS0B,IAC3B,KACA1B,GAAS3E,GAAMD,UAAU8F,IACzB,KCbNS,GAAQ,CACVjI,KAAO3H,GAAM+O,GAAKpH,KAAK3H,IAAMoP,GAAIzH,KAAK3H,IAAMwP,GAAK7H,KAAK3H,GACtDoJ,MAAQpJ,GACA+O,GAAKpH,KAAK3H,GACH+O,GAAK3F,MAAMpJ,GAEbwP,GAAK7H,KAAK3H,GACRwP,GAAKpG,MAAMpJ,GAGXoP,GAAIhG,MAAMpJ,GAGzBqJ,UAAYrJ,GACY,iBAANA,EACRA,EACAA,EAAEnU,eAAe,OACbkjB,GAAK1F,UAAUrJ,GACfwP,GAAKnG,UAAUrJ,ICtB3B6P,GAAa,qHCanB,MAAMC,GAAe,SACfC,GAAc,QAKdC,GAAe,kOACrB,SAASC,GAAoBjhB,GACnB,MAAAkhB,EAAgBlhB,EAAMM,WACtB+B,EAAS,GACT8e,EAAU,CACZP,MAAO,GACPzG,OAAQ,GACRiH,IAAK,IAEHC,EAAQ,GACd,IAAI/hB,EAAI,EACR,MAmBM8N,EAnBY8T,EAAcngB,QAAQigB,IAAeM,IAC/CV,GAAMjI,KAAK2I,IACHH,EAAAP,MAAMxb,KAAK9F,GACnB+hB,EAAMjc,KAAK2b,IACX1e,EAAO+C,KAAKwb,GAAMxG,MAAMkH,KAEnBA,EAAYnO,WApBF,SAqBPgO,EAAAC,IAAIhc,KAAK9F,GACjB+hB,EAAMjc,KAvBA,OAwBN/C,EAAO+C,KAAKkc,KAGJH,EAAAhH,OAAO/U,KAAK9F,GACpB+hB,EAAMjc,KAAK0b,IACJze,EAAA+C,KAAK6U,WAAWqH,OAEzBhiB,EA7BU,SAgCQ8N,MAhCR,OAiChB,MAAO,CAAE/K,SAAQ+K,QAAO+T,UAASE,QACrC,CACA,SAASE,GAAkBvQ,GAChB,OAAAiQ,GAAoBjQ,GAAG3O,MAClC,CACA,SAASmf,GAAkBrhB,GACvB,MAAMiN,MAAEA,EAAAiU,MAAOA,GAAUJ,GAAoB9gB,GACvCshB,EAAcrU,EAAM/N,OAC1B,OAAQ2R,IACJ,IAAI0Q,EAAS,GACb,IAAA,IAASpiB,EAAI,EAAGA,EAAImiB,EAAaniB,IAEzB,GADJoiB,GAAUtU,EAAM9N,QACH,IAAT0R,EAAE1R,GAAkB,CACd,MAAArB,EAAOojB,EAAM/hB,GAELoiB,GADVzjB,IAAS6iB,GACC7B,GAASjO,EAAE1R,IAEhBrB,IAAS8iB,GACJH,GAAMvG,UAAUrJ,EAAE1R,IAGlB0R,EAAE1R,EAEhC,CAEe,OAAAoiB,CAAA,CAEf,CACA,MAAMC,GAAwB3Q,GAAmB,iBAANA,EAAiB,EAAIA,EAMhE,MAAM4Q,GAAU,CACZjJ,KAhFJ,SAAc3H,GACV,IAAI7F,EAAIgE,EACR,OAAQ0S,MAAM7Q,IACG,iBAANA,KAC0B,QAA9B7F,EAAK6F,EAAEvQ,MAAM0e,WAAgC,IAAPhU,OAAgB,EAASA,EAAG9L,SAAW,KAC3C,QAA9B8P,EAAK6B,EAAEvQ,MAAMogB,WAAgC,IAAP1R,OAAgB,EAASA,EAAG9P,SAAW,GAChF,CACZ,EA0EI+a,MAAOmH,GACPC,qBACJM,kBATA,SAA2B9Q,GACjB,MAAA+Q,EAASR,GAAkBvQ,GAEjC,OADoBwQ,GAAkBxQ,EAC/BgR,CAAYD,EAAOle,IAAI8d,IAClC,GC7EMM,OAAkBljB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASmjB,GAAmBlR,GAClB,MAAChQ,EAAMhB,GAASgR,EAAE/E,MAAM,GAAG,GAAImB,MAAM,KAC3C,GAAa,gBAATpM,EACO,OAAAgQ,EACX,MAAOmJ,GAAUna,EAAMS,MAAM0e,KAAe,GAC5C,IAAKhF,EACM,OAAAnJ,EACX,MAAMyJ,EAAOza,EAAMe,QAAQoZ,EAAQ,IACnC,IAAIgI,EAAeF,GAAYliB,IAAIiB,GAAQ,EAAI,EAGxC,OAFHmZ,IAAWna,IACXmiB,GAAgB,KACbnhB,EAAO,IAAMmhB,EAAe1H,EAAO,GAC9C,CACA,MAAM2H,GAAgB,uBAChBxe,GAAS,IACRge,GACHE,kBAAoB9Q,IACV,MAAAqR,EAAYrR,EAAEvQ,MAAM2hB,IAC1B,OAAOC,EAAYA,EAAUxe,IAAIqe,IAAoB3e,KAAK,KAAOyN,CAAA,GCvBnEsR,GAA0B,CAE5BC,YAAa1H,GACb2H,eAAgB3H,GAChB4H,iBAAkB5H,GAClB6H,kBAAmB7H,GACnB8H,gBAAiB9H,GACjB+H,aAAc/H,GACdgI,OAAQhI,GACRiI,oBAAqBjI,GACrBkI,qBAAsBlI,GACtBmI,wBAAyBnI,GACzBoI,uBAAwBpI,GAExBiB,MAAOjB,GACPqI,SAAUrI,GACVoB,OAAQpB,GACRsI,UAAWtI,GACXwB,IAAKxB,GACL2B,MAAO3B,GACP0B,OAAQ1B,GACRyB,KAAMzB,GAENuI,QAASvI,GACTsB,WAAYtB,GACZmB,aAAcnB,GACduB,cAAevB,GACfkB,YAAalB,GACbwI,OAAQxI,GACRyI,UAAWzI,GACX0I,YAAa1I,GACb2I,aAAc3I,GACd4I,WAAY5I,GAEZ6I,oBAAqB7I,GACrB8I,oBAAqB9I,IClCnB+I,GAAsB,CACxBC,OAAQlJ,GACRmJ,QAASnJ,GACToJ,QAASpJ,GACTqJ,QAASrJ,GACTJ,SACA0J,OAAQ1J,GACR2J,OAAQ3J,GACR4J,OAAQ5J,GACR6J,KAAMzJ,GACN0J,MAAO1J,GACP2J,MAAO3J,GACP4J,SAAU1J,GACV4B,WAAY5B,GACZ6B,WAAY7B,GACZ2J,WAAY3J,GACZvD,EAAGuD,GACHqB,EAAGrB,GACH4J,EAAG5J,GACH6J,YAAa7J,GACb8J,qBAAsB9J,GACtB+J,QAAStK,GACTuK,QAAS7J,GACT8J,QAAS9J,GACT+J,QAASlK,ICzBPmK,GAAM,IACL7K,GACHE,UAAWjH,KAAK8L,OCEd+F,GAAmB,IAClB3C,MACAsB,GACHsB,OAAQF,GACRrlB,KAAMkb,GAENsK,YAAa7K,GACb8K,cAAe9K,GACf+K,WAAYL,ICPVM,GAAoB,IACnBL,GAEHrE,SACA2E,gBAAiB3E,GACjB4E,aAAc5E,GACd6E,KAAM7E,GACN8E,OAAQ9E,GAER+E,YAAa/E,GACbgF,eAAgBhF,GAChBiF,iBAAkBjF,GAClBkF,kBAAmBlF,GACnBmF,gBAAiBnF,GACjBhd,UACAoiB,aAAcpiB,IAKZqiB,GAAuB/oB,GAAQooB,GAAkBpoB,GCvBvD,SAAS4kB,GAAkB5kB,EAAK8C,GACxB,IAAAkmB,EAAmBD,GAAoB/oB,GAI3C,OAHIgpB,IAAqBtiB,KACFsiB,EAAAtE,IAEhBsE,EAAiBpE,kBAClBoE,EAAiBpE,kBAAkB9hB,QACnC,CACV,CCHA,MAAMmmB,GAAuB,IAAApnB,IAAI,CAAC,OAAQ,OAAQ,MCDlD,MAAMqnB,WAA6BhI,GAC/B,WAAAhf,CAAYif,EAAqBC,EAAYtd,EAAMud,EAAajF,GAC5DjO,MAAMgT,EAAqBC,EAAYtd,EAAMud,EAAajF,GAAS,EAC3E,CACI,aAAA6E,GACI,MAAME,oBAAEA,EAAA/E,QAAqBA,EAAStY,KAAAA,GAASsJ,KAC3C,IAACgP,IAAYA,EAAQlb,QACrB,OACJiN,MAAM8S,gBAIN,IAAA,IAAS7e,EAAI,EAAGA,EAAI+e,EAAoBhf,OAAQC,IAAK,CAC7C,IAAA+mB,EAAWhI,EAAoB/e,GAC/B,GAAoB,iBAAb+mB,IACPA,EAAWA,EAASlN,OAChBF,GAAmBoN,IAAW,CAC9B,MAAMxM,EAAWR,GAAiBgN,EAAU/M,EAAQlb,cACnC,IAAbyb,IACAwE,EAAoB/e,GAAKua,GAEzBva,IAAM+e,EAAoBhf,OAAS,IACnCiL,KAAKuJ,cAAgBwS,EAE7C,CAEA,CAaQ,GAPA/b,KAAKgc,wBAOArL,GAAelb,IAAIiB,IAAwC,IAA/Bqd,EAAoBhf,OACjD,OAEE,MAACknB,EAAQC,GAAUnI,EACnBoI,EAAa5J,GAAuB0J,GACpCG,EAAa7J,GAAuB2J,GAI1C,GAAIC,IAAeC,EAMnB,GAAIxL,GAAcuL,IAAevL,GAAcwL,GAC3C,IAAA,IAASpnB,EAAI,EAAGA,EAAI+e,EAAoBhf,OAAQC,IAAK,CAC3C,MAAAU,EAAQqe,EAAoB/e,GACb,iBAAVU,IACaqe,EAAA/e,GAAK2a,WAAWja,GAExD,MAMYsK,KAAKgT,kBAAmB,CAEpC,CACI,oBAAAgJ,GACU,MAAAjI,oBAAEA,EAAqBrd,KAAAA,GAASsJ,KAChCqc,EAAsB,GAC5B,IAAA,IAASrnB,EAAI,EAAGA,EAAI+e,EAAoBhf,OAAQC,KC7E/B,iBADTU,ED+EOqe,EAAoB/e,IC7ElB,IAAVU,EAEQ,OAAVA,GACY,SAAVA,GAA8B,MAAVA,GAAiB0Y,GAAkB1Y,KD2EtD2mB,EAAoBvhB,KAAK9F,GChFzC,IAAgBU,EDmFJ2mB,EAAoBtnB,QD3EhC,SAAqCgf,EAAqBsI,EAAqB3lB,GAC3E,IACI4lB,EADAtnB,EAAI,EAER,KAAOA,EAAI+e,EAAoBhf,SAAWunB,GAAoB,CACpD,MAAAP,EAAWhI,EAAoB/e,GACb,iBAAb+mB,IACNF,GAAiBpmB,IAAIsmB,IACtBpF,GAAoBoF,GAAUhkB,OAAOhD,SACrCunB,EAAqBvI,EAAoB/e,IAE7CA,GACR,CACI,GAAIsnB,GAAsB5lB,EACtB,IAAA,MAAW6lB,KAAaF,EACpBtI,EAAoBwI,GAAa/E,GAAkB9gB,EAAM4lB,EAGrE,CC2DwCE,CAAAzI,EAAqBsI,EAAqB3lB,EAElF,CACI,mBAAA4c,GACI,MAAMtE,QAAEA,EAAA+E,oBAASA,EAAqBrd,KAAAA,GAASsJ,KAC3C,IAACgP,IAAYA,EAAQlb,QACrB,OACS,WAAT4C,IACAsJ,KAAKyT,iBAAmB/T,OAAO+c,aAE9Bzc,KAAA0c,eAAiBnL,GAAiB7a,GAAMsY,EAAQ2N,qBAAsBjd,OAAO8P,iBAAiBR,EAAQlb,UACvFigB,EAAA,GAAK/T,KAAK0c,eAE9B,MAAME,EAAkB7I,EAAoBA,EAAoBhf,OAAS,QACjD,IAApB6nB,GACA5N,EAAQoE,SAAS1c,EAAMkmB,GAAiBC,KAAKD,GAAiB,EAE1E,CACI,eAAApJ,GACQ3S,IAAAA,EACJ,MAAMmO,QAAEA,EAAAtY,KAASA,EAAMqd,oBAAAA,GAAwB/T,KAC3C,IAACgP,IAAYA,EAAQlb,QACrB,OACE,MAAA4B,EAAQsZ,EAAQoE,SAAS1c,GAC/BhB,GAASA,EAAMmnB,KAAK7c,KAAK0c,gBAAgB,GACnC,MAAAI,EAAqB/I,EAAoBhf,OAAS,EAClDwU,EAAgBwK,EAAoB+I,GAC1C/I,EAAoB+I,GAAsBvL,GAAiB7a,GAAMsY,EAAQ2N,qBAAsBjd,OAAO8P,iBAAiBR,EAAQlb,UACzG,OAAlByV,QAAiD,IAAvBvJ,KAAKuJ,gBAC/BvJ,KAAKuJ,cAAgBA,IAGa,QAAjC1I,EAAKb,KAAKmT,yBAAsC,IAAPtS,OAAgB,EAASA,EAAG9L,SACtEiL,KAAKmT,kBAAkBtY,SAAQ,EAAEkiB,EAAoBC,MACjDhO,EACKoE,SAAS2J,GACTvW,IAAIwW,EAAmB,IAGpChd,KAAKgc,sBACb,EE9HA,SAASiB,GAAYtpB,GACjB,MAAuB,mBAATA,CAClB,CCCA,IAAIqY,GACJ,SAASkR,KACClR,QAAA,CACV,CASA,MAAMmR,GAAO,CACTnR,IAAK,UACW,IAARA,IACKmR,GAAA3W,IAAI8E,GAAUnB,cAAgBjB,GAC7BoC,GAAUpB,UACV6B,YAAYC,OAEfA,IAEXxF,IAAM4W,IACIpR,GAAAoR,EACNC,eAAeH,GAAS,GCf1BI,GAAe,CAAC5nB,EAAOgB,IAEZ,WAATA,MAKiB,iBAAVhB,IAAsBP,MAAMC,QAAQM,OAE1B,iBAAVA,IACN4hB,GAAQjJ,KAAK3Y,IAAoB,MAAVA,GACvBA,EAAMmT,WAAW,UCP1B,MAAM0U,GACF,WAAAzoB,EAAY0oB,SAAEA,GAAW,EAAMC,MAAAA,EAAQ,EAAG9pB,KAAAA,EAAO,YAAa0V,OAAAA,EAAS,cAAGqU,EAAc,EAAApU,WAAGA,EAAa,UAAWqU,IAE/G3d,KAAK4d,WAAY,EACjB5d,KAAK6d,qBAAsB,EACtB7d,KAAA8d,UAAYX,GAAKnR,MACtBhM,KAAK2d,QAAU,CACXH,WACAC,MAAAA,EACA9pB,OACA0V,SACAqU,cACApU,gBACGqU,GAEP3d,KAAK+d,uBACb,CAWI,aAAAC,GACI,OAAKhe,KAAKie,YAEHje,KAAKie,WAAaje,KAAK8d,UA/BZ,GAgCZ9d,KAAKie,WAFAje,KAAK8d,SAIxB,CAMI,YAAIvO,GAIA,OAHKvP,KAAKke,WAAcle,KAAK6d,sBzBGfjK,KACGhB,MyBDV5S,KAAKke,SACpB,CAMI,mBAAAC,CAAoBvV,EAAWW,GACtBvJ,KAAAie,WAAad,GAAKnR,MACvBhM,KAAK6d,qBAAsB,EACrB,MAAAnnB,KAAEA,EAAM/C,KAAAA,EAAA4T,SAAMA,EAAUkW,MAAAA,EAAOzJ,WAAAA,EAAAoK,SAAYA,EAAUnB,YAAAA,GAAiBjd,KAAK2d,QAK7E,IAACV,IC5Db,SAAoBrU,EAAWlS,EAAM/C,EAAM4T,GAMjC,MAAA8W,EAAiBzV,EAAU,GACjC,GAAuB,OAAnByV,EACO,OAAA,EAMP,GAAS,YAAT3nB,GAA+B,eAATA,EACf,OAAA,EACX,MAAM4nB,EAAiB1V,EAAUA,EAAU7T,OAAS,GAC9CwpB,EAAqBjB,GAAae,EAAgB3nB,GAClD8nB,EAAqBlB,GAAagB,EAAgB5nB,GAGpD,SAAC6nB,IAAuBC,KA9BhC,SAA6B5V,GACnB,MAAA9U,EAAU8U,EAAU,GAC1B,GAAyB,IAArBA,EAAU7T,OACH,OAAA,EACX,IAAA,IAASC,EAAI,EAAGA,EAAI4T,EAAU7T,OAAQC,IAC9B4T,GAAAA,EAAU5T,KAAOlB,EACV,OAAA,CAEnB,CAyBY2qB,CAAoB7V,KACb,WAATjV,GAAqBspB,GAAYtpB,KAAU4T,EACrD,CDkC6BmX,CAAW9V,EAAWlS,EAAM/C,EAAM4T,GAAW,CAE9D,IAAsCkW,EAIlC,OAHaW,SAAuCA,EAAShV,GAAiBR,EAAW5I,KAAK2d,QAASpU,IACvGyK,SAAwDA,SACxDhU,KAAK2e,yBAKL3e,KAAK2d,QAAQnV,SAAW,CAExC,CACQ,MAAMoW,EAAoB5e,KAAK6e,aAAajW,EAAWW,IAC7B,IAAtBqV,IAEJ5e,KAAKke,UAAY,CACbtV,UAAAA,EACAW,mBACGqV,GAEP5e,KAAK8e,iBACb,CACI,cAAAA,GAAiB,CAMjB,IAAAC,CAAKC,EAASC,GACV,OAAOjf,KAAKkf,uBAAuBH,KAAKC,EAASC,EACzD,CACI,OAAAE,GACInf,KAAK2d,QAAQhqB,KAAO,YACpBqM,KAAK2d,QAAQlV,KAAO,QAC5B,CACI,qBAAAsV,GACI/d,KAAKkf,uBAAyB,IAAIE,SAASJ,IACvChf,KAAK2e,uBAAyBK,CAAA,GAE1C,EErGA,MAAMK,GAAW,CAACvM,EAAMwM,EAAI5pB,KACxB,MAAM6pB,EAAmBD,EAAKxM,EAC9B,OAA4B,IAArByM,EAAyB,GAAK7pB,EAAQod,GAAQyM,CAAA,ECZnDC,GAAuB,CAAChS,EAAQhF,EACtCiX,EAAa,MAET,IAAIC,EAAS,GACP,MAAAC,EAAY7W,KAAKmD,IAAInD,KAAK8L,MAAMpM,EAAWiX,GAAa,GAC9D,IAAA,IAASzqB,EAAI,EAAGA,EAAI2qB,EAAW3qB,IAC3B0qB,GAAUlS,EAAO6R,GAAS,EAAGM,EAAY,EAAG3qB,IAAM,KAEtD,MAAO,UAAU0qB,EAAO1J,UAAU,EAAG0J,EAAO3qB,OAAS,KAAE,ECJ3D,SAAS6qB,GAAkBrY,EAAUsY,GAC1B,OAAAA,EAAgBtY,GAAY,IAAOsY,GAAiB,CAC/D,CCLA,SAASC,GAAsBC,EAAc/hB,EAAGlK,GAC5C,MAAMksB,EAAQlX,KAAKmD,IAAIjO,EAFI,EAEwB,GACnD,OAAO4hB,GAAkB9rB,EAAUisB,EAAaC,GAAQhiB,EAAIgiB,EAChE,CCNA,MAAMC,GAES,IAFTA,GAGO,GAHPA,GAII,EAJJA,GAKQ,EALRA,GAOQ,IAPRA,GAQM,GARNA,GASc,GATdA,GAWS,CACPC,SAAU,IACVpkB,QAAS,GAbXmkB,GAeS,CACPC,SAAU,KACVpkB,QAAS,IAjBXmkB,GAoBW,IApBXA,GAqBW,GArBXA,GAsBU,IAtBVA,GAuBU,EClBVE,GAAU,KAChB,SAASC,IAAW5X,SAAEA,EAAWyX,UAAyBI,EAASJ,GAAuB1Y,SAAAA,EAAW0Y,GAAeK,KAAUA,EAAOL,KAC7H,IAAAM,EACAC,EAEAC,EAAe,EAAIJ,EAIvBI,EAAe7Q,GAAMqQ,GAA2BA,GAA2BQ,GAC3EjY,EAAWoH,GAAMqQ,GAA4BA,GAA4BhY,GAAsBO,IAC3FiY,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClCxW,EAAQ0W,EAAmBnY,EAC3BtV,EAAIytB,EAAmBpZ,EACvBnU,EAAIwtB,GAAgBF,EAAcD,GAClCxtB,EAAI6V,KAAK+X,KAAK5W,GACb,OAAAkW,GAAWjtB,EAAIE,EAAKH,CAAA,EAE/ButB,EAAcE,IACV,MACMzW,EADmByW,EAAeD,EACPjY,EAC3BnV,EAAI4W,EAAQ1C,EAAWA,EACvBjU,EAAIwV,KAAKgF,IAAI2S,EAAc,GAAK3X,KAAKgF,IAAI4S,EAAc,GAAKlY,EAC5D1W,EAAIgX,KAAK+X,KAAK5W,GACd9W,EAAIytB,GAAgB9X,KAAKgF,IAAI4S,EAAc,GAAID,GAE7C,QADQF,EAASG,GAAgBP,GAAU,GAAS,EAAA,KACzC9sB,EAAIC,GAAKxB,GAAMqB,CAAA,IAOtCotB,EAAYG,GACE5X,KAAK+X,KAAKH,EAAelY,KACxBkY,EAAenZ,GAAYiB,EAAW,GAC1C,KAEXgY,EAAcE,GACA5X,KAAK+X,KAAKH,EAAelY,IACIA,EAAWA,GAAvCjB,EAAWmZ,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYM,GAC3C,IAAIC,EAASD,EACb,IAAA,IAAS9rB,EAAI,EAAGA,EAAIgsB,GAAgBhsB,IAChC+rB,GAAkBR,EAASQ,GAAUP,EAAWO,GAE7C,OAAAA,CACX,CAzByBE,CAAgBV,EAAUC,EAD1B,EAAIhY,GAGrB,GADJA,EAAWT,GAAsBS,GAC7B+O,MAAMmJ,GACC,MAAA,CACHtY,UAAW6X,GACX5X,QAAS4X,GACTzX,YAGH,CACD,MAAMJ,EAAYU,KAAKgF,IAAI4S,EAAc,GAAKJ,EACvC,MAAA,CACHlY,YACAC,QAAwB,EAAfoY,EAAmB3X,KAAKC,KAAKuX,EAAOlY,GAC7CI,WAEZ,CACA,CACA,MAAMwY,GAAiB,GAQvB,SAASJ,GAAgBF,EAAcD,GACnC,OAAOC,EAAe5X,KAAKC,KAAK,EAAI0X,EAAeA,EACvD,CC/EA,MAAMS,GAAuB,IAC7B,SAASC,GAAsBC,GAC3B,IAAI5Y,EAAW,EAEX,IAAA/D,EAAQ2c,EAAU7rB,KAAKiT,GAC3B,MAAQ/D,EAAMjP,MAAQgT,EAAW0Y,IACjB1Y,GAHC,GAIL/D,EAAA2c,EAAU7rB,KAAKiT,GAEpB,OAAAA,GAAY0Y,GAAuBG,IAAW7Y,CACzD,CCNA,MAAM8Y,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa7D,EAAS1oB,GAC3B,OAAOA,EAAKkN,MAAMvP,QAAyB,IAAjB+qB,EAAQ/qB,IACtC,CAqCA,SAAS6uB,GAAOC,EAA0BzB,GAA+BI,EAASJ,IACxE,MAAAtC,EAA6C,iBAA5B+D,EACjB,CACEC,eAAgBD,EAChB9Y,UAAW,CAAC,EAAG,GACfyX,UAEFqB,EACF,IAAApZ,UAAEA,EAAWsZ,UAAAA,GAAcjE,EACzB,MAAA1B,EAAS0B,EAAQ/U,UAAU,GAC3BsT,EAASyB,EAAQ/U,UAAU+U,EAAQ/U,UAAU7T,OAAS,GAKtD0P,EAAQ,CAAEjP,MAAM,EAAOE,MAAOumB,IAC9B7T,UAAEA,UAAWC,EAASiY,KAAAA,EAAA9X,SAAMA,WAAUjB,EAAUsa,uBAAAA,GApD1D,SAA0BlE,GACtB,IAAImE,EAAgB,CAChBva,SAAU0Y,GACV7X,UAAW6X,GACX5X,QAAS4X,GACTK,KAAML,GACN4B,wBAAwB,KACrBlE,GAGH,IAAC6D,GAAa7D,EAAS4D,KACvBC,GAAa7D,EAAS2D,IACtB,GAAI3D,EAAQgE,eAAgB,CACxB,MAAMA,EAAiBhE,EAAQgE,eACzBI,EAAQ,EAAIjZ,KAAKkZ,IAAwB,IAAjBL,GACxBvZ,EAAY2Z,EAAOA,EACnB1Z,EAAU,EAAIuH,GAAM,IAAM,EAAG,EAAI+N,EAAQ0C,QAAUvX,KAAKC,KAAKX,GACnD0Z,EAAA,IACTA,EACHxB,KAAML,GACN7X,YACAC,UAEhB,KACa,CACK,MAAA4Z,EAAU7B,GAAWzC,GACXmE,EAAA,IACTA,KACAG,EACH3B,KAAML,IAEV6B,EAAcD,wBAAyB,CACnD,CAEW,OAAAC,CACX,CAiBsFI,CAAiB,IAC5FvE,EACHpW,UAAWU,GAAsB0V,EAAQpW,UAAY,KAEnD4a,EAAkB5a,GAAY,EAC9BkZ,EAAepY,GAAW,EAAIS,KAAKC,KAAKX,EAAYkY,IACpD8B,EAAelG,EAASD,EACxBoG,EAAsBpa,GAAsBa,KAAKC,KAAKX,EAAYkY,IAQlEgC,EAAkBxZ,KAAKuE,IAAI+U,GAAgB,EAO7C,IAAAG,EACJ,GAPAja,IAAcA,EAAYga,EACpBrC,GAAyBC,SACzBD,GAAyBnkB,SAC/B8lB,IAAcA,EAAYU,EACpBrC,GAAyBC,SACzBD,GAAyBnkB,SAE3B2kB,EAAe,EAAG,CACZ,MAAA+B,EAAc5B,GAAgByB,EAAqB5B,GAEzD8B,EAAiBvkB,IACb,MAAMuiB,EAAWzX,KAAK+X,KAAKJ,EAAe4B,EAAsBrkB,GAChE,OAAQke,EACJqE,IACO4B,EACC1B,EAAe4B,EAAsBD,GACrCI,EACA1Z,KAAKkF,IAAIwU,EAAcxkB,GACvBokB,EAAetZ,KAAK2Z,IAAID,EAAcxkB,GAAC,CAE/D,MAAA,GAC8B,IAAjByiB,EAEL8B,EAAiBvkB,GAAMke,EACnBpT,KAAK+X,KAAKwB,EAAsBrkB,IAC3BokB,GACID,EAAkBE,EAAsBD,GAAgBpkB,OAEpE,CAED,MAAM0kB,EAAoBL,EAAsBvZ,KAAKC,KAAK0X,EAAeA,EAAe,GACxF8B,EAAiBvkB,IACb,MAAMuiB,EAAWzX,KAAK+X,KAAKJ,EAAe4B,EAAsBrkB,GAE1D2kB,EAAW7Z,KAAKoD,IAAIwW,EAAoB1kB,EAAG,KACjD,OAAQke,EACHqE,IACK4B,EACE1B,EAAe4B,EAAsBD,GACrCtZ,KAAK8Z,KAAKD,GACVD,EACIN,EACAtZ,KAAK+Z,KAAKF,IAClBD,CAAA,CAEpB,CACI,MAAMtB,EAAY,CACd0B,mBAAoBjB,GAAyBrZ,GAAmB,KAChEjT,KAAOyI,IACG,MAAAlK,EAAUyuB,EAAcvkB,GAC9B,GAAK6jB,EAmBDpd,EAAMjP,KAAOwI,GAAKwK,MAnBO,CACzB,IAAIua,EAAkB,EAMlBtC,EAAe,IAEXsC,EAAM,IAAN/kB,EACM+J,GAAsBoa,GACtBrC,GAAsByC,EAAevkB,EAAGlK,IAEtD,MAAMkvB,EAA2Bla,KAAKuE,IAAI0V,IAAoBza,EACxD2a,EAA+Bna,KAAKuE,IAAI6O,EAASpoB,IAAY8tB,EACnEnd,EAAMjP,KACFwtB,GAA4BC,CAChD,CAKmB,OADDxe,EAAA/O,MAAQ+O,EAAMjP,KAAO0mB,EAASpoB,EAC7B2Q,CAAA,EAEXzO,SAAU,KACN,MAAM8sB,EAAqBha,KAAKoD,IAAIiV,GAAsBC,GAAYF,IAChE1T,EAASgS,IAAsBH,GAAa+B,EAAU7rB,KAAKutB,EAAqBzD,GAAU3pB,OAAOotB,EAAoB,IAC3H,OAAOA,EAAqB,MAAQtV,CAAA,GAGrC,OAAA4T,CACX,CC/JA,SAAS8B,IAAUta,UAAAA,EAAAA,SAAWrB,EAAW,EAAK4b,MAAAA,EAAQ,gBAAKC,EAAe,IAAAC,cAAKA,EAAgB,GAAIC,gBAAAA,EAAkB,iBAAKC,EAAcrX,IAAAA,EAAAD,IAAKA,YAAK2V,EAAY,GAAAtZ,UAAKA,IACzJ,MAAA2T,EAASrT,EAAU,GACnBnE,EAAQ,CACVjP,MAAM,EACNE,MAAOumB,GAGLuH,EAAmB9c,QACT,IAARwF,EACOD,OACC,IAARA,GAEGnD,KAAKuE,IAAInB,EAAMxF,GAAKoC,KAAKuE,IAAIpB,EAAMvF,GAD/BwF,EAC0CD,EAEzD,IAAIwX,EAAYN,EAAQ5b,EACxB,MAAMmc,EAAQzH,EAASwH,EACjBvH,OAA0B,IAAjBqH,EAA6BG,EAAQH,EAAaG,GAK7DxH,IAAWwH,IACXD,EAAYvH,EAASD,GACnB,MAAA0H,EAAa3lB,IAAOylB,EAAY3a,KAAK+X,KAAK7iB,EAAIolB,GAC9CQ,EAAc5lB,GAAMke,EAASyH,EAAU3lB,GACvC6lB,EAAiB7lB,IACb,MAAAiM,EAAQ0Z,EAAU3lB,GAClB8lB,EAASF,EAAW5lB,GAC1ByG,EAAMjP,KAAOsT,KAAKuE,IAAIpD,IAAU2X,EAC1Bnd,EAAA/O,MAAQ+O,EAAMjP,KAAO0mB,EAAS4H,CAAA,EAQpC,IAAAC,EACAC,EACE,MAAAC,EAAsBjmB,IAjCN,IAAC0I,KAkCAjC,EAAM/O,WAlCS,IAARwW,GAAqBxF,EAAIwF,QAAiB,IAARD,GAAqBvF,EAAIuF,KAoC/D8X,EAAA/lB,EACtBgmB,EAAWvC,GAAO,CACd7Y,UAAW,CAACnE,EAAM/O,MAAO8tB,EAAgB/e,EAAM/O,QAC/C6R,SAAUuY,GAAsB8D,EAAY5lB,EAAGyG,EAAM/O,OACrD2S,QAASgb,EACTjb,UAAWkb,EACX1B,YACAtZ,cACH,EAGE,OADP2b,EAAmB,GACZ,CACHnB,mBAAoB,KACpBvtB,KAAOyI,IAOH,IAAIkmB,GAAkB,EAUlB,OATCF,QAAoC,IAAxBD,IACKG,GAAA,EAClBL,EAAc7lB,GACdimB,EAAmBjmB,SAMK,IAAxB+lB,GAAqC/lB,GAAK+lB,EACnCC,EAASzuB,KAAKyI,EAAI+lB,KAGxBG,GAAmBL,EAAc7lB,GAC3ByG,EACvB,EAGA,CClFA,MAAM0f,GAAuB1X,GAAY,IAAM,EAAG,EAAG,GAC/C2X,GAAwB3X,GAAY,EAAG,EAAG,IAAM,GAChD4X,GAA0B5X,GAAY,IAAM,EAAG,IAAM,GCJrD6X,GAAsB9W,GAAWrY,MAAMC,QAAQoY,IAAgC,iBAAdA,EAAO,GCSxE+W,GAAe,CACjBC,OAAQ/a,GACR0a,UACAE,aACAD,WACArW,UACAI,aACAD,WACAP,UACAC,aACAF,WACAG,eAEE4W,GAA8Bpd,IAC5B,GAAAid,GAAmBjd,GAAa,CAEtBzB,GAAsB,IAAtByB,EAAWtS,QACrB,MAAO2vB,EAAIC,EAAIC,EAAIC,GAAMxd,EACzB,OAAOoF,GAAYiY,EAAIC,EAAIC,EAAIC,EACvC,CAAA,MACmC,iBAAfxd,GAEFzB,QAA6B,IAA7B2e,GAAald,IAChBkd,GAAald,IAEjBA,CAAA,EC3BLyd,GAAmB,CAAC5xB,EAAGE,IAAOsT,GAAMtT,EAAEF,EAAEwT,IACxCqe,GAAO,IAAIC,IAAiBA,EAAaxsB,OAAOssB,ICahDG,GAAY,CAACnS,EAAMwM,EAAID,IAClBvM,GAAQwM,EAAKxM,GAAQuM,ECrBhC,SAAS6F,GAASvyB,EAAGK,EAAGgL,GAKpB,OAJIA,EAAI,IACCA,GAAA,GACLA,EAAI,IACCA,GAAA,GACLA,EAAI,EAAI,EACDrL,EAAc,GAATK,EAAIL,GAASqL,EACzBA,EAAI,GACGhL,EACPgL,EAAI,EAAI,EACDrL,GAAKK,EAAIL,IAAM,EAAI,EAAIqL,GAAK,EAChCrL,CACX,CCbA,SAASwyB,GAAajyB,EAAGE,GACrB,OAAQT,GAAOA,EAAI,EAAIS,EAAIF,CAC/B,CCSA,MAAMkyB,GAAiB,CAACtS,EAAMwM,EAAI5Y,KAC9B,MAAM2e,EAAWvS,EAAOA,EAClBwS,EAAO5e,GAAK4Y,EAAKA,EAAK+F,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAIxc,KAAKC,KAAKuc,EAAI,EAElCC,GAAa,CAACzP,GAAKL,GAAMS,IAE/B,SAASsP,GAAOlP,GACN,MAAA3iB,GAFY+S,EAEQ4P,EAFFiP,GAAW/S,MAAM7e,GAASA,EAAK0a,KAAK3H,MAA3C,IAACA,EAId,IAACuO,QAAQthB,GACF,OAAA,EACP,IAAA8xB,EAAQ9xB,EAAKmc,MAAMwG,GAKhB,OAJH3iB,IAASuiB,KAETuP,EFZR,UAAoBtP,IAAEA,EAAAC,WAAKA,YAAYC,EAAWrG,MAAAA,IACvCmG,GAAA,IAEME,GAAA,IACb,IAAIX,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALcQ,GAAA,IAQT,CACKpjB,MAAAA,EAAIqjB,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCzjB,EAAI,EAAI0jB,EAAYrjB,EAC1B0iB,EAAMwP,GAASvyB,EAAGK,EAAGmjB,EAAM,EAAI,GACvBR,EAAAuP,GAASvyB,EAAGK,EAAGmjB,GACvBP,EAAOsP,GAASvyB,EAAGK,EAAGmjB,EAAM,EAAI,EACxC,MAVQT,EAAMC,EAAQC,EAAOS,EAWlB,MAAA,CACHX,IAAK5M,KAAK8L,MAAY,IAANc,GAChBC,MAAO7M,KAAK8L,MAAc,IAARe,GAClBC,KAAM9M,KAAK8L,MAAa,IAAPgB,GACjB5F,MAAAA,EAER,CEbgB0V,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAW,CAAC7S,EAAMwM,KACd,MAAAsG,EAAWJ,GAAO1S,GAClB+S,EAASL,GAAOlG,GAClB,IAACsG,IAAaC,EACP,OAAAV,GAAarS,EAAMwM,GAExB,MAAAwG,EAAU,IAAKF,GACrB,OAAQlf,IACJof,EAAQpQ,IAAM0P,GAAeQ,EAASlQ,IAAKmQ,EAAOnQ,IAAKhP,GACvDof,EAAQnQ,MAAQyP,GAAeQ,EAASjQ,MAAOkQ,EAAOlQ,MAAOjP,GAC7Dof,EAAQlQ,KAAOwP,GAAeQ,EAAShQ,KAAMiQ,EAAOjQ,KAAMlP,GAC1Dof,EAAQ9V,MAAQiV,GAAUW,EAAS5V,MAAO6V,EAAO7V,MAAOtJ,GACjD+O,GAAK1F,UAAU+V,GACzB,EC3CCC,GAAsB,IAAAtxB,IAAI,CAAC,OAAQ,WCUzC,SAASwwB,GAAU/xB,EAAGE,GAClB,OAAQT,GAAMqzB,GAAY9yB,EAAGE,EAAGT,EACpC,CACA,SAASszB,GAAS/yB,GACV,MAAa,iBAANA,EACA+xB,GAEW,iBAAN/xB,EACLyb,GAAmBzb,GACpBiyB,GACA7O,GAAMjI,KAAKnb,GACPyyB,GACAO,GAEL/wB,MAAMC,QAAQlC,GACZizB,GAEW,iBAANjzB,EACLojB,GAAMjI,KAAKnb,GAAKyyB,GAAWS,GAE/BjB,EACX,CACA,SAASgB,GAASjzB,EAAGE,GACX,MAAAgkB,EAAS,IAAIlkB,GACbmzB,EAAYjP,EAAOriB,OACnBuxB,EAAapzB,EAAEqG,KAAI,CAACmN,EAAG1R,IAAMixB,GAASvf,EAATuf,CAAYvf,EAAGtT,EAAE4B,MACpD,OAAQrC,IACJ,IAAA,IAASqC,EAAI,EAAGA,EAAIqxB,EAAWrxB,IAC3BoiB,EAAOpiB,GAAKsxB,EAAWtxB,GAAGrC,GAEvB,OAAAykB,CAAA,CAEf,CACA,SAASgP,GAAUlzB,EAAGE,GAClB,MAAMgkB,EAAS,IAAKlkB,KAAME,GACpBkzB,EAAa,CAAE,EACrB,IAAA,MAAW1zB,KAAOwkB,OACC,IAAXlkB,EAAEN,SAAiC,IAAXQ,EAAER,KAC1B0zB,EAAW1zB,GAAOqzB,GAAS/yB,EAAEN,GAAXqzB,CAAiB/yB,EAAEN,GAAMQ,EAAER,KAGrD,OAAQ8T,IACJ,IAAA,MAAW9T,KAAO0zB,EACdlP,EAAOxkB,GAAO0zB,EAAW1zB,GAAK8T,GAE3B,OAAA0Q,CAAA,CAEf,CAcA,MAAM8O,GAAa,CAACjK,EAAQC,KAClB,MAAAqK,EAAWjP,GAAQJ,kBAAkBgF,GACrCsK,EAAc7P,GAAoBsF,GAClCwK,EAAc9P,GAAoBuF,GAIxC,OAHuBsK,EAAY3P,QAAQC,IAAI/hB,SAAW0xB,EAAY5P,QAAQC,IAAI/hB,QAC9EyxB,EAAY3P,QAAQP,MAAMvhB,SAAW0xB,EAAY5P,QAAQP,MAAMvhB,QAC/DyxB,EAAY3P,QAAQhH,OAAO9a,QAAU0xB,EAAY5P,QAAQhH,OAAO9a,OAE3DgxB,GAAgBtwB,IAAIwmB,KACpBwK,EAAY1uB,OAAOhD,QACnBgxB,GAAgBtwB,IAAIymB,KAChBsK,EAAYzuB,OAAOhD,OD5EpC,SAAuBknB,EAAQC,GACvB,OAAA6J,GAAgBtwB,IAAIwmB,GACZtpB,GAAOA,GAAK,EAAIspB,EAASC,EAGzBvpB,GAAOA,GAAK,EAAIupB,EAASD,CAEzC,CCsEmByK,CAAczK,EAAQC,GAE1B6I,GAAKoB,GA3BpB,SAAoBlK,EAAQC,GACpBrb,IAAAA,EACJ,MAAM8lB,EAAgB,GAChBC,EAAW,CAAEtQ,MAAO,EAAGQ,IAAK,EAAGjH,OAAQ,GAC7C,IAAA,IAAS7a,EAAI,EAAGA,EAAIknB,EAAOnkB,OAAOhD,OAAQC,IAAK,CACrC,MAAArB,EAAOuoB,EAAOnF,MAAM/hB,GACpB6xB,EAAc5K,EAAOpF,QAAQljB,GAAMizB,EAASjzB,IAC5CmzB,EAAoD,QAArCjmB,EAAKob,EAAOlkB,OAAO8uB,UAAiC,IAAPhmB,EAAgBA,EAAK,EACvF8lB,EAAc3xB,GAAK8xB,EACnBF,EAASjzB,IACjB,CACW,OAAAgzB,CACX,CAe6BI,CAAWP,EAAaC,GAAcA,EAAY1uB,QAASwuB,GAIzEpB,GAAalJ,EAAQC,EACpC,ECvFA,SAAS8K,GAAIlU,EAAMwM,EAAI3sB,GACf,GAAgB,iBAATmgB,GACO,iBAAPwM,GACM,iBAAN3sB,EACAsyB,OAAAA,GAAUnS,EAAMwM,EAAI3sB,GAGxB,OADOszB,GAASnT,EAChBmU,CAAMnU,EAAMwM,EACvB,CC6BA,SAAS4H,GAAYC,EAAO/P,GAAUxH,MAAOwX,GAAU,EAAM3e,KAAAA,EAAMwe,MAAAA,GAAU,IACzE,MAAMI,EAAcF,EAAMpyB,OAM1B,GALU6Q,GAAAyhB,IAAgBjQ,EAAOriB,QAKb,IAAhBsyB,EACO,MAAA,IAAMjQ,EAAO,GACxB,GAAoB,IAAhBiQ,GAAqBF,EAAM,KAAOA,EAAM,GACjC,MAAA,IAAM/P,EAAO,GAEpB+P,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOxtB,UACnByd,EAAS,IAAIA,GAAQzd,WAEzB,MAAM2tB,EAjDV,SAAsBlQ,EAAQ3O,EAAM8e,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAeP,GAC9BS,EAAYrQ,EAAOriB,OAAS,EAClC,IAAA,IAASC,EAAI,EAAGA,EAAIyyB,EAAWzyB,IAAK,CAC5B,IAAAiyB,EAAQO,EAAapQ,EAAOpiB,GAAIoiB,EAAOpiB,EAAI,IAC/C,GAAIyT,EAAM,CACA,MAAAif,EAAiBvyB,MAAMC,QAAQqT,GAAQA,EAAKzT,IAAMyU,GAAOhB,EACvDwe,EAAAlC,GAAK2C,EAAgBT,EACzC,CACQK,EAAOxsB,KAAKmsB,EACpB,CACW,OAAAK,CACX,CAoCmBK,CAAavQ,EAAQ3O,EAAMwe,GACpCQ,EAAYH,EAAOvyB,OACnB6yB,EAAgBlhB,IAClB,IAAI1R,EAAI,EACR,GAAIyyB,EAAY,EACZ,KAAOzyB,EAAImyB,EAAMpyB,OAAS,KAClB2R,EAAIygB,EAAMnyB,EAAI,IADOA,KAK3B,MAAA6yB,EAAkBxI,GAAS8H,EAAMnyB,GAAImyB,EAAMnyB,EAAI,GAAI0R,GAClD,OAAA4gB,EAAOtyB,GAAG6yB,EAAe,EAEpC,OAAOT,EACA1gB,GAAMkhB,EAAahY,GAAMuX,EAAM,GAAIA,EAAME,EAAc,GAAI3gB,IAC5DkhB,CACV,CCtEA,SAASE,GAAcC,GACb,MAAAC,EAAS,CAAC,GAET,OCFX,SAAoBA,EAAQC,GACxB,MAAM/b,EAAM8b,EAAOA,EAAOjzB,OAAS,GACnC,IAAA,IAASC,EAAI,EAAGA,GAAKizB,EAAWjzB,IAAK,CACjC,MAAMkzB,EAAiB7I,GAAS,EAAG4I,EAAWjzB,GAC9CgzB,EAAOltB,KAAKmqB,GAAU/Y,EAAK,EAAGgc,GACtC,CACA,CDLeC,CAAAH,EAAQD,EAAIhzB,OAAS,GACzBizB,CACX,CEIA,SAASpf,IAAUJ,SAAEA,EAAW,IAAKI,UAAWwf,QAAgBC,EAAO5f,KAAAA,EAAO,cAKpE,MAAA6f,ECfY,CAAC7f,GACZtT,MAAMC,QAAQqT,IAA4B,iBAAZA,EAAK,GDclB8f,CAAc9f,GAChCA,EAAKlP,IAAIkrB,IACTA,GAA2Bhc,GAK3BhE,EAAQ,CACVjP,MAAM,EACNE,MAAO0yB,EAAe,IAKpBI,EE7BV,SAA8BR,EAAQxf,GAClC,OAAOwf,EAAOzuB,KAAKkvB,GAAMA,EAAIjgB,GACjC,CF2B0BkgB,CAGtBL,GAASA,EAAMtzB,SAAWqzB,EAAerzB,OACnCszB,EACAP,GAAcM,GAAiB5f,GAC/BmgB,EAAoBzB,GAAYsB,EAAeJ,EAAgB,CACjE3f,KAAMtT,MAAMC,QAAQkzB,GACdA,GA9BSvwB,EA+BKqwB,EA/BG5a,EA+Ba8a,EA9BjCvwB,EAAOwB,KAAI,IAAMiU,GAAU6W,KAAW7jB,OAAO,EAAGzI,EAAOhD,OAAS,MAD3E,IAAuBgD,EAAQyV,EAiCpB,MAAA,CACHsV,mBAAoBta,EACpBjT,KAAOyI,IACGyG,EAAA/O,MAAQizB,EAAkB3qB,GAChCyG,EAAMjP,KAAOwI,GAAKwK,EACX/D,GAGnB,CG7CA,MAAMmkB,GAAmBjd,IACrB,MAAMkd,EAAgB,EAAG3e,eAAgByB,EAAOzB,GACzC,MAAA,CACHvD,MAAO,IAAMwF,GAAMR,OAAOkd,GAAe,GACzCC,KAAM,IAAM1c,GAAYyc,GAKxB7c,IAAK,IAAOV,GAAUnB,aAAemB,GAAUpB,UAAYiT,GAAKnR,MACnE,ECEC+c,GAAa,CACfC,MAAO9F,GACPA,WACA+F,MAAOrgB,GACPA,aACA6Y,WAEEyH,GAAqB5Y,GAAYA,EAAU,IAMjD,MAAM6Y,WAA4B5L,GAC9B,WAAAzoB,CAAY6oB,GACR5c,MAAM4c,GAIN3d,KAAKopB,SAAW,KAIhBppB,KAAKqpB,WAAa,KAIlBrpB,KAAKspB,YAAc,EAInBtpB,KAAKupB,cAAgB,EAMrBvpB,KAAKwpB,iBAAmB,UAIxBxpB,KAAKypB,UAAY,KACjBzpB,KAAKyE,MAAQ,OAKbzE,KAAK8oB,KAAO,KAGR,GAFA9oB,KAAK+S,SAAS5H,SACdnL,KAAK4d,WAAY,EACE,SAAf5d,KAAKyE,MACL,OACJzE,KAAK0pB,WACC,MAAAC,OAAEA,GAAW3pB,KAAK2d,QACxBgM,GAAUA,GAAO,EAEf,MAAAjzB,KAAEA,EAAMud,YAAAA,EAAAA,QAAajF,EAASpG,UAAAA,GAAc5I,KAAK2d,QACjDiM,GAAsB5a,aAAyC,EAASA,EAAQ8E,mBAAqBA,GAE3G9T,KAAK+S,SAAW,IAAI6W,EAAmBhhB,GADpB,CAACY,EAAmBD,IAAkBvJ,KAAKme,oBAAoB3U,EAAmBD,IACvC7S,EAAMud,EAAajF,GACjFhP,KAAK+S,SAASqB,iBAAgB,CAElC,OAAA+K,GACIpe,MAAMoe,UAEFnf,KAAKke,WACE7rB,OAAAw3B,OAAO7pB,KAAKke,UAAWle,KAAK6e,aAAa7e,KAAKke,UAAUtV,WACnE,CAEJ,YAAAiW,CAAaiL,GACH,MAAAn2B,KAAEA,EAAO,YAAA0V,OAAaA,EAAS,EAAAqU,YAAGA,EAAc,EAAApU,WAAGA,EAAY/B,SAAAA,EAAW,GAAOvH,KAAK2d,QACtFoM,EAAmB9M,GAAYtpB,GAC/BA,EACAo1B,GAAWp1B,IAASiV,GAOtB,IAAAohB,EACAC,EACAF,IAAqBnhB,IACK,iBAAnBkhB,EAAY,KAIKE,EAAAjF,GAAKmE,GAAmBlC,GAAI8C,EAAY,GAAIA,EAAY,KAClEA,EAAA,CAAC,EAAG,MAEhB,MAAA1I,EAAY2I,EAAiB,IAAK/pB,KAAK2d,QAAS/U,UAAWkhB,IAK9C,WAAfxgB,IACA2gB,EAAoBF,EAAiB,IAC9B/pB,KAAK2d,QACR/U,UAAW,IAAIkhB,GAAanwB,UAC5B4N,UAAWA,KAWkB,OAAjC6Z,EAAU0B,qBACA1B,EAAA0B,mBAAqB3B,GAAsBC,IAEnD,MAAA0B,mBAAEA,GAAuB1B,EACzB8I,EAAmBpH,EAAqBpF,EAEvC,MAAA,CACH0D,YACA6I,oBACAD,wBACAlH,qBACAoH,mBACAC,cAPkBD,GAAoB7gB,EAAS,GAAKqU,EAQxD,CAEJ,cAAAoB,GACI,MAAMtB,SAAEA,GAAW,GAASxd,KAAK2d,QACjC3d,KAAKoqB,OACyB,WAA1BpqB,KAAKwpB,kBAAkChM,EAIvCxd,KAAKyE,MAAQzE,KAAKwpB,iBAHlBxpB,KAAKqqB,OAIT,CAEJ,IAAAC,CAAKpgB,EAAWqgB,GAAS,GACf,MAAAhb,SAAEA,GAAavP,KAErB,IAAKuP,EAAU,CACX,MAAQ3G,UAAAA,GAAc5I,KAAK2d,QACpB,MAAA,CAAEnoB,MAAM,EAAME,MAAOkT,EAAUA,EAAU7T,OAAS,GAAG,CAE1D,MAAAwU,cAAEA,EAAe6X,UAAAA,EAAA6I,kBAAWA,EAAmBD,sBAAAA,EAAuBphB,UAAAA,EAAWka,mBAAAA,EAAAqH,cAAoBA,EAAeD,iBAAAA,GAAsB3a,EAChJ,GAAuB,OAAnBvP,KAAKypB,UACE,OAAArI,EAAU7rB,KAAK,GACpB,MAAEkoB,MAAAA,EAAOpU,OAAAA,EAAAC,WAAQA,cAAYoU,EAAaU,SAAAA,GAAape,KAAK2d,QAO9D3d,KAAKwqB,MAAQ,EACbxqB,KAAKypB,UAAY3gB,KAAKoD,IAAIlM,KAAKypB,UAAWvf,GAErClK,KAAKwqB,MAAQ,IACbxqB,KAAAypB,UAAY3gB,KAAKoD,IAAIhC,EAAYigB,EAAgBnqB,KAAKwqB,MAAOxqB,KAAKypB,YAGvEc,EACAvqB,KAAKspB,YAAcpf,EAEI,OAAlBlK,KAAKopB,SACVppB,KAAKspB,YAActpB,KAAKopB,SAMxBppB,KAAKspB,YACDxgB,KAAK8L,MAAM1K,EAAYlK,KAAKypB,WAAazpB,KAAKwqB,MAGtD,MAAMC,EAAmBzqB,KAAKspB,YAAc7L,GAASzd,KAAKwqB,OAAS,EAAI,GAAI,GACrEE,EAAiB1qB,KAAKwqB,OAAS,EAC/BC,EAAmB,EACnBA,EAAmBN,EACzBnqB,KAAKspB,YAAcxgB,KAAKmD,IAAIwe,EAAkB,GAE3B,aAAfzqB,KAAKyE,OAA0C,OAAlBzE,KAAKopB,WAClCppB,KAAKspB,YAAca,GAEvB,IAAIQ,EAAU3qB,KAAKspB,YACfsB,EAAiBxJ,EACrB,GAAI/X,EAAQ,CAMR,MAAMgW,EAAWvW,KAAKoD,IAAIlM,KAAKspB,YAAaa,GAAiBD,EAKzD,IAAAW,EAAmB/hB,KAAKgiB,MAAMzL,GAK9B0L,EAAoB1L,EAAW,GAK9B0L,GAAqB1L,GAAY,IACd0L,EAAA,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmB/hB,KAAKoD,IAAI2e,EAAkBxhB,EAAS,GAIhC4L,QAAQ4V,EAAmB,KAE3B,YAAfvhB,GACAyhB,EAAoB,EAAIA,EACpBrN,IACAqN,GAAqBrN,EAAcwM,IAGnB,WAAf5gB,IACYshB,EAAAX,IAGzBU,EAAU/a,GAAM,EAAG,EAAGmb,GAAqBb,CAAA,CAO/C,MAAMzlB,EAAQimB,EACR,CAAEl1B,MAAM,EAAOE,MAAOkT,EAAU,IAChCgiB,EAAer1B,KAAKo1B,GACtBX,IACMvlB,EAAA/O,MAAQs0B,EAAsBvlB,EAAM/O,QAE1C,IAAAF,KAAEA,GAASiP,EACVimB,GAAyC,OAAvB5H,IACnBttB,EACIwK,KAAKwqB,OAAS,EACRxqB,KAAKspB,aAAea,EACpBnqB,KAAKspB,aAAe,GAE5B,MAAA0B,EAAwC,OAAlBhrB,KAAKopB,WACb,aAAfppB,KAAKyE,OAAwC,YAAfzE,KAAKyE,OAAuBjP,GAUxD,OATHw1B,QAAyC,IAAlBzhB,IACvB9E,EAAM/O,MAAQ0T,GAAiBR,EAAW5I,KAAK2d,QAASpU,IAExD6U,GACAA,EAAS3Z,EAAM/O,OAEfs1B,GACAhrB,KAAKirB,SAEFxmB,CAAA,CAEX,YAAI+D,GACM,MAAA+G,SAAEA,GAAavP,KACrB,OAAOuP,EAAWtH,GAAsBsH,EAASuT,oBAAsB,CAAA,CAE3E,QAAI3F,GACO,OAAAlV,GAAsBjI,KAAKspB,YAAW,CAEjD,QAAInM,CAAKC,GACLA,EAAUrV,GAAsBqV,GAChCpd,KAAKspB,YAAclM,EACG,OAAlBpd,KAAKopB,UAAoC,IAAfppB,KAAKwqB,MAC/BxqB,KAAKopB,SAAWhM,EAEXpd,KAAKkrB,SACVlrB,KAAKypB,UAAYzpB,KAAKkrB,OAAOlf,MAAQoR,EAAUpd,KAAKwqB,MACxD,CAEJ,SAAIA,GACA,OAAOxqB,KAAKupB,aAAA,CAEhB,SAAIiB,CAAMW,GACA,MAAAC,EAAaprB,KAAKupB,gBAAkB4B,EAC1CnrB,KAAKupB,cAAgB4B,EACjBC,IACKprB,KAAAmd,KAAOlV,GAAsBjI,KAAKspB,aAC3C,CAEJ,IAAAc,GAIQ,GAHCpqB,KAAK+S,SAASL,aACf1S,KAAK+S,SAAS2B,UAEb1U,KAAKke,UAEN,YADAle,KAAKwpB,iBAAmB,WAG5B,GAAIxpB,KAAK4d,UACL,OACJ,MAAMsN,OAAEA,EAAStC,GAAAyC,OAAiBA,EAAQ5B,UAAAA,GAAczpB,KAAK2d,QACxD3d,KAAKkrB,SACNlrB,KAAKkrB,OAASA,GAAQhhB,GAAclK,KAAKsqB,KAAKpgB,MAElDmhB,GAAUA,IACJrf,MAAAA,EAAMhM,KAAKkrB,OAAOlf,MACF,OAAlBhM,KAAKopB,SACAppB,KAAAypB,UAAYzd,EAAMhM,KAAKopB,SAEtBppB,KAAKypB,UAGS,aAAfzpB,KAAKyE,QACVzE,KAAKypB,UAAYzd,GAHjBhM,KAAKypB,UAAYA,QAA6CA,EAAYzpB,KAAKge,gBAKhE,aAAfhe,KAAKyE,OACLzE,KAAK+d,wBAET/d,KAAKqpB,WAAarpB,KAAKypB,UACvBzpB,KAAKopB,SAAW,KAKhBppB,KAAKyE,MAAQ,UACbzE,KAAKkrB,OAAOvkB,OAAM,CAEtB,KAAA0jB,GACQxpB,IAAAA,EACCb,KAAKke,WAIVle,KAAKyE,MAAQ,SACbzE,KAAKopB,SAAuC,QAA3BvoB,EAAKb,KAAKspB,mBAAgC,IAAPzoB,EAAgBA,EAAK,GAJrEb,KAAKwpB,iBAAmB,QAI6C,CAE7E,QAAA7V,GACuB,YAAf3T,KAAKyE,OACLzE,KAAKoqB,OAEJpqB,KAAAwpB,iBAAmBxpB,KAAKyE,MAAQ,WACrCzE,KAAKopB,SAAW,IAAA,CAEpB,MAAA6B,GACIjrB,KAAK0pB,WACL1pB,KAAKyE,MAAQ,WACP,MAAAuP,WAAEA,GAAehU,KAAK2d,QAC5B3J,GAAcA,GAAW,CAE7B,MAAA7I,GAC4B,OAApBnL,KAAKqpB,YACArpB,KAAAsqB,KAAKtqB,KAAKqpB,YAEnBrpB,KAAK0pB,WACL1pB,KAAK+d,uBAAsB,CAE/B,QAAA2L,GACI1pB,KAAKyE,MAAQ,OACbzE,KAAKsrB,aACLtrB,KAAK2e,yBACL3e,KAAK+d,wBACA/d,KAAAypB,UAAYzpB,KAAKqpB,WAAa,KACnCrpB,KAAK+S,SAAS5H,QAAO,CAEzB,UAAAmgB,GACStrB,KAAKkrB,SAEVlrB,KAAKkrB,OAAOpC,OACZ9oB,KAAKkrB,YAAS,EAAA,CAElB,MAAAX,CAAOpN,GAEI,OADPnd,KAAKypB,UAAY,EACVzpB,KAAKsqB,KAAKnN,GAAM,EAAI,EC3XnC,MAAMoO,OAAwB92B,IAAI,CAC9B,UACA,WACA,SACA,cCPJ,SAAS+2B,GAAK3gB,GACN,IAAAkW,EACJ,MAAO,UACY,IAAXA,IACAA,EAASlW,KACNkW,EAEf,CCHA,MAAM0K,GAAgB,CAClBC,kBAAc,GCFlB,SAASC,GAAa9gB,EAAU+gB,GACtB,MAAAC,EAAWL,GAAK3gB,GACtB,MAAO,KAAYhK,IAAAA,EAAYA,OAAsC,QAAtCA,EAAK4qB,GAAcG,UAAkC,IAAP/qB,EAAgBA,EAAKgrB,GAAU,CAChH,CCJA,MAAMC,OAAkD,KAChD,IAEKnsB,SAAArC,cAAc,OACdyuB,QAAQ,CAAEzR,QAAS,GAAK,CAAE9M,OAAQ,gBAC/C,OACWla,GACI,OAAA,CACf,CACW,OAAA,CAAA,GACR,gBCRH,SAAS04B,GAAuBxe,GACrB,OAAAyH,QAA2B,mBAAXzH,GAAyBse,OAC3Cte,GACkB,iBAAXA,IACHA,KAAUye,IAAwBH,OACvCxH,GAAmB9W,IAClBrY,MAAMC,QAAQoY,IAAWA,EAAO0e,MAAMF,IAC/C,CACA,MAAMG,GAAsB,EAAEj5B,EAAGE,EAAGH,EAAGI,KAAO,gBAAgBH,MAAME,MAAMH,MAAMI,KAC1E44B,GAAuB,CACzBzH,OAAQ,SACR/b,KAAM,OACN0b,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXtW,OAA0Coe,GAAA,CAAC,EAAG,IAAM,IAAM,IAC1Dje,QAA2Cie,GAAA,CAAC,IAAM,EAAG,EAAG,MACxDxe,OAA0Cwe,GAAA,CAAC,IAAM,IAAM,WACvDze,QAA2Cye,GAAA,CAAC,IAAM,KAAM,IAAM,OAElE,SAASC,GAAwB5e,EAAQhF,GACrC,OAAKgF,EAGsB,mBAAXA,GAAyBse,KAC9BtM,GAAqBhS,EAAQhF,GAE/B8b,GAAmB9W,GACjB2e,GAAoB3e,GAEtBrY,MAAMC,QAAQoY,GACZA,EAAOjU,KAAK8yB,GAAkBD,GAAwBC,EAAe7jB,IACxEyjB,GAAqB7H,UAGlB6H,GAAqBze,QAbrB,CAef,CCvCA,SAAS8e,GAAoBtd,EAASud,EAAW3jB,GAAa6U,MAAAA,EAAQ,WAAGjV,EAAW,IAAAa,OAAKA,EAAS,EAAGC,WAAAA,EAAa,OAAQb,KAAAA,EAAO,kBAAa4f,GAAW,IACrJ,MAAMmE,EAAkB,CAAED,CAACA,GAAY3jB,GACnCyf,IACAmE,EAAgBxE,OAASK,GACvB,MAAA7a,EAAS4e,GAAwB3jB,EAAMD,GAMtC,OAFHrT,MAAMC,QAAQoY,KACdgf,EAAgBhf,OAASA,GACtBwB,EAAQ+c,QAAQS,EAAiB,CACpC/O,MAAAA,EACAjV,WACAgF,OAASrY,MAAMC,QAAQoY,GAAmB,SAATA,EACjC2N,KAAM,OACNsR,WAAYpjB,EAAS,EACrBqjB,UAA0B,YAAfpjB,EAA2B,YAAc,UAE5D,CCpBA,SAASqjB,GAAeC,EAAWC,GAC/BD,EAAUC,SAAWA,EACrBD,EAAUE,SAAW,IACzB,CCDA,MAAMC,OAAmC,IAAM16B,OAAOE,eAAeiB,KAAKa,QAAQ/B,UAAW,aCoE7F,MAAM06B,GAA6B,CAC/Bnf,cACAD,aACAO,cAKJ,MAAM8e,WAA6B1P,GAC/B,WAAAzoB,CAAY6oB,GACR5c,MAAM4c,GACA,MAAAjnB,KAAEA,EAAMud,YAAAA,EAAAA,QAAajF,EAASpG,UAAAA,GAAc5I,KAAK2d,QACvD3d,KAAK+S,SAAW,IAAI+I,GAAqBlT,GAAW,CAACY,EAAmBD,IAAkBvJ,KAAKme,oBAAoB3U,EAAmBD,IAAgB7S,EAAMud,EAAajF,GACzKhP,KAAK+S,SAASqB,iBACtB,CACI,YAAAyK,CAAajW,EAAWW,GAChB1I,IAAAA,EACJ,IAAI2H,SAAEA,EAAW,IAAK6f,MAAAA,EAAO5f,KAAAA,EAAAA,KAAM9U,EAAMsgB,YAAAA,EAAavd,KAAAA,EAAA+yB,UAAMA,GAAezpB,KAAK2d,QAK5E,KAA+B,QAA5B9c,EAAKoT,EAAYiZ,aAA0B,IAAPrsB,OAAgB,EAASA,EAAG/M,SAC5D,OAAA,EAlBnB,IA1CuC6pB,EA2E3B,GARgB,iBAATlV,GACPqjB,MACkBrjB,KA1BZukB,KA2BNvkB,EAAOukB,GAA2BvkB,IArElCwU,IAD2BU,EA2EG3d,KAAK2d,SA1EfhqB,OACP,WAAjBgqB,EAAQhqB,OACPq4B,GAAuBrO,EAAQlV,MAwEiB,CACvC,MAAAuL,WAAEA,WAAYoK,EAAUnK,YAAAA,UAAajF,KAAY2O,GAAY3d,KAAK2d,QAClEwP,EAxElB,SAA8BvkB,EAAW+U,GAM/B,MAAAyP,EAAkB,IAAIjE,GAAoB,IACzCxL,EACH/U,UAAAA,EACAS,OAAQ,EACRoU,MAAO,EACPR,aAAa,IAEjB,IAAIxY,EAAQ,CAAEjP,MAAM,EAAOE,MAAOkT,EAAU,IAC5C,MAAMykB,EAAwB,GAK9B,IAAIrvB,EAAI,EACR,MAAQyG,EAAMjP,MAAQwI,EA/BN,KAgCJyG,EAAA2oB,EAAgB7C,OAAOvsB,GACTqvB,EAAAvyB,KAAK2J,EAAM/O,OAC5BsI,GAvCO,GAyCT,MAAA,CACHqqB,WAAO,EACPzf,UAAWykB,EACX7kB,SAAUxK,EA5CE,GA6CZyK,KAAM,SAEd,CAyC0C6kB,CAAqB1kB,EAAW+U,GAKrC,KAJzB/U,EAAYukB,EAAsBvkB,WAIpB7T,SACV6T,EAAU,GAAKA,EAAU,IAE7BJ,EAAW2kB,EAAsB3kB,SACjC6f,EAAQ8E,EAAsB9E,MAC9B5f,EAAO0kB,EAAsB1kB,KACtB9U,EAAA,WACnB,CACQ,MAAMi5B,EAAYN,GAAoBrY,EAAYiZ,MAAMp5B,QAAS4C,EAAMkS,EAAW,IAAK5I,KAAK2d,QAASnV,WAAU6f,QAAO5f,KAAAA,IAyB/G,OAtBPmkB,EAAUnD,UAAYA,QAA6CA,EAAYzpB,KAAKge,gBAChFhe,KAAKutB,iBACUZ,GAAAC,EAAW5sB,KAAKutB,iBAC/BvtB,KAAKutB,qBAAkB,GAWvBX,EAAUE,SAAW,KACX,MAAA9Y,WAAEA,GAAehU,KAAK2d,QAC5B1J,EAAYzN,IAAI4C,GAAiBR,EAAW5I,KAAK2d,QAASpU,IAC1DyK,GAAcA,IACdhU,KAAKmL,SACLnL,KAAK2e,wBAAwB,EAG9B,CACHiO,YACApkB,WACA6f,QACA10B,OACA8U,KAAAA,EACAG,UAAWA,EAEvB,CACI,YAAIJ,GACM,MAAA+G,SAAEA,GAAavP,KACrB,IAAKuP,EACM,OAAA,EACL,MAAA/G,SAAEA,GAAa+G,EACrB,OAAOtH,GAAsBO,EACrC,CACI,QAAI2U,GACM,MAAA5N,SAAEA,GAAavP,KACrB,IAAKuP,EACM,OAAA,EACL,MAAAqd,UAAEA,GAAcrd,EACf,OAAAtH,GAAsB2kB,EAAUtD,aAAe,EAC9D,CACI,QAAInM,CAAKC,GACC,MAAA7N,SAAEA,GAAavP,KACrB,IAAKuP,EACD,OACE,MAAAqd,UAAEA,GAAcrd,EACZqd,EAAAtD,YAAcvhB,GAAsBqV,EACtD,CACI,SAAIoN,GACM,MAAAjb,SAAEA,GAAavP,KACrB,IAAKuP,EACM,OAAA,EACL,MAAAqd,UAAEA,GAAcrd,EACtB,OAAOqd,EAAUY,YACzB,CACI,SAAIhD,CAAMW,GACA,MAAA5b,SAAEA,GAAavP,KACrB,IAAKuP,EACD,OACE,MAAAqd,UAAEA,GAAcrd,EACtBqd,EAAUY,aAAerC,CACjC,CACI,SAAI1mB,GACM,MAAA8K,SAAEA,GAAavP,KACrB,IAAKuP,EACM,MAAA,OACL,MAAAqd,UAAEA,GAAcrd,EACtB,OAAOqd,EAAUa,SACzB,CACI,aAAIhE,GACM,MAAAla,SAAEA,GAAavP,KACrB,IAAKuP,EACM,OAAA,KACL,MAAAqd,UAAEA,GAAcrd,EAGtB,OAAOqd,EAAUnD,SACzB,CAKI,cAAAkD,CAAeE,GACP,GAAC7sB,KAAKke,UAGL,CACK,MAAA3O,SAAEA,GAAavP,KACrB,IAAKuP,EACM,OAAA9F,GACL,MAAAmjB,UAAEA,GAAcrd,EACtBod,GAAeC,EAAWC,EACtC,MARY7sB,KAAKutB,gBAAkBV,EASpB,OAAApjB,EACf,CACI,IAAA2gB,GACI,GAAIpqB,KAAK4d,UACL,OACE,MAAArO,SAAEA,GAAavP,KACrB,IAAKuP,EACD,OACE,MAAAqd,UAAEA,GAAcrd,EACM,aAAxBqd,EAAUa,WACVztB,KAAK+d,wBAET6O,EAAUxC,MAClB,CACI,KAAAC,GACU,MAAA9a,SAAEA,GAAavP,KACrB,IAAKuP,EACD,OACE,MAAAqd,UAAEA,GAAcrd,EACtBqd,EAAUvC,OAClB,CACI,IAAAvB,GAGI,GAFA9oB,KAAK+S,SAAS5H,SACdnL,KAAK4d,WAAY,EACE,SAAf5d,KAAKyE,MACL,OACJzE,KAAK2e,yBACL3e,KAAK+d,wBACC,MAAAxO,SAAEA,GAAavP,KACrB,IAAKuP,EACD,OACE,MAAAqd,UAAEA,EAAWhkB,UAAAA,EAAAA,SAAWJ,OAAU7U,EAAM8U,KAAAA,EAAM4f,MAAAA,GAAU9Y,EAC9D,GAA4B,SAAxBqd,EAAUa,WACc,aAAxBb,EAAUa,UACV,OAUJ,GAAIztB,KAAKmd,KAAM,CACL,MAAElJ,YAAAA,EAAamK,SAAAA,EAAApK,WAAUA,UAAYhF,KAAY2O,GAAY3d,KAAK2d,QAClEyP,EAAkB,IAAIjE,GAAoB,IACzCxL,EACH/U,UAAAA,EACAJ,WACA7U,OACA8U,KAAAA,EACA4f,QACApL,aAAa,IAEXyQ,EAAa3lB,GAAsB/H,KAAKmd,MAC9ClJ,EAAY0Z,gBAAgBP,EAAgB7C,OAAOmD,EAjQ3C,IAiQqEh4B,MAAO03B,EAAgB7C,OAAOmD,GAAYh4B,MAjQ/G,GAkQpB,CACc,MAAAi0B,OAAEA,GAAW3pB,KAAK2d,QACxBgM,GAAUA,IACV3pB,KAAKmL,QACb,CACI,QAAAwI,GACU,MAAApE,SAAEA,GAAavP,KAChBuP,GAELA,EAASqd,UAAU3B,QAC3B,CACI,MAAA9f,GACU,MAAAoE,SAAEA,GAAavP,KAChBuP,GAELA,EAASqd,UAAUzhB,QAC3B,CACI,eAAOyiB,CAASjQ,GACN,MAAE1J,YAAAA,EAAavd,KAAAA,EAAAgnB,YAAMA,aAAapU,EAAYjB,QAAAA,EAAA1U,KAASA,GAASgqB,EACtE,OAAQoP,MACJr2B,GACA60B,GAAkB91B,IAAIiB,IACtBud,GACAA,EAAYiZ,OACZjZ,EAAYiZ,MAAMp5B,mBAAmB+5B,cAKpC5Z,EAAYiZ,MAAMxlB,WAAW0W,WAC7BV,GACc,WAAfpU,GACY,IAAZjB,GACS,YAAT1U,CACZ,ECxTA,MAAMm6B,GAAyBtC,IAAK,SAAgC,IAA1B9rB,OAAOquB,iBCAjD,MAAMC,GACF,WAAAl5B,CAAYm5B,GAERjuB,KAAK8oB,KAAO,IAAM9oB,KAAKkuB,OAAO,QACzBluB,KAAAiuB,WAAaA,EAAW30B,OAAO2b,QAC5C,CACI,IAAA8J,CAAKoP,EAAWC,GACL,OAAAhP,QAAQiP,IAAIruB,KAAKiuB,YAAYlP,KAAKoP,GAAWG,MAAMF,EAClE,CAII,MAAAG,CAAOC,GACH,OAAOxuB,KAAKiuB,WAAW,GAAGO,EAClC,CACI,MAAAC,CAAOD,EAAUE,GACb,IAAA,IAAS15B,EAAI,EAAGA,EAAIgL,KAAKiuB,WAAWl5B,OAAQC,IACxCgL,KAAKiuB,WAAWj5B,GAAGw5B,GAAYE,CAE3C,CACI,cAAA/B,CAAeE,EAAU3d,GACrB,MAAMyf,EAAgB3uB,KAAKiuB,WAAW10B,KAAKqzB,GACnCkB,MAA4BlB,EAAUD,eAC/BC,EAAUD,eAAeE,GAGzB3d,EAAS0d,KAGxB,MAAO,KACW+B,EAAA9zB,SAAQ,CAACsQ,EAAQnW,KAC3BmW,GAAUA,IACLnL,KAAAiuB,WAAWj5B,GAAG8zB,MAAM,GAC5B,CAEb,CACI,QAAI3L,GACO,OAAAnd,KAAKuuB,OAAO,OAC3B,CACI,QAAIpR,CAAKA,GACAnd,KAAAyuB,OAAO,OAAQtR,EAC5B,CACI,SAAIqN,GACO,OAAAxqB,KAAKuuB,OAAO,QAC3B,CACI,SAAI/D,CAAMA,GACDxqB,KAAAyuB,OAAO,QAASjE,EAC7B,CACI,aAAIf,GACO,OAAAzpB,KAAKuuB,OAAO,YAC3B,CACI,YAAI/lB,GACA,IAAIyD,EAAM,EACV,IAAA,IAASjX,EAAI,EAAGA,EAAIgL,KAAKiuB,WAAWl5B,OAAQC,IACxCiX,EAAMnD,KAAKmD,IAAIA,EAAKjM,KAAKiuB,WAAWj5B,GAAGwT,UAEpC,OAAAyD,CACf,CACI,MAAAiiB,CAAOU,GACH5uB,KAAKiuB,WAAWpzB,SAASg0B,GAAaA,EAASD,MACvD,CACI,OAAAzP,GACInf,KAAKkuB,OAAO,UACpB,CACI,IAAA9D,GACIpqB,KAAKkuB,OAAO,OACpB,CACI,KAAA7D,GACIrqB,KAAKkuB,OAAO,QACpB,CACI,MAAA/iB,GACInL,KAAKkuB,OAAO,SACpB,CACI,QAAAva,GACI3T,KAAKkuB,OAAO,WACpB,ECjEA,MAAMY,GAAqB,CAACp4B,EAAMhB,EAAOwmB,EAAQjT,EAAa,CAAA,EAAI+F,EAAS+f,IAAe/a,IACtF,MAAMgb,EAAkBhmB,GAAmBC,EAAYvS,IAAS,CAAE,EAM5D+mB,EAAQuR,EAAgBvR,OAASxU,EAAWwU,OAAS,EAKvD,IAAAkN,QAAEA,EAAU,GAAM1hB,EACZ0hB,GAAU5iB,GAAsB0V,GAC1C,IAAIE,EAAU,CACV/U,UAAWzT,MAAMC,QAAQ8mB,GAAUA,EAAS,CAAC,KAAMA,GACnDzT,KAAM,UACNlB,SAAU7R,EAAMyR,iBACb6nB,EACHvR,OAAQkN,EACRvM,SAAW1X,IACPhR,EAAM8Q,IAAIE,GACMsoB,EAAA5Q,UAAY4Q,EAAgB5Q,SAAS1X,EAAC,EAE1DsN,WAAY,KACIA,IACIgb,EAAAhb,YAAcgb,EAAgBhb,YAAY,EAE9Dtd,OACAud,YAAave,EACbsZ,QAAS+f,OAAY,EAAY/f,ICrCzC,UAA6BigB,KAAEA,EAAMxR,MAAOyR,gBAAQC,EAAeC,gBAAAA,EAAAC,iBAAiBA,EAAkBhmB,OAAAA,EAAAC,WAAQA,cAAYoU,EAAa5K,KAAAA,EAAA6X,QAAMA,KAAY1hB,IACrJ,QAAS5W,OAAO4C,KAAKgU,GAAYlU,MACrC,EDyCSu6B,CAAoBN,KACXrR,EAAA,IACHA,KACAjV,GAAqBhS,EAAMinB,KAQlCA,EAAQnV,WACAmV,EAAAnV,SAAWT,GAAsB4V,EAAQnV,WAEjDmV,EAAQD,cACAC,EAAAD,YAAc3V,GAAsB4V,EAAQD,mBAEnC,IAAjBC,EAAQ7K,OACA6K,EAAA/U,UAAU,GAAK+U,EAAQ7K,MAEnC,IAAIyc,GAAa,EAmBjB,KAlBqB,IAAjB5R,EAAQhqB,MACc,IAArBgqB,EAAQnV,WAAmBmV,EAAQD,eACpCC,EAAQnV,SAAW,EACG,IAAlBmV,EAAQF,QACK8R,GAAA,IAcjBA,IAAeR,QAA6B,IAAhBr5B,EAAMC,MAAqB,CACvD,MAAM4T,EAAgBH,GAAiBuU,EAAQ/U,UAAWomB,GAC1D,QAAsB,IAAlBzlB,EAOO,OANP4C,GAAMR,QAAO,KACTgS,EAAQS,SAAS7U,GACjBoU,EAAQ3J,YAAY,IAIjB,IAAIga,GAAsB,GAE7C,CAMI,OAAKe,GAAa9B,GAAqBW,SAASjQ,GACrC,IAAIsP,GAAqBtP,GAGzB,IAAIwL,GAAoBxL,EACvC,EE7GA,SAAS6R,GAAczH,EAAK0H,IACE,IAAtB1H,EAAI/tB,QAAQy1B,IACZ1H,EAAIjtB,KAAK20B,EACjB,CACA,SAASC,GAAW3H,EAAK0H,GACf,MAAAv0B,EAAQ6sB,EAAI/tB,QAAQy1B,GACtBv0B,GAAQ,GACJ6sB,EAAAvnB,OAAOtF,EAAO,EAC1B,CCNA,MAAMy0B,GACF,WAAA76B,GACIkL,KAAK2uB,cAAgB,EAC7B,CACI,GAAAtuB,CAAIuvB,GAEA,OADcJ,GAAAxvB,KAAK2uB,cAAeiB,GAC3B,IAAMF,GAAW1vB,KAAK2uB,cAAeiB,EACpD,CACI,MAAAC,CAAO38B,EAAGE,EAAGH,GACH,MAAA68B,EAAmB9vB,KAAK2uB,cAAc55B,OAC5C,GAAK+6B,EAEL,GAAyB,IAArBA,EAIA9vB,KAAK2uB,cAAc,GAAGz7B,EAAGE,EAAGH,QAG5B,IAAA,IAAS+B,EAAI,EAAGA,EAAI86B,EAAkB96B,IAAK,CAKjC,MAAA46B,EAAU5vB,KAAK2uB,cAAc35B,GACxB46B,GAAAA,EAAQ18B,EAAGE,EAAGH,EACzC,CAEA,CACI,OAAA88B,GACI,OAAO/vB,KAAK2uB,cAAc55B,MAClC,CACI,KAAAwW,GACIvL,KAAK2uB,cAAc55B,OAAS,CACpC,ECdA,MAAMi7B,GASF,WAAAl7B,CAAY4P,EAAMiZ,EAAU,IAKxB3d,KAAKiwB,QAAU,UAQfjwB,KAAKkwB,iBAAmB,KAIxBlwB,KAAKmwB,OAAS,CAAC,EACfnwB,KAAKowB,gBAAkB,CAAC1pB,EAAGzF,GAAS,KAC1B,MAAAqoB,EAAcnM,GAAKnR,MAMrBhM,KAAKqwB,YAAc/G,GACnBtpB,KAAKswB,oBAETtwB,KAAK8G,KAAO9G,KAAKlM,QACjBkM,KAAKuwB,WAAW7pB,GAEZ1G,KAAKlM,UAAYkM,KAAK8G,MAAQ9G,KAAKmwB,OAAOK,QAC1CxwB,KAAKmwB,OAAOK,OAAOX,OAAO7vB,KAAKlM,SAG/BmN,GAAUjB,KAAKmwB,OAAOM,eACtBzwB,KAAKmwB,OAAOM,cAAcZ,OAAO7vB,KAAKlM,QAAO,EAGrDkM,KAAK0wB,aAAc,EACnB1wB,KAAKuwB,WAAW7rB,GAChB1E,KAAKktB,MAAQvP,EAAQuP,KAAA,CAEzB,UAAAqD,CAAWz8B,GA/DC,IAAC4B,EAgETsK,KAAKlM,QAAUA,EACVkM,KAAAqwB,UAAYlT,GAAKnR,MACQ,OAA1BhM,KAAKkwB,uBAAyC,IAAZp8B,IAC7BkM,KAAAkwB,kBAnEAx6B,EAmE2BsK,KAAKlM,SAlErCyjB,MAAM5H,WAAWja,KAmErB,CAEJ,iBAAA46B,CAAkBK,EAAiB3wB,KAAKlM,SACpCkM,KAAK2wB,eAAiBA,EACtB3wB,KAAK4wB,cAAgB5wB,KAAKqwB,SAAA,CA0C9B,QAAAQ,CAASC,GAIE,OAAA9wB,KAAK+wB,GAAG,SAAUD,EAAY,CAEzC,EAAAC,CAAGC,EAAWnmB,GACL7K,KAAKmwB,OAAOa,KACbhxB,KAAKmwB,OAAOa,GAAa,IAAIrB,IAEjC,MAAMsB,EAAcjxB,KAAKmwB,OAAOa,GAAW3wB,IAAIwK,GAC/C,MAAkB,WAAdmmB,EACO,KACSC,IAKZ9kB,GAAMV,MAAK,KACFzL,KAAKmwB,OAAOK,OAAOT,WACpB/vB,KAAK8oB,MAAK,GAEjB,EAGFmI,CAAA,CAEX,cAAAC,GACe,IAAA,MAAAC,KAAiBnxB,KAAKmwB,OACxBnwB,KAAAmwB,OAAOgB,GAAe5lB,OAC/B,CAOJ,MAAA6lB,CAAOC,EAAeC,GAClBtxB,KAAKqxB,cAAgBA,EACrBrxB,KAAKsxB,kBAAoBA,CAAA,CAiB7B,GAAA9qB,CAAIE,EAAGzF,GAAS,GACPA,GAAWjB,KAAKqxB,cAIZrxB,KAAAqxB,cAAc3qB,EAAG1G,KAAKowB,iBAHtBpwB,KAAAowB,gBAAgB1pB,EAAGzF,EAI5B,CAEJ,eAAA0sB,CAAgB7mB,EAAMhT,EAASmW,GAC3BjK,KAAKwG,IAAI1S,GACTkM,KAAK8G,UAAO,EACZ9G,KAAK2wB,eAAiB7pB,EACjB9G,KAAA4wB,cAAgB5wB,KAAKqwB,UAAYpmB,CAAA,CAM1C,IAAA4S,CAAKnW,EAAG6qB,GAAe,GACnBvxB,KAAKowB,gBAAgB1pB,GACrB1G,KAAK8G,KAAOJ,EACP1G,KAAA4wB,cAAgB5wB,KAAK2wB,oBAAiB,EAC3CY,GAAgBvxB,KAAK8oB,OACjB9oB,KAAKsxB,mBACLtxB,KAAKsxB,mBAAkB,CAS/B,GAAA37B,GAII,OAAOqK,KAAKlM,OAAA,CAKhB,WAAA09B,GACI,OAAOxxB,KAAK8G,IAAA,CAShB,WAAAK,GACU,MAAAmiB,EAAcnM,GAAKnR,MACrB,IAAChM,KAAKkwB,uBACkB,IAAxBlwB,KAAK2wB,gBACLrH,EAActpB,KAAKqwB,UAnOJ,GAoOR,OAAA,EAEX,MAAMpmB,EAAQnB,KAAKoD,IAAIlM,KAAKqwB,UAAYrwB,KAAK4wB,cAtO1B,IAwOZ,OAAAhR,GAAkBjQ,WAAW3P,KAAKlM,SACrC6b,WAAW3P,KAAK2wB,gBAAiB1mB,EAAK,CAc9C,KAAAtD,CAAM8qB,GAEK,OADPzxB,KAAK8oB,OACE,IAAI1J,SAASJ,IAChBhf,KAAK0wB,aAAc,EACd1wB,KAAA4sB,UAAY6E,EAAezS,GAC5Bhf,KAAKmwB,OAAOuB,gBACP1xB,KAAAmwB,OAAOuB,eAAe7B,QAAO,IAEvC9Q,MAAK,KACA/e,KAAKmwB,OAAOwB,mBACP3xB,KAAAmwB,OAAOwB,kBAAkB9B,SAElC7vB,KAAK4xB,gBAAe,GACvB,CAOL,IAAA9I,GACQ9oB,KAAK4sB,YACL5sB,KAAK4sB,UAAU9D,OACX9oB,KAAKmwB,OAAO0B,iBACP7xB,KAAAmwB,OAAO0B,gBAAgBhC,UAGpC7vB,KAAK4xB,gBAAe,CAOxB,WAAAE,GACW,QAAE9xB,KAAK4sB,SAAA,CAElB,cAAAgF,UACW5xB,KAAK4sB,SAAA,CAWhB,OAAAmF,GACI/xB,KAAKkxB,iBACLlxB,KAAK8oB,OACD9oB,KAAKsxB,mBACLtxB,KAAKsxB,mBACT,EAGR,SAASrd,GAAYvP,EAAMiZ,GAChB,OAAA,IAAIqS,GAAYtrB,EAAMiZ,EACjC,CCpTA,SAASqU,GAAe9qB,EAAetU,EAAK8C,GACpCwR,EAAc+qB,SAASr/B,GACvBsU,EAAckM,SAASxgB,GAAK4T,IAAI9Q,GAGhCwR,EAAcgrB,SAASt/B,EAAKqhB,GAAYve,GAEhD,CCZA,MAAMy8B,GAAeh2B,GAAQA,EAAI1F,QAAQ,mBAAoB,SAASsD,cCAhEq4B,GAA+B,QAAUD,GADjB,kBCA9B,SAASE,GAAqBnrB,GACnB,OAAAA,EAActT,MAAMw+B,GAC/B,CCJA,MAAME,GAAiB58B,GAAUuf,QAAQvf,GAASA,EAAMyR,aCExD,SAASorB,GAAqBrrB,EAAetU,GACnC,MAAA4/B,EAAatrB,EAAckM,SAAS,cAKtC,GCNyB1d,EDMD88B,ECLrBvd,QAAQqd,GAAc58B,IAAUA,EAAM2K,KDMlC,OAAAmyB,EAAWnyB,IAAIzN,GCP9B,IAAiC8C,CDSjC,CEGA,SAAS+8B,IAAqBC,cAAEA,EAAeC,eAAAA,GAAkB//B,GAC7D,MAAMggC,EAAcF,EAAcngC,eAAeK,KAAgC,IAAxB+/B,EAAe//B,GAEjE,OADP+/B,EAAe//B,IAAO,EACfggC,CACX,CACA,SAASC,GAAc3rB,EAAe4rB,GAAuBrV,MAAAA,EAAQ,EAAAsV,mBAAGA,EAAoBp/B,KAAAA,GAAS,IAC7FkN,IAAAA,EACA,IAAAoI,WAAEA,EAAa/B,EAAcwB,qCAAwBsqB,KAAkB9W,GAAW4W,EAClFC,IACa9pB,EAAA8pB,GACjB,MAAM9E,EAAa,GACbgF,EAAqBt/B,GACvBuT,EAAcgsB,gBACdhsB,EAAcgsB,eAAeC,WAAWx/B,GAC5C,IAAA,MAAWf,KAAOspB,EAAQ,CACtB,MAAMxmB,EAAQwR,EAAckM,SAASxgB,EAAgD,QAA1CiO,EAAKqG,EAAcksB,aAAaxgC,UAAyB,IAAPiO,EAAgBA,EAAK,MAC5GwyB,EAAcnX,EAAOtpB,GAC3B,QAAoB,IAAhBygC,GACCJ,GACGR,GAAqBQ,EAAoBrgC,GAC7C,SAEJ,MAAMo8B,EAAkB,CACpBvR,MAAAA,KACGzU,GAAmBC,GAAc,CAAE,EAAErW,IAM5C,IAAIm8B,GAAY,EAChB,GAAIrvB,OAAO4zB,uBAAwB,CACzB,MAAAC,EAAWlB,GAAqBnrB,GACtC,GAAIqsB,EAAU,CACV,MAAM9J,EAAY/pB,OAAO4zB,uBAAuBC,EAAU3gC,EAAKuZ,IAC7C,OAAdsd,IACAuF,EAAgBvF,UAAYA,EAChBsF,GAAA,EAEhC,CACA,CACQwD,GAAqBrrB,EAAetU,GACpC8C,EAAMiR,MAAMmoB,GAAmBl8B,EAAK8C,EAAO29B,EAAansB,EAAcssB,oBAAsB1rB,GAAerS,IAAI7C,GACzG,CAAEe,MAAM,GACRq7B,EAAiB9nB,EAAe6nB,IACtC,MAAMnC,EAAYl3B,EAAMk3B,UACpBA,GACAqB,EAAWnzB,KAAK8xB,EAE5B,CAQWqB,OAPH+E,GACA5T,QAAQiP,IAAIJ,GAAYlP,MAAK,KACzB5S,GAAMR,QAAO,KACQqnB,GPnDjC,SAAmB9rB,EAAeG,GACxB,MAAAkI,EAAW9H,GAAeP,EAAeG,GAC3C,IAAA2rB,cAAEA,EAAgB,CAAA,EAAI/pB,WAAAA,EAAa,CAAE,KAAKiT,GAAW3M,GAAY,CAAE,EACvE2M,EAAS,IAAKA,KAAW8W,GACzB,IAAA,MAAWpgC,KAAOspB,EAEC8V,GAAA9qB,EAAetU,GQjBA8T,ERgBawV,EAAOtpB,GQd/CgU,GAAkBF,GAAKA,EAAEA,EAAE3R,OAAS,IAAM,EAAI2R,IAFpB,IAACA,CRmBtC,CO2CiC+sB,CAAUvsB,EAAe8rB,EAAa,GAC1D,IAGF/E,CACX,CErEA,SAASyF,GAAexsB,EAAeysB,EAAShW,EAAU,CAAA,GAClD9c,IAAAA,EACJ,MAAM0O,EAAW9H,GAAeP,EAAeysB,EAA0B,SAAjBhW,EAAQhqB,KACjB,QAAxCkN,EAAKqG,EAAc0sB,uBAAoC,IAAP/yB,OAAgB,EAASA,EAAGyG,YAC7E,GACF,IAAA2B,WAAEA,EAAa/B,EAAcwB,wBAA0B,CAAE,GAAK6G,GAAY,CAAE,EAC5EoO,EAAQoV,qBACR9pB,EAAa0U,EAAQoV,oBAMzB,MAAMc,EAAetkB,EACf,IAAM6P,QAAQiP,IAAIwE,GAAc3rB,EAAeqI,EAAUoO,IACzD,IAAMyB,QAAQJ,UAKd8U,EAAqB5sB,EAAc6sB,iBAAmB7sB,EAAc6sB,gBAAgB1+B,KACpF,CAAC2+B,EAAe,KACd,MAAM7E,cAAEA,EAAgB,EAAGC,gBAAAA,EAAAC,iBAAiBA,GAAsBpmB,EAClE,OAkBZ,SAAyB/B,EAAeysB,EAASxE,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAG1R,GAC3G,MAAMsQ,EAAa,GACbgG,GAAsB/sB,EAAc6sB,gBAAgB1+B,KAAO,GAAK+5B,EAChE8E,EAA+C,IAArB7E,EAC1B,CAACr6B,EAAI,IAAMA,EAAIo6B,EACf,CAACp6B,EAAI,IAAMi/B,EAAqBj/B,EAAIo6B,EAUnC,OATDj6B,MAAA2d,KAAK5L,EAAc6sB,iBACpBI,KAAKC,IACLv5B,SAAQ,CAACoK,EAAOjQ,KACXiQ,EAAA4qB,OAAO,iBAAkB8D,GAC/B1F,EAAWnzB,KAAK44B,GAAezuB,EAAO0uB,EAAS,IACxChW,EACHF,MAAO0R,EAAgB+E,EAAwBl/B,KAChD+pB,MAAK,IAAM9Z,EAAM4qB,OAAO,oBAAqB8D,KAAS,IAEtDvU,QAAQiP,IAAIJ,EACvB,CAlCmBoG,CAAgBntB,EAAeysB,EAASxE,EAAgB6E,EAAc5E,EAAiBC,EAAkB1R,EAAO,EAEzH,IAAMyB,QAAQJ,WAKdiQ,KAAEA,GAAShmB,EACjB,GAAIgmB,EAAM,CACN,MAAOqF,EAAOC,GAAiB,mBAATtF,EAChB,CAAC4E,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQvV,MAAK,IAAMwV,KAClC,CAEe,OAAAnV,QAAQiP,IAAI,CAACwF,IAAgBC,EAAmBnW,EAAQF,QAEvE,CAkBA,SAAS2W,GAAgBlhC,EAAGE,GACjB,OAAAF,EAAEshC,iBAAiBphC,EAC9B,CC5DA,MAAMqhC,GAAkB7sB,GAAa7S,OACrC,SAAS2/B,GAAkBxtB,GACvB,IAAKA,EACM,OACP,IAACA,EAAcytB,sBAAuB,CAChC90B,MAAAA,EAAUqH,EAAc0tB,QACxBF,GAAkBxtB,EAAc0tB,SAChC,CAAE,EAID/0B,YAH6B,IAAhCqH,EAActT,MAAMihC,UACpBh1B,EAAQg1B,QAAU3tB,EAActT,MAAMihC,SAEnCh1B,CACf,CACI,MAAMA,EAAU,CAAE,EAClB,IAAA,IAAS7K,EAAI,EAAGA,EAAIy/B,GAAiBz/B,IAAK,CAChC,MAAA0B,EAAOkR,GAAa5S,GACpB8/B,EAAO5tB,EAActT,MAAM8C,IAC7BsQ,GAAe8tB,KAAkB,IAATA,KACxBj1B,EAAQnJ,GAAQo+B,EAE5B,CACW,OAAAj1B,CACX,CChBA,MAAMk1B,GAAuB,IAAIptB,IAAsBhO,UACjDq7B,GAAoBrtB,GAAqB5S,OAC/C,SAASkgC,GAAY/tB,GACjB,OAAQ+mB,GAAe7O,QAAQiP,IAAIJ,EAAW10B,KAAI,EAAGqzB,YAAWjP,aCRpE,SAA8BzW,EAAeG,EAAYsW,EAAU,CAAA,GAE3D,IAAAiP,EACA,GAFU1lB,EAAA2oB,OAAO,iBAAkBxoB,GAEnClS,MAAMC,QAAQiS,GAAa,CACrB4mB,MAAAA,EAAa5mB,EAAW9N,KAAKo6B,GAAYD,GAAexsB,EAAeysB,EAAShW,KAC1EiP,EAAAxN,QAAQiP,IAAIJ,EAChC,MAAA,GACmC,iBAAf5mB,EACAulB,EAAA8G,GAAexsB,EAAeG,EAAYsW,OAErD,CACK,MAAAuX,EAA2C,mBAAf7tB,EAC5BI,GAAeP,EAAeG,EAAYsW,EAAQrW,QAClDD,EACNulB,EAAYxN,QAAQiP,IAAIwE,GAAc3rB,EAAeguB,EAAoBvX,GACjF,CACW,OAAAiP,EAAU7N,MAAK,KACJ7X,EAAA2oB,OAAO,oBAAqBxoB,EAAU,GAE5D,CDXkF8tB,CAAqBjuB,EAAe0lB,EAAWjP,KACjI,CACA,SAASyX,GAAqBluB,GACtB,IAAA6kB,EAAUkJ,GAAY/tB,GACtBzC,EAAQ4wB,KACRC,GAAkB,EAKtB,MAAMC,EAA2B5hC,GAAS,CAAC6H,EAAK6L,KACxCxG,IAAAA,EACJ,MAAM0O,EAAW9H,GAAeP,EAAeG,EAAqB,SAAT1T,EACZ,QAAxCkN,EAAKqG,EAAc0sB,uBAAoC,IAAP/yB,OAAgB,EAASA,EAAGyG,YAC7E,GACN,GAAIiI,EAAU,CACV,MAAMtG,WAAEA,EAAA+pB,cAAYA,KAAkB9W,GAAW3M,EACjD/T,EAAM,IAAKA,KAAQ0gB,KAAW8W,EAC1C,CACe,OAAAx3B,CAAA,EAmBX,SAASg6B,EAAeC,GACd,MAAA7hC,MAAEA,GAAUsT,EACZrH,EAAU60B,GAAkBxtB,EAAc0tB,SAAW,CAAE,EAKvD3G,EAAa,GAKbyH,MAAkBjhC,IAMxB,IAAIkhC,EAAkB,CAAE,EAKpBC,EAAsBvU,IAO1B,IAAA,IAASrsB,EAAI,EAAGA,EAAIggC,GAAmBhgC,IAAK,CAClC,MAAArB,EAAOohC,GAAqB//B,GAC5B6gC,EAAYpxB,EAAM9Q,GAClBmhC,OAAuB,IAAhBlhC,EAAMD,GACbC,EAAMD,GACNkM,EAAQlM,GACRmiC,EAAgB9uB,GAAe8tB,GAK/BiB,EAAcpiC,IAAS8hC,EAAoBI,EAAUG,SAAW,MAClD,IAAhBD,IACsBH,EAAA5gC,GAOtB,IAAAihC,EAAcnB,IAASj1B,EAAQlM,IAC/BmhC,IAASlhC,EAAMD,IACfmiC,EAeJ,GAXIG,GACAX,GACApuB,EAAcgvB,yBACAD,GAAA,GAMRJ,EAAAnD,cAAgB,IAAKiD,IAI7BE,EAAUG,UAA4B,OAAhBD,IAElBjB,IAASe,EAAUM,UAErB1vB,GAAoBquB,IACJ,kBAATA,EACP,SAOJ,MAAMsB,EAAmBC,GAAuBR,EAAUM,SAAUrB,GACpE,IAAIwB,EAAoBF,GAEnBziC,IAAS8hC,GACNI,EAAUG,WACTC,GACDH,GAEH9gC,EAAI4gC,GAAuBE,EAC5BS,GAAuB,EAK3B,MAAMC,EAAiBrhC,MAAMC,QAAQ0/B,GAAQA,EAAO,CAACA,GAKrD,IAAI2B,EAAiBD,EAAeh+B,OAAO+8B,EAAwB5hC,GAAO,KACtD,IAAhBoiC,IACAU,EAAiB,CAAE,GAUvB,MAAMC,mBAAEA,EAAqB,CAAE,GAAKb,EAC9Bc,EAAU,IACTD,KACAD,GAEDG,EAAiBhkC,IACC0jC,GAAA,EAChBZ,EAAYjgC,IAAI7C,KACO2jC,GAAA,EACvBb,EAAYtqB,OAAOxY,IAEbijC,EAAAlD,eAAe//B,IAAO,EAC1BqhB,MAAAA,EAAc/M,EAAckM,SAASxgB,GACvCqhB,IACAA,EAAY4iB,WAAY,EAAA,EAEhC,IAAA,MAAWjkC,KAAO+jC,EAAS,CACjB,MAAAphC,EAAOkhC,EAAe7jC,GACtBkU,EAAO4vB,EAAmB9jC,GAE5B,GAAA+iC,EAAgBpjC,eAAeK,GAC/B,SAIJ,IAAIkkC,GAAkB,EAEAA,EADlBlwB,GAAkBrR,IAASqR,GAAkBE,IAC1BD,GAAetR,EAAMuR,GAGtBvR,IAASuR,EAE3BgwB,EACIvhC,QAEAqhC,EAAchkC,GAId8iC,EAAYr1B,IAAIzN,QAGN,IAAT2C,GAAsBmgC,EAAYjgC,IAAI7C,GAK3CgkC,EAAchkC,GAOJijC,EAAAnD,cAAc9/B,IAAO,CAEnD,CAKYijC,EAAUM,SAAWrB,EACrBe,EAAUa,mBAAqBD,EAI3BZ,EAAUG,WACVL,EAAkB,IAAKA,KAAoBc,IAE3CnB,GAAmBpuB,EAAc6vB,wBACbT,GAAA,GAQpBA,MAFyBL,GAAeG,IACIG,IAE5CtI,EAAWnzB,QAAQ07B,EAAej9B,KAAKqzB,IAAe,CAClDA,YACAjP,QAAS,CAAEhqB,YAG/B,CAMQ,GAAI+hC,EAAYrgC,KAAM,CAClB,MAAM2hC,EAAoB,CAAE,EAChBtB,EAAA76B,SAASjI,IACX,MAAAqkC,EAAiB/vB,EAAcgwB,cAActkC,GAC7CqhB,EAAc/M,EAAckM,SAASxgB,GACvCqhB,IACAA,EAAY4iB,WAAY,GAE5BG,EAAkBpkC,GAAOqkC,QAAuDA,EAAiB,IAAA,IAErGhJ,EAAWnzB,KAAK,CAAE8xB,UAAWoK,GACzC,CACY,IAAAG,EAAgBliB,QAAQgZ,EAAWl5B,QAOvC,OANIugC,IACmB,IAAlB1hC,EAAMihC,SAAqBjhC,EAAMihC,UAAYjhC,EAAMm4B,SACnD7kB,EAAcgvB,yBACCiB,GAAA,GAEF7B,GAAA,EACX6B,EAAgBpL,EAAQkC,GAAc7O,QAAQJ,SAC7D,CAkBW,MAAA,CACHwW,iBACA4B,UAhBK,SAAUzjC,EAAMqiC,GACjBn1B,IAAAA,EAEA,GAAA4D,EAAM9Q,GAAMqiC,WAAaA,EACzB,OAAO5W,QAAQJ,UAEsB,QAAxCne,EAAKqG,EAAc6sB,uBAAoC,IAAPlzB,GAAyBA,EAAGhG,SAASoK,IAAgBpE,IAAAA,EAAYA,OAA+B,QAA/BA,EAAKoE,EAAMiuB,sBAAmC,IAAPryB,OAAgB,EAASA,EAAGu2B,UAAUzjC,EAAMqiC,EAAQ,IACvMvxB,EAAA9Q,GAAMqiC,SAAWA,EACjB/H,MAAAA,EAAauH,EAAe7hC,GAClC,IAAA,MAAWf,KAAO6R,EACRA,EAAA7R,GAAK8/B,cAAgB,CAAE,EAE1BzE,OAAAA,CACf,EAIQoJ,mBAjQJ,SAA4BC,GACxBvL,EAAUuL,EAAapwB,EAC/B,EAgQQisB,SAAU,IAAM1uB,EAChB8yB,MAAO,KACH9yB,EAAQ4wB,KACUC,GAAA,CAAA,EAG9B,CACA,SAASe,GAAuBvvB,EAAMvR,GAC9B,MAAgB,iBAATA,EACAA,IAASuR,IAEX3R,MAAMC,QAAQG,KACXsR,GAAetR,EAAMuR,EAGrC,CACA,SAAS0wB,GAAgBxB,GAAW,GACzB,MAAA,CACHA,WACAtD,cAAe,CAAE,EACjBC,eAAgB,CAAE,EAClB+D,mBAAoB,CAAE,EAE9B,CACA,SAASrB,KACE,MAAA,CACHtJ,QAASyL,IAAgB,GACzBC,YAAaD,KACbE,WAAYF,KACZG,SAAUH,KACVI,UAAWJ,KACXK,WAAYL,KACZM,KAAMN,KAEd,CEzUA,MAAMO,GACF,WAAAjjC,CAAYkjC,GACRh4B,KAAKi4B,WAAY,EACjBj4B,KAAKg4B,KAAOA,CACpB,CACI,MAAArsB,GAAS,ECHb,IAAIusB,GAAK,ECCT,MAAMjK,GAAa,CACfrB,UAAW,CACPmL,QCDR,cAA+BA,GAM3B,WAAAjjC,CAAYkjC,GACRj3B,MAAMi3B,GACNA,EAAK9E,iBAAmB8E,EAAK9E,eAAiBkC,GAAqB4C,GAC3E,CACI,mCAAAG,GACI,MAAMpM,QAAEA,GAAY/rB,KAAKg4B,KAAKtwB,WAC1BjB,GAAoBslB,KACpB/rB,KAAKo4B,gBAAkBrM,EAAQsM,UAAUr4B,KAAKg4B,MAE1D,CAII,KAAAM,GACIt4B,KAAKm4B,qCACb,CACI,MAAAxsB,GACI,MAAMogB,QAAEA,GAAY/rB,KAAKg4B,KAAKtwB,YACtBqkB,QAASwM,GAAgBv4B,KAAKg4B,KAAKQ,WAAa,CAAE,EACtDzM,IAAYwM,GACZv4B,KAAKm4B,qCAEjB,CACI,OAAAM,GACQ53B,IAAAA,EACCb,KAAAg4B,KAAK9E,eAAeqE,QACO,QAA/B12B,EAAKb,KAAKo4B,uBAAoC,IAAPv3B,GAAyBA,EAAGrN,KAAKwM,KACjF,ID9BI83B,KAAM,CACFC,QDLR,cAAmCA,GAC/B,WAAAjjC,GACIiM,SAASmD,WACTlE,KAAKk4B,GAAKA,IAClB,CACI,MAAAvsB,GACQ,IAAC3L,KAAKg4B,KAAKpE,gBACX,OACJ,MAAM8E,UAAEA,EAAAC,eAAWA,GAAmB34B,KAAKg4B,KAAKpE,iBACxC8E,UAAWE,GAAkB54B,KAAKg4B,KAAKa,qBAAuB,CAAE,EACxE,IAAK74B,KAAKg4B,KAAK9E,gBAAkBwF,IAAcE,EAC3C,OAEJ,MAAME,EAAgB94B,KAAKg4B,KAAK9E,eAAekE,UAAU,QAASsB,GAC9DC,IAAmBD,GACnBI,EAAc/Z,MAAK,IAAM4Z,EAAe34B,KAAKk4B,KAEzD,CACI,KAAAI,GACI,MAAMS,SAAEA,GAAa/4B,KAAKg4B,KAAKpE,iBAAmB,CAAE,EAChDmF,IACK/4B,KAAAy4B,QAAUM,EAAS/4B,KAAKk4B,IAEzC,CACI,OAAAO,GAAU,KG3BRO,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,iBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,EAAOK,EAAY,QAClC,MAAA,CACHC,MAAO,CACHvsB,EAAGisB,EAAM,GAAGK,MACZ1nB,EAAGqnB,EAAM,GAAGK,OAGxB,CCTA,SAASE,GAAYtd,EAAQ8U,EAAWpB,EAASjS,EAAU,CAAE8b,SAAS,IAElE,OADOvd,EAAAwd,iBAAiB1I,EAAWpB,EAASjS,GACrC,IAAMzB,EAAOyd,oBAAoB3I,EAAWpB,EACvD,CCAA,SAASgK,GAAgB1d,EAAQ8U,EAAWpB,EAASjS,GACjD,OAAO6b,GAAYtd,EAAQ8U,EFMR,CAACpB,GACZqJ,GAAUD,GAAiBC,IAAUrJ,EAAQqJ,EAAOI,GAAiBJ,IEPvCY,CAAejK,GAAUjS,EACnE,CCLA,MAAM1D,GAAW,CAAC/mB,EAAGE,IAAM0V,KAAKuE,IAAIna,EAAIE,GCWxC,MAAM0mC,GACF,WAAAhlC,CAAYmkC,EAAOc,GAAUC,mBAAEA,EAAAC,cAAoBA,mBAAeC,GAAmB,GAAU,IAgEvF,GA5DJl6B,KAAKm6B,WAAa,KAIlBn6B,KAAKo6B,cAAgB,KAIrBp6B,KAAKq6B,kBAAoB,KAIzBr6B,KAAK+5B,SAAW,CAAE,EAIlB/5B,KAAKi6B,cAAgBv6B,OACrBM,KAAKs6B,YAAc,KACX,IAAEt6B,KAAKo6B,gBAAiBp6B,KAAKq6B,kBAC7B,OACJ,MAAME,EAAOC,GAAWx6B,KAAKq6B,kBAAmBr6B,KAAKy6B,SAC/CC,EAAmC,OAApB16B,KAAKm6B,WAIpBQ,EDxClB,SAAoBznC,EAAGE,GAEnB,MAAMwnC,EAAS3gB,GAAS/mB,EAAE8Z,EAAG5Z,EAAE4Z,GACzB6tB,EAAS5gB,GAAS/mB,EAAE0e,EAAGxe,EAAEwe,GAC/B,OAAO9I,KAAKC,KAAK6xB,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAWP,EAAKvS,OAAQ,CAAEhb,EAAG,EAAG4E,EAAG,KAAQ,EACvE,IAAC8oB,IAAiBC,EAClB,OACE,MAAEpB,MAAAA,GAAUgB,GACVrwB,UAAAA,GAAcoB,GACtBtL,KAAKy6B,QAAQ3/B,KAAK,IAAKy+B,EAAOrvB,UAAAA,IAC9B,MAAM6wB,QAAEA,EAAAC,OAASA,GAAWh7B,KAAK+5B,SAC5BW,IACUK,GAAAA,EAAQ/6B,KAAKo6B,cAAeG,GACvCv6B,KAAKm6B,WAAan6B,KAAKo6B,eAEjBY,GAAAA,EAAOh7B,KAAKo6B,cAAeG,EAAI,EAExCv6B,KAAAi7B,kBAAoB,CAAChC,EAAOsB,KAC7Bv6B,KAAKo6B,cAAgBnB,EACrBj5B,KAAKq6B,kBAAoBa,GAAeX,EAAMv6B,KAAKg6B,oBAE7C7tB,GAAAR,OAAO3L,KAAKs6B,aAAa,EAAI,EAElCt6B,KAAAm7B,gBAAkB,CAAClC,EAAOsB,KAC3Bv6B,KAAKo7B,MACL,MAAMC,MAAEA,EAAAC,aAAOA,EAAcC,gBAAAA,GAAoBv7B,KAAK+5B,SAGlD,GAFA/5B,KAAKk6B,kBACLqB,GAAmBA,KACjBv7B,KAAKo6B,gBAAiBp6B,KAAKq6B,kBAC7B,OACJ,MAAMmB,EAAUhB,GAA0B,kBAAfvB,EAAMtlC,KAC3BqM,KAAKq6B,kBACLa,GAAeX,EAAMv6B,KAAKg6B,oBAAqBh6B,KAAKy6B,SACtDz6B,KAAKm6B,YAAckB,GACnBA,EAAMpC,EAAOuC,GAEDF,GAAAA,EAAarC,EAAOuC,EAAO,GAG1CxC,GAAiBC,GAClB,OACJj5B,KAAKk6B,iBAAmBA,EACxBl6B,KAAK+5B,SAAWA,EAChB/5B,KAAKg6B,mBAAqBA,EAC1Bh6B,KAAKi6B,cAAgBA,GAAiBv6B,OAChC,MACA+7B,EAAcP,GADP7B,GAAiBJ,GACWj5B,KAAKg6B,qBACxCT,MAAEA,GAAUkC,GACZvxB,UAAEA,GAAcoB,GACtBtL,KAAKy6B,QAAU,CAAC,IAAKlB,EAAOrvB,cACtB,MAAAwxB,eAAEA,GAAmB3B,EAC3B2B,GACIA,EAAezC,EAAOuB,GAAWiB,EAAaz7B,KAAKy6B,UAClDz6B,KAAA27B,gBAAkB5W,GAAK6U,GAAgB55B,KAAKi6B,cAAe,cAAej6B,KAAKi7B,mBAAoBrB,GAAgB55B,KAAKi6B,cAAe,YAAaj6B,KAAKm7B,iBAAkBvB,GAAgB55B,KAAKi6B,cAAe,gBAAiBj6B,KAAKm7B,iBAClP,CACI,cAAAS,CAAe7B,GACX/5B,KAAK+5B,SAAWA,CACxB,CACI,GAAAqB,GACSp7B,KAAA27B,iBAAmB37B,KAAK27B,kBAC7BvvB,GAAYpM,KAAKs6B,YACzB,EAEA,SAASY,GAAeX,EAAMP,GAC1B,OAAOA,EAAqB,CAAET,MAAOS,EAAmBO,EAAKhB,QAAWgB,CAC5E,CACA,SAASsB,GAAc3oC,EAAGE,GACf,MAAA,CAAE4Z,EAAG9Z,EAAE8Z,EAAI5Z,EAAE4Z,EAAG4E,EAAG1e,EAAE0e,EAAIxe,EAAEwe,EACtC,CACA,SAAS4oB,IAAWjB,MAAEA,GAASkB,GACpB,MAAA,CACHlB,QACAtvB,MAAO4xB,GAActC,EAAOuC,GAAgBrB,IAC5CzS,OAAQ6T,GAActC,EAAOwC,GAAiBtB,IAC9ClzB,SAAUJ,GAAYszB,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACd,OAAAA,EAAQA,EAAQ1lC,OAAS,EACpC,CACA,SAASoS,GAAYszB,EAASuB,GACtB,GAAAvB,EAAQ1lC,OAAS,EACjB,MAAO,CAAEiY,EAAG,EAAG4E,EAAG,GAElB,IAAA5c,EAAIylC,EAAQ1lC,OAAS,EACrBknC,EAAmB,KACjB,MAAAC,EAAYJ,GAAgBrB,GAClC,KAAOzlC,GAAK,IACRinC,EAAmBxB,EAAQzlC,KACvBknC,EAAUhyB,UAAY+xB,EAAiB/xB,UACvCnC,GAAsBi0B,MAG1BhnC,IAEJ,IAAKinC,EACD,MAAO,CAAEjvB,EAAG,EAAG4E,EAAG,GAEtB,MAAMuL,EAAOlV,GAAsBi0B,EAAUhyB,UAAY+xB,EAAiB/xB,WAC1E,GAAa,IAATiT,EACA,MAAO,CAAEnQ,EAAG,EAAG4E,EAAG,GAEtB,MAAMmR,EAAkB,CACpB/V,GAAIkvB,EAAUlvB,EAAIivB,EAAiBjvB,GAAKmQ,EACxCvL,GAAIsqB,EAAUtqB,EAAIqqB,EAAiBrqB,GAAKuL,GAQrC,OANH4F,EAAgB/V,IAAMqU,MACtB0B,EAAgB/V,EAAI,GAEpB+V,EAAgBnR,IAAMyP,MACtB0B,EAAgBnR,EAAI,GAEjBmR,CACX,CCzJA,SAASoZ,GAAWzlC,GAChB,IAAI0lC,EAAO,KACX,MAAO,KACH,MAAMC,EAAW,KACND,EAAA,IAAA,EAEX,OAAa,OAATA,IACOA,EAAA1lC,EACA2lC,EAEJ,CAEf,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAcC,GACnB,IAAIL,GAAO,EACX,GAAa,MAATK,EACAL,EAAOG,UACf,GACsB,MAATE,EACLL,EAAOE,SAEN,CACD,MAAMI,EAAiBJ,KACjBK,EAAeJ,KACjBG,GAAkBC,EAClBP,EAAO,KACaM,IACFC,GAAA,GAKdD,GACgBA,IAChBC,GACcA,IAE9B,CACW,OAAAP,CACX,CACA,SAASQ,KAGC,MAAAC,EAAkBL,IAAc,GACtC,OAAKK,IAEYA,KACV,EACX,CClDA,SAASC,GAAYjqC,GACT,OAAAA,GACW,iBAARA,GACPR,OAAOC,UAAUC,eAAeiB,KAAKX,EAAK,UAClD,CCIA,SAASkqC,GAAWC,GACT,OAAAA,EAAK/wB,IAAM+wB,EAAK9wB,GAC3B,CAIA,SAAS+wB,GAAchzB,EAAOpU,EAAQqmB,EAAQD,EAAS,IACnDhS,EAAMgS,OAASA,EACfhS,EAAMizB,YAAcjY,GAAUpvB,EAAOqW,IAAKrW,EAAOoW,IAAKhC,EAAMgS,QAC5DhS,EAAMgG,MAAQ8sB,GAAW7gB,GAAU6gB,GAAWlnC,GACxCoU,EAAAkzB,UACFlY,GAAU/I,EAAOhQ,IAAKgQ,EAAOjQ,IAAKhC,EAAMgS,QAAUhS,EAAMizB,aACvDjzB,EAAMgG,OAjBG,OAiBmBhG,EAAMgG,OAhBzB,QAiBVsH,MAAMtN,EAAMgG,UACZhG,EAAMgG,MAAQ,IAEbhG,EAAMkzB,YAlBO,KAmBdlzB,EAAMkzB,WAlBQ,KAmBd5lB,MAAMtN,EAAMkzB,cACZlzB,EAAMkzB,UAAY,EAE1B,CACA,SAASC,GAAanzB,EAAOpU,EAAQqmB,EAAQD,GAC3BghB,GAAAhzB,EAAM+C,EAAGnX,EAAOmX,EAAGkP,EAAOlP,EAAGiP,EAASA,EAAO1B,aAAU,GACvD0iB,GAAAhzB,EAAM2H,EAAG/b,EAAO+b,EAAGsK,EAAOtK,EAAGqK,EAASA,EAAOzB,aAAU,EACzE,CACA,SAAS6iB,GAAiBnhB,EAAQohB,EAAU1I,GACjC1Y,EAAAhQ,IAAM0oB,EAAO1oB,IAAMoxB,EAASpxB,IACnCgQ,EAAOjQ,IAAMiQ,EAAOhQ,IAAM6wB,GAAWO,EACzC,CAKA,SAASC,GAAyBrhB,EAAQshB,EAAQ5I,GACvC1Y,EAAAhQ,IAAMsxB,EAAOtxB,IAAM0oB,EAAO1oB,IACjCgQ,EAAOjQ,IAAMiQ,EAAOhQ,IAAM6wB,GAAWS,EACzC,CACA,SAASC,GAAqBvhB,EAAQshB,EAAQ5I,GAC1C2I,GAAyBrhB,EAAOlP,EAAGwwB,EAAOxwB,EAAG4nB,EAAO5nB,GACpDuwB,GAAyBrhB,EAAOtK,EAAG4rB,EAAO5rB,EAAGgjB,EAAOhjB,EACxD,CCnBA,SAAS8rB,GAA4BV,EAAM9wB,EAAKD,GACrC,MAAA,CACHC,SAAa,IAARA,EAAoB8wB,EAAK9wB,IAAMA,OAAM,EAC1CD,SAAa,IAARA,EACC+wB,EAAK/wB,IAAMA,GAAO+wB,EAAK/wB,IAAM+wB,EAAK9wB,UAClC,EAEd,CAcA,SAASyxB,GAA4BC,EAAYC,GACzC,IAAA3xB,EAAM2xB,EAAgB3xB,IAAM0xB,EAAW1xB,IACvCD,EAAM4xB,EAAgB5xB,IAAM2xB,EAAW3xB,IAOpC,OAJH4xB,EAAgB5xB,IAAM4xB,EAAgB3xB,IACtC0xB,EAAW3xB,IAAM2xB,EAAW1xB,OAC3BA,EAAKD,GAAO,CAACA,EAAKC,IAEhB,CAAEA,MAAKD,MAClB,CAuCA,MAAM6xB,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GACxC,MAAA,CACHhyB,IAAKiyB,GAAoBH,EAAaC,GACtChyB,IAAKkyB,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,iBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC9HA,MAWMC,GAAY,KAAO,CACrBrxB,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,KCVzC,SAASqyB,GAASzzB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAAS0zB,IAAwBxsB,IAAEA,EAAAC,KAAKA,EAAME,MAAAA,EAAAD,OAAOA,IAC1C,MAAA,CACHjF,EAAG,CAAEd,IAAK8F,EAAM/F,IAAKiG,GACrBN,EAAG,CAAE1F,IAAK6F,EAAK9F,IAAKgG,GAE5B,CCVA,SAASusB,GAAgBvuB,GACdA,YAAU,IAAVA,GAAiC,IAAVA,CAClC,CACA,SAASwuB,IAAWxuB,MAAAA,EAAO0J,OAAAA,EAAAC,OAAQA,IACvB,OAAC4kB,GAAgBvuB,KACpBuuB,GAAgB7kB,KAChB6kB,GAAgB5kB,EACzB,CACA,SAAS8kB,GAAa3mC,GAClB,OAAQ0mC,GAAS1mC,IACb4mC,GAAe5mC,IACfA,EAAOoiB,GACPpiB,EAAOwhB,QACPxhB,EAAOyhB,SACPzhB,EAAO0hB,SACP1hB,EAAOgiB,OACPhiB,EAAOiiB,KACf,CACA,SAAS2kB,GAAe5mC,GACpB,OAAO6mC,GAAc7mC,EAAOiV,IAAM4xB,GAAc7mC,EAAO6Z,EAC3D,CACA,SAASgtB,GAAclpC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCjBA,SAASmpC,GAAWtF,EAAOtpB,EAAOitB,GAG9B,OAAOA,EADQjtB,GADYspB,EAAQ2D,EAGvC,CAIA,SAAS4B,GAAgBvF,EAAO4D,EAAWltB,EAAOitB,EAAa6B,GAI3D,YAHiB,IAAbA,IACQxF,EAAAsF,GAAWtF,EAAOwF,EAAU7B,IAEjC2B,GAAWtF,EAAOtpB,EAAOitB,GAAeC,CACnD,CAIA,SAAS6B,GAAehC,EAAMG,EAAY,EAAGltB,EAAQ,EAAGitB,EAAa6B,GACjE/B,EAAK9wB,IAAM4yB,GAAgB9B,EAAK9wB,IAAKixB,EAAWltB,EAAOitB,EAAa6B,GACpE/B,EAAK/wB,IAAM6yB,GAAgB9B,EAAK/wB,IAAKkxB,EAAWltB,EAAOitB,EAAa6B,EACxE,CAIA,SAASE,GAAcC,GAAKlyB,EAAEA,EAAA4E,EAAGA,IAC7BotB,GAAeE,EAAIlyB,EAAGA,EAAEmwB,UAAWnwB,EAAEiD,MAAOjD,EAAEkwB,aAC9C8B,GAAeE,EAAIttB,EAAGA,EAAEurB,UAAWvrB,EAAE3B,MAAO2B,EAAEsrB,YAClD,CACA,MAAMiC,GAAsB,cACtBC,GAAsB,gBA6D5B,SAASC,GAAcrC,EAAM/iB,GACpB+iB,EAAA9wB,IAAM8wB,EAAK9wB,IAAM+N,EACjB+iB,EAAA/wB,IAAM+wB,EAAK/wB,IAAMgO,CAC1B,CAMA,SAASqlB,GAActC,EAAMuC,EAAeC,EAAWT,EAAUU,EAAa,IAG1ET,GAAehC,EAAMuC,EAAeC,EAFhBva,GAAU+X,EAAK9wB,IAAK8wB,EAAK/wB,IAAKwzB,GAEUV,EAChE,CAIA,SAASW,GAAaR,EAAKnvB,GACTuvB,GAAAJ,EAAIlyB,EAAG+C,EAAU/C,EAAG+C,EAAU4J,OAAQ5J,EAAUE,MAAOF,EAAUwK,SACjE+kB,GAAAJ,EAAIttB,EAAG7B,EAAU6B,EAAG7B,EAAU6J,OAAQ7J,EAAUE,MAAOF,EAAUyK,QACnF,CCjHA,SAASmC,GAAmBrc,EAAU46B,GAClC,OAAOqD,GHeX,SAA4BhF,EAAO2B,GAC/B,IAAKA,EACM,OAAA3B,EACL,MAAAoG,EAAUzE,EAAe,CAAEluB,EAAGusB,EAAMvnB,KAAMJ,EAAG2nB,EAAMxnB,MACnD6tB,EAAc1E,EAAe,CAAEluB,EAAGusB,EAAMrnB,MAAON,EAAG2nB,EAAMtnB,SACvD,MAAA,CACHF,IAAK4tB,EAAQ/tB,EACbI,KAAM2tB,EAAQ3yB,EACdiF,OAAQ2tB,EAAYhuB,EACpBM,MAAO0tB,EAAY5yB,EAE3B,CG1BmC6yB,CAAmBv/B,EAASw/B,wBAAyB5E,GACxF,CCJA,MAAM6E,GAAmB,EAAGjsC,aACjBA,EAAUA,EAAQksC,cAAcC,YAAc,KCkBnDC,OAA0BC,QAKhC,MAAMC,GACF,WAAAtrC,CAAYoS,GAIRlH,KAAKqgC,eAAiB,KACtBrgC,KAAKsgC,YAAa,EAClBtgC,KAAKugC,iBAAmB,KACxBvgC,KAAKk9B,YAAc,CAAElwB,EAAG,EAAG4E,EAAG,GAI9B5R,KAAKwgC,aAAc,EACnBxgC,KAAKygC,uBAAwB,EAI7BzgC,KAAK0gC,QP/BY,CACrB1zB,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,IOiCjCjM,KAAKkH,cAAgBA,CAC7B,CACI,KAAAP,CAAMg6B,GAAaC,aAAEA,GAAe,GAAU,CAAA,GAIpC,MAAAhN,gBAAEA,GAAoB5zB,KAAKkH,cAC7B,GAAA0sB,IAAiD,IAA9BA,EAAgB8E,UACnC,OACE,MA6FAwB,iBAAEA,GAAqBl6B,KAAK0H,WAC7B1H,KAAA6gC,WAAa,IAAI/G,GAAW6G,EAAa,CAC1CjF,eA/FoBzC,IACpB,MAAQiB,iBAAAA,GAAqBl6B,KAAK0H,WAGlCwyB,EAAmBl6B,KAAK8gC,iBAAmB9gC,KAAK+gC,gBAC5CH,GACA5gC,KAAK4gC,aAAavH,GAAiBJ,EAAO,QAAQM,MAClE,EAyFYwB,QAvFY,CAAC9B,EAAOsB,KAEpB,MAAQkC,KAAAA,EAAAA,gBAAMuE,cAAiBC,GAAgBjhC,KAAK0H,WAChD+0B,GAAAA,IAASuE,IACLhhC,KAAKqgC,gBACLrgC,KAAKqgC,iBACJrgC,KAAAqgC,eAAiB7D,GAAcC,IAE/Bz8B,KAAKqgC,gBACN,OAERrgC,KAAKsgC,YAAa,EAClBtgC,KAAKugC,iBAAmB,KACxBvgC,KAAKkhC,qBACDlhC,KAAKkH,cAAci6B,aACdnhC,KAAAkH,cAAci6B,WAAWC,oBAAqB,EAC9CphC,KAAAkH,cAAci6B,WAAWjlB,YAAS,GAK3CoiB,IAAUtB,IACN,IAAIlpC,EAAUkM,KAAKqhC,mBAAmBrE,GAAMrnC,OAAS,EAIjD,GAAA2a,GAAQjC,KAAKva,GAAU,CACjB,MAAAqtC,WAAEA,GAAenhC,KAAKkH,cACxB,GAAAi6B,GAAcA,EAAW3D,OAAQ,CACjC,MAAM8D,EAAeH,EAAW3D,OAAO+D,UAAUvE,GACjD,GAAIsE,EAAc,CAEJxtC,EADKipC,GAAWuE,IACN3xB,WAAW7b,GAAW,IACtE,CACA,CACA,CACqBkM,KAAAk9B,YAAYF,GAAQlpC,CAAA,IAGzBmtC,GACA90B,GAAMN,YAAW,IAAMo1B,EAAYhI,EAAOsB,KAEzBhI,GAAAvyB,KAAKkH,cAAe,aACnC,MAAAgsB,eAAEA,GAAmBlzB,KAAKkH,cACdgsB,GAAAA,EAAekE,UAAU,aAAa,EAAI,EA4C5D4D,OA1CW,CAAC/B,EAAOsB,KAEnB,MAAMyG,gBAAEA,EAAiBQ,kBAAAA,EAAAC,gBAAmBA,SAAiBC,GAAY1hC,KAAK0H,WAE1E,IAACs5B,IAAoBhhC,KAAKqgC,eAC1B,OACE,MAAArY,OAAEA,GAAWuS,EAEf,GAAAiH,GAA+C,OAA1BxhC,KAAKugC,iBAM1B,OALKvgC,KAAAugC,iBAuWrB,SAA6BvY,EAAQ2Z,EAAgB,IACjD,IAAIjV,EAAY,KACZ5jB,KAAKuE,IAAI2a,EAAOpW,GAAK+vB,EACTjV,EAAA,IAEP5jB,KAAKuE,IAAI2a,EAAOhb,GAAK20B,IACdjV,EAAA,KAET,OAAAA,CACX,CAhXwCkV,CAAoB5Z,QAEd,OAA1BhoB,KAAKugC,kBACckB,GAAAA,EAAgBzhC,KAAKugC,mBAKhDvgC,KAAK6hC,WAAW,IAAKtH,EAAKhB,MAAOvR,GACjChoB,KAAK6hC,WAAW,IAAKtH,EAAKhB,MAAOvR,GAOjChoB,KAAKkH,cAAcjG,SAKTygC,GAAAA,EAAOzI,EAAOsB,EAAI,EAa5Be,aAXiB,CAACrC,EAAOsB,IAASv6B,KAAK8oB,KAAKmQ,EAAOsB,GAYnDgB,gBAXoB,IAAM+C,IAAUtB,IAChCn8B,IAAAA,EACJ,MAAwC,WAAjCb,KAAK8hC,kBAAkB9E,KAC0B,QAAlDn8B,EAAKb,KAAKqhC,mBAAmBrE,GAAMpQ,iBAA8B,IAAP/rB,OAAgB,EAASA,EAAGupB,OAAI,KASjG,CACC4P,mBAAoBh6B,KAAKkH,cAAc66B,wBACvC7H,mBACAD,cAAe8F,GAAiB//B,KAAKkH,gBAEjD,CACI,IAAA4hB,CAAKmQ,EAAOsB,GACR,MAAM+F,EAAatgC,KAAKsgC,WAExB,GADAtgC,KAAKmL,UACAm1B,EACD,OACE,MAAA/4B,SAAEA,GAAagzB,EACrBv6B,KAAKyxB,eAAelqB,GACpB,MAAMy6B,UAAEA,GAAchiC,KAAK0H,WACvBs6B,GACA71B,GAAMN,YAAW,IAAMm2B,EAAU/I,EAAOsB,IAEpD,CACI,MAAApvB,GACInL,KAAKsgC,YAAa,EAClB,MAAMa,WAAEA,EAAAjO,eAAYA,GAAmBlzB,KAAKkH,cACxCi6B,IACAA,EAAWC,oBAAqB,GAE/BphC,KAAA6gC,YAAc7gC,KAAK6gC,WAAWzF,MACnCp7B,KAAK6gC,gBAAa,EAClB,MAAMG,gBAAEA,GAAoBhhC,KAAK0H,YAC5Bs5B,GAAmBhhC,KAAKqgC,iBACzBrgC,KAAKqgC,iBACLrgC,KAAKqgC,eAAiB,MAERnN,GAAAA,EAAekE,UAAU,aAAa,EAChE,CACI,UAAAyK,CAAW7E,EAAMiF,EAAQja,GACrB,MAAQyU,KAAAA,GAASz8B,KAAK0H,WAEtB,IAAKsgB,IAAWka,GAAWlF,EAAMP,EAAMz8B,KAAKugC,kBACxC,OACE,MAAA4B,EAAYniC,KAAKqhC,mBAAmBrE,GAC1C,IAAIznC,EAAOyK,KAAKk9B,YAAYF,GAAQhV,EAAOgV,GAEvCh9B,KAAKwgC,aAAexgC,KAAKwgC,YAAYxD,KAC9BznC,ERxLnB,SAA0BgkC,GAAOrtB,IAAEA,EAAKD,IAAAA,GAAOy0B,GAapC,YAZK,IAARx0B,GAAqBqtB,EAAQrtB,EAErBqtB,EAAAmH,EACFzb,GAAU/Y,EAAKqtB,EAAOmH,EAAQx0B,KAC9BpD,KAAKmD,IAAIstB,EAAOrtB,QAET,IAARD,GAAqBstB,EAAQttB,IAE1BstB,EAAAmH,EACFzb,GAAUhZ,EAAKstB,EAAOmH,EAAQz0B,KAC9BnD,KAAKoD,IAAIqtB,EAAOttB,IAEnBstB,CACX,CQ0KmB6I,CAAiB7sC,EAAMyK,KAAKwgC,YAAYxD,GAAOh9B,KAAK0gC,QAAQ1D,KAEvEmF,EAAU37B,IAAIjR,EACtB,CACI,kBAAA2rC,GACQrgC,IAAAA,EACJ,MAAMwhC,gBAAEA,EAAArE,YAAiBA,GAAgBh+B,KAAK0H,WACxC81B,EAASx9B,KAAKkH,cAAci6B,aAC7BnhC,KAAKkH,cAAci6B,WAAW3D,OAC7Bx9B,KAAKkH,cAAci6B,WAAWmB,SAAQ,GACG,QAAxCzhC,EAAKb,KAAKkH,cAAci6B,kBAA+B,IAAPtgC,OAAgB,EAASA,EAAG28B,OAC7E+E,EAAkBviC,KAAKwgC,YACzB6B,GAAmBvF,GAAYuF,GAC1BriC,KAAKwgC,cACDxgC,KAAAwgC,YAAcxgC,KAAKwiC,yBAKxBxiC,KAAKwgC,eADL6B,IAAmB7E,IR1KnC,SAAiC+D,GAAWxvB,IAAEA,OAAKC,EAAMC,OAAAA,EAAAC,MAAQA,IACtD,MAAA,CACHlF,EAAG0wB,GAA4B6D,EAAUv0B,EAAGgF,EAAME,GAClDN,EAAG8rB,GAA4B6D,EAAU3vB,EAAGG,EAAKE,GAEzD,CQsKmCwwB,CAAwBjF,EAAO+D,UAAWc,GAMhEriC,KAAA0gC,QRnHb,SAA4B1C,EAAcF,IAO/B,OANa,IAAhBE,EACcA,EAAA,GAEO,IAAhBA,IACSA,EAAAF,IAEX,CACH9wB,EAAG+wB,GAAmBC,EAAa,OAAQ,SAC3CpsB,EAAGmsB,GAAmBC,EAAa,MAAO,UAElD,CQwGuB0E,CAAmB1E,GAK9BuE,IAAoBviC,KAAKwgC,aACzBhD,GACAx9B,KAAKwgC,cACJxgC,KAAKygC,uBACNnC,IAAUtB,KACmB,IAArBh9B,KAAKwgC,aACLxgC,KAAKqhC,mBAAmBrE,KACnBh9B,KAAAwgC,YAAYxD,GR7IrC,SAA+BQ,EAAQgD,GACnC,MAAMmC,EAAsB,CAAE,EAOvB,YANiB,IAApBnC,EAAYt0B,MACQy2B,EAAAz2B,IAAMs0B,EAAYt0B,IAAMsxB,EAAOtxB,UAE/B,IAApBs0B,EAAYv0B,MACQ02B,EAAA12B,IAAMu0B,EAAYv0B,IAAMuxB,EAAOtxB,KAEhDy2B,CACX,CQoI6CC,CAAsBpF,EAAO+D,UAAUvE,GAAOh9B,KAAKwgC,YAAYxD,IAC5G,GAGA,CACI,qBAAAwF,GACI,MAAQH,gBAAiB7B,EAAAqC,yBAAaA,GAA6B7iC,KAAK0H,WACxE,IAAK84B,IAAgB1D,GAAY0D,GACtB,OAAA,EACX,MAAMsC,EAAqBtC,EAAY1sC,SAEjCqtC,WAAEA,GAAenhC,KAAKkH,cAExB,IAACi6B,IAAeA,EAAW3D,OACpB,OAAA,EACL,MAAAuF,EFhPd,SAAwB/zB,EAASg0B,EAAoBhJ,GAC3C,MAAAiJ,EAActmB,GAAmB3N,EAASgrB,IAC1CkJ,OAAEA,GAAWF,EAKZ,OAJHE,IACA7D,GAAc4D,EAAYj2B,EAAGk2B,EAAOlb,OAAOhb,GAC3CqyB,GAAc4D,EAAYrxB,EAAGsxB,EAAOlb,OAAOpW,IAExCqxB,CACX,CEwO+BE,CAAeL,EAAoB3B,EAAWpf,KAAM/hB,KAAKkH,cAAc66B,yBAC9F,IAAIqB,ERtLZ,SAAiC7B,EAAWwB,GACjC,MAAA,CACH/1B,EAAG2wB,GAA4B4D,EAAUv0B,EAAG+1B,EAAe/1B,GAC3D4E,EAAG+rB,GAA4B4D,EAAU3vB,EAAGmxB,EAAenxB,GAEnE,CQiLkCyxB,CAAwBlC,EAAW3D,OAAO+D,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,ELlPpC,UAAiC71B,EAAEA,EAAG4E,EAAAA,IAClC,MAAO,CAAEG,IAAKH,EAAE1F,IAAKgG,MAAOlF,EAAEf,IAAKgG,OAAQL,EAAE3F,IAAK+F,KAAMhF,EAAEd,IAC9D,CKgP6Dq3B,CAAwBH,IACpEpjC,KAAAygC,wBAA0B6C,EAC3BA,IACAF,EAAsB7E,GAAwB+E,GAE9D,CACe,OAAAF,CACf,CACI,cAAA3R,CAAelqB,GACL,MAAEk1B,KAAAA,EAAAA,aAAM+G,EAAcxF,YAAAA,EAAAyF,eAAaA,mBAAgBvJ,EAAkBwJ,oBAAAA,GAAyB1jC,KAAK0H,WACnG84B,EAAcxgC,KAAKwgC,aAAe,CAAE,EACpCmD,EAAqBrF,IAAUtB,IACjC,IAAKkF,GAAWlF,EAAMP,EAAMz8B,KAAKugC,kBAC7B,OAEJ,IAAIt3B,EAAcu3B,GAAeA,EAAYxD,IAAU,CAAE,EACrD9C,IACAjxB,EAAa,CAAEiD,IAAK,EAAGD,IAAK,IAO1B,MAAAqX,EAAkB0a,EAAc,IAAM,IACtC3a,EAAgB2a,EAAc,GAAK,IACnC9a,EAAU,CACZvvB,KAAM,UACN4T,SAAUi8B,EAAej8B,EAASy1B,GAAQ,EAC1C1Z,kBACAD,gBACAD,aAAc,IACdxB,UAAW,EACXtZ,UAAW,MACRm7B,KACAx6B,GAKA,OAAAjJ,KAAK4jC,wBAAwB5G,EAAM9Z,EAAO,IAGrD,OAAO9D,QAAQiP,IAAIsV,GAAoB5kB,KAAK2kB,EACpD,CACI,uBAAAE,CAAwB5G,EAAM/zB,GACpB,MAAAk5B,EAAYniC,KAAKqhC,mBAAmBrE,GAEnC,OADczK,GAAAvyB,KAAKkH,cAAe81B,GAClCmF,EAAUx7B,MAAMmoB,GAAmBkO,EAAMmF,EAAW,EAAGl5B,EAAYjJ,KAAKkH,eAAe,GACtG,CACI,aAAA65B,GACIzC,IAAUtB,GAASh9B,KAAKqhC,mBAAmBrE,GAAMlU,QACzD,CACI,cAAAgY,GACIxC,IAAUtB,IAAen8B,IAAAA,EAAYA,OAAkD,QAAlDA,EAAKb,KAAKqhC,mBAAmBrE,GAAMpQ,iBAA8B,IAAP/rB,OAAgB,EAASA,EAAGwpB,OAAO,GAC1I,CACI,iBAAAyX,CAAkB9E,GACVn8B,IAAAA,EACIA,OAAkD,QAAlDA,EAAKb,KAAKqhC,mBAAmBrE,GAAMpQ,iBAA8B,IAAP/rB,OAAgB,EAASA,EAAG4D,KACtG,CAOI,kBAAA48B,CAAmBrE,GACf,MAAM6G,EAAU,QAAQ7G,EAAK8G,gBACvBlwC,EAAQoM,KAAKkH,cAAcQ,WAC3Bq8B,EAAsBnwC,EAAMiwC,GAClC,OAAOE,GAED/jC,KAAKkH,cAAckM,SAAS4pB,GAAOppC,EAAMihC,QACrCjhC,EAAMihC,QAAQmI,QACd,IAAc,EAChC,CACI,YAAA4D,CAAarH,GACT+E,IAAUtB,IACN,MAAQP,KAAAA,GAASz8B,KAAK0H,WAEtB,IAAKw6B,GAAWlF,EAAMP,EAAMz8B,KAAKugC,kBAC7B,OACE,MAAAY,WAAEA,GAAenhC,KAAKkH,cACtBi7B,EAAYniC,KAAKqhC,mBAAmBrE,GACtC,GAAAmE,GAAcA,EAAW3D,OAAQ,CACjC,MAAMtxB,IAAEA,EAAKD,IAAAA,GAAQk1B,EAAW3D,OAAO+D,UAAUvE,GACvCmF,EAAA37B,IAAI+yB,EAAMyD,GAAQ/X,GAAU/Y,EAAKD,EAAK,IAChE,IAEA,CAMI,8BAAA+3B,GACQ,IAAChkC,KAAKkH,cAAcpT,QACpB,OACJ,MAAQ2oC,KAAAA,EAAAA,gBAAM4F,GAAoBriC,KAAK0H,YACjCy5B,WAAEA,GAAenhC,KAAKkH,cAC5B,IAAK41B,GAAYuF,KAAqBlB,IAAenhC,KAAKwgC,YACtD,OAKJxgC,KAAK+gC,gBAKL,MAAMkD,EAAc,CAAEj3B,EAAG,EAAG4E,EAAG,GAC/B0sB,IAAUtB,IACA,MAAAmF,EAAYniC,KAAKqhC,mBAAmBrE,GACtC,GAAAmF,IAAkC,IAArBniC,KAAKwgC,YAAuB,CACnC,MAAA1c,EAASqe,EAAUxsC,MACzBsuC,EAAYjH,GRtS5B,SAAoBnnC,EAAQqmB,GACxB,IAAID,EAAS,GACP,MAAAioB,EAAenH,GAAWlnC,GAC1BsuC,EAAepH,GAAW7gB,GAOzB,OANHioB,EAAeD,EACfjoB,EAASoD,GAASnD,EAAOhQ,IAAKgQ,EAAOjQ,IAAMi4B,EAAcruC,EAAOqW,KAE3Dg4B,EAAeC,IACpBloB,EAASoD,GAASxpB,EAAOqW,IAAKrW,EAAOoW,IAAMk4B,EAAcjoB,EAAOhQ,MAE7D0D,GAAM,EAAG,EAAGqM,EACvB,CQ2RoCmoB,CAAW,CAAEl4B,IAAK4X,EAAQ7X,IAAK6X,GAAU9jB,KAAKwgC,YAAYxD,GAC9F,KAKQ,MAAMqH,kBAAEA,GAAsBrkC,KAAKkH,cAAcQ,WAC5C1H,KAAAkH,cAAcpT,QAAQyL,MAAMwQ,UAAYs0B,EACvCA,EAAkB,CAAE,EAAE,IACtB,OACKlD,EAAApf,MAAQof,EAAWpf,KAAKuiB,eACnCnD,EAAWoD,eACXvkC,KAAKkhC,qBAKL5C,IAAUtB,IACN,IAAKkF,GAAWlF,EAAMP,EAAM,MACxB,OAIE,MAAA0F,EAAYniC,KAAKqhC,mBAAmBrE,IACpC9wB,IAAEA,EAAKD,IAAAA,GAAQjM,KAAKwgC,YAAYxD,GACtCmF,EAAU37B,IAAIye,GAAU/Y,EAAKD,EAAKg4B,EAAYjH,IAAM,GAEhE,CACI,YAAAwH,GACQ,IAACxkC,KAAKkH,cAAcpT,QACpB,OACgBosC,GAAA15B,IAAIxG,KAAKkH,cAAelH,MACtC,MAIAykC,EAAsB7K,GAJZ55B,KAAKkH,cAAcpT,QAIkB,eAAgBmlC,IACjE,MAAQwD,KAAAA,EAAAA,aAAMiI,GAAe,GAAS1kC,KAAK0H,WAC3C+0B,GAAQiI,GAAgB1kC,KAAK2G,MAAMsyB,EAAK,IAEtC0L,EAAyB,KAC3B,MAAMtC,gBAAEA,GAAoBriC,KAAK0H,WAC7Bo1B,GAAYuF,IAAoBA,EAAgBvuC,UAC3CkM,KAAAwgC,YAAcxgC,KAAKwiC,wBACxC,GAEcrB,WAAEA,GAAenhC,KAAKkH,cACtB09B,EAA4BzD,EAAWzH,iBAAiB,UAAWiL,GACrExD,IAAeA,EAAW3D,SACf2D,EAAApf,MAAQof,EAAWpf,KAAKuiB,eACnCnD,EAAWoD,gBAEfp4B,GAAMV,KAAKk5B,GAKX,MAAME,EAAqBrL,GAAY95B,OAAQ,UAAU,IAAMM,KAAKgkC,mCAK9Dc,EAA2B3D,EAAWzH,iBAAiB,aAAc,EAAGzvB,QAAO86B,uBAC7E/kC,KAAKsgC,YAAcyE,IACnBzG,IAAUtB,IACA/oB,MAAAA,EAAcjU,KAAKqhC,mBAAmBrE,GACvC/oB,IAELjU,KAAKk9B,YAAYF,IAAS/yB,EAAM+yB,GAAMG,UACtClpB,EAAYzN,IAAIyN,EAAYte,MAAQsU,EAAM+yB,GAAMG,WAAS,IAE7Dn9B,KAAKkH,cAAcjG,SACnC,IAEQ,MAAO,KACiB4jC,IACCJ,IACMG,IAC3BE,GAA4BA,GAA0B,CAElE,CACI,QAAAp9B,GACU,MAAA9T,EAAQoM,KAAKkH,cAAcQ,YACzB+0B,KAAAA,GAAO,EAAA+E,kBAAOA,GAAoB,EAAOR,gBAAAA,GAAkB,EAAOqB,gBAAAA,GAAkB,EAAOrE,YAAAA,EAAcF,GAAgB0F,aAAAA,GAAe,GAAU5vC,EACnJ,MAAA,IACAA,EACH6oC,KAAAA,EACA+E,oBACAR,kBACAqB,kBACArE,cACAwF,eAEZ,EAEA,SAAStB,GAAWxV,EAAW+P,EAAM8D,GACjC,SAAkB,IAAT9D,GAAiBA,IAAS/P,GACT,OAArB6T,GAA6BA,IAAqB7T,EAC3D,CC5cA,MAAMsY,GAAgBpV,GAAY,CAACqJ,EAAOsB,KAClC3K,GACAzjB,GAAMN,YAAW,IAAM+jB,EAAQqJ,EAAOsB,IAC9C,ECJA,MAAM0K,GAAkBtkC,EAAaA,cAAC,MCHtC,MAAMukC,GAAqBvkC,EAAaA,cAAC,ICGnCwkC,GAA2BxkC,EAAaA,cAAC,ICDzCykC,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQxI,GACzB,OAAAA,EAAK/wB,MAAQ+wB,EAAK9wB,IACX,EACHs5B,GAAUxI,EAAK/wB,IAAM+wB,EAAK9wB,KAAQ,GAC9C,CAQA,MAAMu5B,GAAsB,CACxBC,QAAS,CAAC5hB,EAAQkU,KACd,IAAKA,EAAK9b,OACC,OAAA4H,EAKP,GAAkB,iBAAXA,EAAqB,CACxB,IAAAvT,GAAGlC,KAAKyV,GAID,OAAAA,EAHPA,EAASnU,WAAWmU,EAKpC,CAOe,MAAA,GAFGyhB,GAAgBzhB,EAAQkU,EAAK9b,OAAOlP,OACpCu4B,GAAgBzhB,EAAQkU,EAAK9b,OAAOtK,KAC7B,GCjCnB+zB,GAAmB,CACrBD,QAAS,CAAC5hB,GAAU8hB,YAAWC,sBAC3B,MAAMC,EAAWhiB,EACXiiB,EAASzuB,GAAQxH,MAAMgU,GAE7B,GAAIiiB,EAAOhxC,OAAS,EACT,OAAA+wC,EACL,MAAAvf,EAAWjP,GAAQJ,kBAAkB4M,GACrCkE,EAA8B,iBAAd+d,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgB74B,EAAEiD,MAAQ21B,EAAU54B,EAC7Ci5B,EAASJ,EAAgBj0B,EAAE3B,MAAQ21B,EAAUh0B,EAC5Cm0B,EAAA,EAAI/d,IAAWge,EACfD,EAAA,EAAI/d,IAAWie,EAOtB,MAAMC,EAAejhB,GAAU+gB,EAAQC,EAAQ,IAO/C,MALkC,iBAAvBF,EAAO,EAAI/d,KACX+d,EAAA,EAAI/d,IAAWke,GAEQ,iBAAvBH,EAAO,EAAI/d,KACX+d,EAAA,EAAI/d,IAAWke,GACnB3f,EAASwf,EAAM,GC9BxBI,GAAkB,CAAE,ECE1B,MAAQp7B,SAAUq7B,GAAWj7B,OAAQk7B,IAAoBz8B,GAAoByT,gBAAgB,GCW7F,MAAMipB,WAAiCxlC,EAAAA,UAMnC,iBAAAylC,GACI,MAAMr/B,cAAEA,EAAes/B,YAAAA,EAAAC,kBAAaA,EAAmBC,SAAAA,GAAa1mC,KAAKpM,OACnEutC,WAAEA,GAAej6B,EFpB/B,IAA2By/B,IEqBDC,GFpBfv0C,OAAAw3B,OAAOsc,GAAiBQ,GEqBvBxF,IACIqF,EAAYK,OACAL,EAAAK,MAAMxmC,IAAI8gC,GACtBsF,GAAqBA,EAAkB1N,UAAY2N,GACnDD,EAAkB1N,SAASoI,GAE/BA,EAAWpf,KAAK+kB,YACL3F,EAAAzH,iBAAiB,qBAAqB,KAC7C15B,KAAK+mC,cAAc,IAEvB5F,EAAW6F,WAAW,IACf7F,EAAWxjB,QACdgb,eAAgB,IAAM34B,KAAK+mC,kBAGnC3B,GAAsBE,gBAAiB,CAC/C,CACI,uBAAA2B,CAAwBzO,GACpB,MAAM0O,iBAAEA,EAAkBhgC,cAAAA,EAAeu1B,KAAAA,EAAM/D,UAAAA,GAAc14B,KAAKpM,MAC5DutC,EAAaj6B,EAAci6B,WACjC,OAAKA,GASLA,EAAWzI,UAAYA,EACnB+D,GACAjE,EAAU0O,mBAAqBA,QACV,IAArBA,EACA/F,EAAWgG,aAGXnnC,KAAK+mC,eAELvO,EAAUE,YAAcA,IACpBA,EACAyI,EAAWiG,UAELjG,EAAWkG,YAMjBl7B,GAAMN,YAAW,KACP,MAAAy7B,EAAQnG,EAAWoG,WACpBD,GAAUA,EAAME,QAAQzyC,QACzBiL,KAAK+mC,cAC7B,KAIe,MAnCI,IAoCnB,CACI,kBAAAziC,GACI,MAAM68B,WAAEA,GAAenhC,KAAKpM,MAAMsT,cAC9Bi6B,IACAA,EAAWpf,KAAK+kB,YAChBV,GAAUv6B,YAAW,MACZs1B,EAAWsG,kBAAoBtG,EAAWuG,UAC3C1nC,KAAK+mC,cACzB,IAGA,CACI,oBAAAviC,GACI,MAAM0C,cAAEA,EAAes/B,YAAAA,EAAaC,kBAAmBkB,GAAoB3nC,KAAKpM,OAC1EutC,WAAEA,GAAej6B,EACnBi6B,IACAA,EAAWyG,4BACPpB,GAAeA,EAAYK,OACfL,EAAAK,MAAMtmC,OAAO4gC,GACzBwG,GAAkBA,EAAeE,YACjCF,EAAeE,WAAW1G,GAE1C,CACI,YAAA4F,GACU,MAAAA,aAAEA,GAAiB/mC,KAAKpM,MAC9BmzC,GAAgBA,GACxB,CACI,MAAA9lC,GACW,OAAA,IACf,EAEA,SAAS6mC,GAAcl0C,GACnB,MAAO8kC,EAAWqO,GCtFtB,WACU,MAAAlnC,EAAUkoC,EAAUA,WAAC9C,IAC3B,GAAgB,OAAZplC,EACO,MAAA,EAAC,EAAM,MAClB,MAAM64B,UAAEA,EAAAC,eAAWA,EAAgBI,SAAAA,GAAal5B,EAG1Cq4B,EAAK8P,EAAAA,QACXC,EAAAA,WAAU,IAAMlP,EAASb,IAAK,IACxB,MAAA6O,EAAemB,eAAY,IAAMvP,GAAkBA,EAAeT,IAAK,CAACA,EAAIS,IAC3E,OAACD,GAAaC,EAAiB,EAAC,EAAOoO,GAAgB,EAAC,EACnE,CD2EsCoB,GAC5B3B,EAAcuB,EAAUA,WAAC7C,IAC/B,OAAQlxC,EAAAA,IAAIsyC,GAA0B,IAAK1yC,EAAO4yC,cAA0BC,kBAAmBsB,EAAAA,WAAW5C,IAA2BzM,YAAsBqO,gBAC/J,CACA,MAAMH,GAAyB,CAC3BtuB,aAAc,IACPmtB,GACH2C,QAAS,CACL,sBACA,uBACA,yBACA,4BAGR5vB,oBAAqBitB,GACrBhtB,qBAAsBgtB,GACtB9sB,uBAAwB8sB,GACxB/sB,wBAAyB+sB,GACzB4C,UAAW1C,IE5HT2C,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQvzC,OACrByzC,GAAY9yC,GAA2B,iBAAVA,EAAqBia,WAAWja,GAASA,EACtE+yC,GAAQ/yC,GAA2B,iBAAVA,GAAsB6a,GAAGlC,KAAK3Y,GA0C7D,SAASgzC,GAAU3wC,EAAQ4wC,GACvB,YAA8B,IAAvB5wC,EAAO4wC,GACR5wC,EAAO4wC,GACP5wC,EAAOugB,YACjB,CAwBA,MAAMswB,GAAgCC,GAAS,EAAG,GAAK36B,IACjD46B,GAAiCD,GAAS,GAAK,IAAMp/B,IAC3D,SAASo/B,GAAS38B,EAAKD,EAAKuB,GACxB,OAAQ7a,GAEAA,EAAIuZ,EACG,EACPvZ,EAAIsZ,EACG,EACJuB,EAAO6R,GAASnT,EAAKD,EAAKtZ,GAEzC,CCrFA,SAASo2C,GAAa/L,EAAMgM,GACxBhM,EAAK9wB,IAAM88B,EAAW98B,IACtB8wB,EAAK/wB,IAAM+8B,EAAW/8B,GAC1B,CAMA,SAASg9B,GAAY/J,EAAKgK,GACTH,GAAA7J,EAAIlyB,EAAGk8B,EAAUl8B,GACjB+7B,GAAA7J,EAAIttB,EAAGs3B,EAAUt3B,EAClC,CAMA,SAASu3B,GAAkBl/B,EAAOm/B,GAC9Bn/B,EAAMkzB,UAAYiM,EAAYjM,UAC9BlzB,EAAMgG,MAAQm5B,EAAYn5B,MAC1BhG,EAAMizB,YAAckM,EAAYlM,YAChCjzB,EAAMgS,OAASmtB,EAAYntB,MAC/B,CCrBA,SAASotB,GAAiB9P,EAAO4D,EAAWltB,EAAOitB,EAAa6B,GAMrD,OAJPxF,EAAQsF,GADCtF,GAAA4D,EACiB,EAAIltB,EAAOitB,QACpB,IAAb6B,IACAxF,EAAQsF,GAAWtF,EAAO,EAAIwF,EAAU7B,IAErC3D,CACX,CAsBA,SAAS+P,GAAqBtM,EAAMuM,GAAa32C,EAAK42C,EAAUC,GAAYxtB,EAAQytB,IAlBpF,SAAyB1M,EAAMG,EAAY,EAAGltB,EAAQ,EAAGgM,EAAS,GAAK8iB,EAAUiK,EAAahM,EAAM0M,EAAa1M,GACzG1sB,GAAQjC,KAAK8uB,KACbA,EAAYxtB,WAAWwtB,GAEvBA,EADyBlY,GAAUykB,EAAWx9B,IAAKw9B,EAAWz9B,IAAKkxB,EAAY,KAChDuM,EAAWx9B,KAE9C,GAAyB,iBAAdixB,EACP,OACJ,IAAID,EAAcjY,GAAU+jB,EAAW98B,IAAK88B,EAAW/8B,IAAKgQ,GACxD+gB,IAASgM,IACM9L,GAAAC,GACnBH,EAAK9wB,IAAMm9B,GAAiBrM,EAAK9wB,IAAKixB,EAAWltB,EAAOitB,EAAa6B,GACrE/B,EAAK/wB,IAAMo9B,GAAiBrM,EAAK/wB,IAAKkxB,EAAWltB,EAAOitB,EAAa6B,EACzE,CAMI4K,CAAgB3M,EAAMuM,EAAW32C,GAAM22C,EAAWC,GAAWD,EAAWE,GAAYF,EAAWt5B,MAAOgM,EAAQytB,EAClH,CAIA,MAAME,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,GAAoB5K,EAAKqK,EAAYL,EAAWa,GAChCT,GAAApK,EAAIlyB,EAAGu8B,EAAYK,GAAOV,EAAYA,EAAUl8B,OAAI,EAAW+8B,EAAYA,EAAU/8B,OAAI,GACzFs8B,GAAApK,EAAIttB,EAAG23B,EAAYM,GAAOX,EAAYA,EAAUt3B,OAAI,EAAWm4B,EAAYA,EAAUn4B,OAAI,EAClH,CCjDA,SAASo4B,GAAgB//B,GACrB,OAA2B,IAApBA,EAAMkzB,WAAmC,IAAhBlzB,EAAMgG,KAC1C,CACA,SAASg6B,GAAYhgC,GACjB,OAAO+/B,GAAgB//B,EAAM+C,IAAMg9B,GAAgB//B,EAAM2H,EAC7D,CACA,SAASs4B,GAAWh3C,EAAGE,GACnB,OAAOF,EAAEgZ,MAAQ9Y,EAAE8Y,KAAOhZ,EAAE+Y,MAAQ7Y,EAAE6Y,GAC1C,CAIA,SAASk+B,GAAkBj3C,EAAGE,GAC1B,OAAQ0V,KAAK8L,MAAM1hB,EAAEgZ,OAASpD,KAAK8L,MAAMxhB,EAAE8Y,MACvCpD,KAAK8L,MAAM1hB,EAAE+Y,OAASnD,KAAK8L,MAAMxhB,EAAE6Y,IAC3C,CACA,SAASm+B,GAAiBl3C,EAAGE,GAClB,OAAA+2C,GAAkBj3C,EAAE8Z,EAAG5Z,EAAE4Z,IAAMm9B,GAAkBj3C,EAAE0e,EAAGxe,EAAEwe,EACnE,CACA,SAASy4B,GAAYnL,GACjB,OAAOnC,GAAWmC,EAAIlyB,GAAK+vB,GAAWmC,EAAIttB,EAC9C,CACA,SAAS04B,GAAgBp3C,EAAGE,GAChB,OAAAF,EAAEiqC,YAAc/pC,EAAE+pC,WACtBjqC,EAAE+c,QAAU7c,EAAE6c,OACd/c,EAAEgqC,cAAgB9pC,EAAE8pC,WAC5B,CC1BA,MAAMqN,GACF,WAAAz1C,GACIkL,KAAKwnC,QAAU,EACvB,CACI,GAAAnnC,CAAI23B,GACcxI,GAAAxvB,KAAKwnC,QAASxP,GAC5BA,EAAKwS,gBACb,CACI,MAAAjqC,CAAOy3B,GAKC,GAJOtI,GAAA1vB,KAAKwnC,QAASxP,GACrBA,IAASh4B,KAAKyqC,WACdzqC,KAAKyqC,cAAW,GAEhBzS,IAASh4B,KAAK0qC,KAAM,CACpB,MAAMD,EAAWzqC,KAAKwnC,QAAQxnC,KAAKwnC,QAAQzyC,OAAS,GAChD01C,GACAzqC,KAAKonC,QAAQqD,EAE7B,CACA,CACI,QAAApD,CAASrP,GACL,MAAM2S,EAAc3qC,KAAKwnC,QAAQoD,WAAWC,GAAW7S,IAAS6S,IAChE,GAAoB,IAAhBF,EACO,OAAA,EAIP,IAAAF,EACJ,IAAA,IAASz1C,EAAI21C,EAAa31C,GAAK,EAAGA,IAAK,CAC7B,MAAA61C,EAAS7qC,KAAKwnC,QAAQxyC,GACxB,IAAqB,IAArB61C,EAAOnS,UAAqB,CACjB+R,EAAAI,EACX,KAChB,CACA,CACQ,QAAIJ,IACAzqC,KAAKonC,QAAQqD,IACN,EAKnB,CACI,OAAArD,CAAQpP,EAAM8S,GACV,MAAML,EAAWzqC,KAAK0qC,KACtB,GAAI1S,IAASyS,IAEbzqC,KAAKyqC,SAAWA,EAChBzqC,KAAK0qC,KAAO1S,EACZA,EAAK+S,OACDN,GAAU,CACDA,EAAAnqC,UAAYmqC,EAASD,iBAC9BxS,EAAKwS,iBACLxS,EAAKgT,WAAaP,EACdK,IACA9S,EAAKgT,WAAWC,iBAAkB,GAElCR,EAASS,WACTlT,EAAKkT,SAAWT,EAASS,SACzBlT,EAAKkT,SAAS9X,aACVqX,EAASU,iBAAmBV,EAASrX,cAEzC4E,EAAKjW,MAAQiW,EAAKjW,KAAKqpB,aACvBpT,EAAKqT,eAAgB,GAEnB,MAAAC,UAAEA,GAActT,EAAKra,SACT,IAAd2tB,GACAb,EAASc,MAczB,CACA,CACI,qBAAAC,GACSxrC,KAAAwnC,QAAQ3sC,SAASm9B,IACZ,MAAAra,QAAEA,EAAS8tB,aAAAA,GAAiBzT,EAC1Bra,EAAAgb,gBAAkBhb,EAAQgb,iBAC9B8S,GACAA,EAAa9tB,QAAQgb,gBACjB8S,EAAa9tB,QAAQgb,gBACzC,GAEA,CACI,cAAA6R,GACSxqC,KAAAwnC,QAAQ3sC,SAASm9B,IACbA,EAAA13B,UAAY03B,EAAKwS,gBAAe,EAAK,GAEtD,CAKI,kBAAAkB,GACQ1rC,KAAK0qC,MAAQ1qC,KAAK0qC,KAAKQ,WACvBlrC,KAAK0qC,KAAKQ,cAAW,EAEjC,EC5GA,MAAMS,GAAiB,CAACz4C,EAAGE,IAAMF,EAAE+b,MAAQ7b,EAAE6b,MCG7C,MAAM28B,GACF,WAAA92C,GACIkL,KAAKmB,SAAW,GAChBnB,KAAK6rC,SAAU,CACvB,CACI,GAAAxrC,CAAI4E,GACcuqB,GAAAxvB,KAAKmB,SAAU8D,GAC7BjF,KAAK6rC,SAAU,CACvB,CACI,MAAAtrC,CAAO0E,GACQyqB,GAAA1vB,KAAKmB,SAAU8D,GAC1BjF,KAAK6rC,SAAU,CACvB,CACI,OAAAhxC,CAAQgQ,GACJ7K,KAAK6rC,SAAW7rC,KAAKmB,SAASgzB,KAAKwX,IACnC3rC,KAAK6rC,SAAU,EACV7rC,KAAAmB,SAAStG,QAAQgQ,EAC9B,ECZA,SAASihC,GAAmBp2C,GACxB,MAAMq2C,EAAiBzZ,GAAc58B,GAASA,EAAMC,MAAQD,EAC5D,O7CRmBgR,E6CQEqlC,E7CPd92B,QAAQvO,GAAkB,iBAANA,GAAkBA,EAAEsgB,KAAOtgB,EAAEslC,S6CQlDD,EAAeC,UACfD,E7CVY,IAACrlC,C6CWvB,CCeA,MAAMulC,GAAU,CACZt4C,KAAM,kBACNu4C,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAEtBC,GAA4B,oBAAX3sC,aAAiD,IAAvBA,OAAO4sC,YAClDC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAIvU,GAAK,EACT,SAASwU,GAAyB95C,EAAKsU,EAAenP,EAAQ40C,GACpD,MAAAvZ,aAAEA,GAAiBlsB,EAErBksB,EAAaxgC,KACNmF,EAAAnF,GAAOwgC,EAAaxgC,GACbsU,EAAA0lC,eAAeh6C,EAAK,GAC9B+5C,IACAA,EAAsB/5C,GAAO,GAGzC,CACA,SAASi6C,GAAuCC,GAE5C,GADAA,EAAeC,2BAA4B,EACvCD,EAAe/qB,OAAS+qB,EACxB,OACE,MAAA5lC,cAAEA,GAAkB4lC,EAAenvB,QACzC,IAAKzW,EACD,OACE,MAAAqsB,EAAWlB,GAAqBnrB,GACtC,GAAIxH,OAAOstC,4BAA4BzZ,EAAU,aAAc,CAC3D,MAAQiK,OAAAA,EAAQkJ,SAAAA,GAAaoG,EAAenvB,QAC5Cje,OAAOutC,+BAA+B1Z,EAAU,YAAapnB,KAASqxB,GAAUkJ,GACxF,CACU,MAAA9R,OAAEA,GAAWkY,EACflY,IAAWA,EAAOmY,2BAClBF,GAAuCjY,EAE/C,CACA,SAASsY,IAAqBC,qBAAEA,EAAAC,cAAsBA,gBAAeC,EAAeC,kBAAAA,EAAAC,eAAmBA,IACnG,OAAO,MACH,WAAAz4C,CAAYs+B,EAAe,GAAIwB,GAASwY,aAAqD,EAASA,MAIlGptC,KAAKk4B,GAAKA,KAIVl4B,KAAKwtC,YAAc,EAOdxtC,KAAAmB,aAAe1M,IAKpBuL,KAAK2d,QAAU,CAAE,EAMjB3d,KAAKytC,iBAAkB,EACvBztC,KAAKohC,oBAAqB,EAO1BphC,KAAKqrC,eAAgB,EAKrBrrC,KAAK0tC,mBAAoB,EAKzB1tC,KAAK2tC,yBAA0B,EAK/B3tC,KAAK4tC,kBAAmB,EAIxB5tC,KAAK6tC,uBAAwB,EAC7B7tC,KAAK8tC,uBAAwB,EAK7B9tC,KAAKorC,YAAa,EAIlBprC,KAAK+tC,OAAQ,EAKb/tC,KAAKguC,YAAa,EAIlBhuC,KAAKiuC,sBAAuB,EAO5BjuC,KAAK+sC,2BAA4B,EASjC/sC,KAAK4lC,UAAY,CAAE54B,EAAG,EAAG4E,EAAG,GAIvB5R,KAAAkuC,kBAAoB35C,IACzByL,KAAKmuC,iBAAkB,EAEvBnuC,KAAKouC,iBAAkB,EAClBpuC,KAAAquC,eAAiB,IAAMruC,KAAK2L,SACjC3L,KAAKsuC,2BAA4B,EACjCtuC,KAAKuuC,kBAAoB,KACjBvuC,KAAKorC,aACLprC,KAAKorC,YAAa,EAClBprC,KAAKwuC,oBACzB,EAOYxuC,KAAKyuC,iBAAmB,KACpBzuC,KAAKsuC,2BAA4B,EAK7BjC,KACAJ,GAAQC,WACJD,GAAQE,qBACJF,GAAQG,uBACJ,GAEXpsC,KAAA0uC,MAAM7zC,QAAQ8zC,IACd3uC,KAAA0uC,MAAM7zC,QAAQ+zC,IACd5uC,KAAA0uC,MAAM7zC,QAAQg0C,IACd7uC,KAAA0uC,MAAM7zC,QAAQi0C,IACfzC,IACO3sC,OAAA4sC,YAAYyC,OAAO9C,GAC9C,EAKYjsC,KAAKgvC,yBAA2B,EAChChvC,KAAKivC,cAAe,EACpBjvC,KAAKkvC,WAAY,EACjBlvC,KAAKmvC,kBAAoB,EAKpBnvC,KAAAovC,gBAAkB76C,IACvByL,KAAKozB,aAAeA,EACpBpzB,KAAK+hB,KAAO6S,EAASA,EAAO7S,MAAQ6S,EAAS50B,KACxCA,KAAAqvC,KAAOza,EAAS,IAAIA,EAAOya,KAAMza,GAAU,GAChD50B,KAAK40B,OAASA,EACd50B,KAAKiP,MAAQ2lB,EAASA,EAAO3lB,MAAQ,EAAI,EACzC,IAAA,IAASja,EAAI,EAAGA,EAAIgL,KAAKqvC,KAAKt6C,OAAQC,IAC7BgL,KAAAqvC,KAAKr6C,GAAGi5C,sBAAuB,EAEpCjuC,KAAK+hB,OAAS/hB,OACTA,KAAA0uC,MAAQ,IAAI9C,GACjC,CACQ,gBAAAlS,CAAiBhjC,EAAMk5B,GAInB,OAHK5vB,KAAKkuC,cAAcz4C,IAAIiB,IACxBsJ,KAAKkuC,cAAc1nC,IAAI9P,EAAM,IAAIi5B,IAE9B3vB,KAAKkuC,cAAcv4C,IAAIe,GAAM2J,IAAIuvB,EACpD,CACQ,eAAA0f,CAAgB54C,KAASH,GACrB,MAAMg5C,EAAsBvvC,KAAKkuC,cAAcv4C,IAAIe,GAC5B64C,GAAAA,EAAoB1f,UAAUt5B,EACjE,CACQ,YAAAi5C,CAAa94C,GACF,OAAAsJ,KAAKkuC,cAAcz4C,IAAIiB,EAC1C,CAIQ,KAAA4hC,CAAMh4B,EAAU+qC,EAAgBrrC,KAAK+hB,KAAKosB,iBACtC,GAAInuC,KAAKM,SACL,OCnPhB,IAAsB0O,EDoPLhP,KAAA+tC,OCpPK/+B,EDoPgB1O,aCnPRmvC,YAAkC,QAApBzgC,EAAQ7U,QDoPxC6F,KAAKM,SAAWA,EAChB,MAAMomC,SAAEA,EAAUlJ,OAAAA,EAAQt2B,cAAAA,GAAkBlH,KAAK2d,QASjD,GARIzW,IAAkBA,EAAcpT,SAChCoT,EAAcoxB,MAAMh4B,GAEnBN,KAAA+hB,KAAK2sB,MAAMruC,IAAIL,MACpBA,KAAK40B,QAAU50B,KAAK40B,OAAOzzB,SAASd,IAAIL,MACpCqrC,IAAkB7N,GAAUkJ,KAC5B1mC,KAAKqrC,eAAgB,GAErB8B,EAAsB,CAClB,IAAAuC,EACJ,MAAMC,EAAsB,IAAO3vC,KAAK+hB,KAAK+rB,uBAAwB,EACrEX,EAAqB7sC,GAAU,KAC3BN,KAAK+hB,KAAK+rB,uBAAwB,EAClC4B,GAAeA,IACDA,EE9PlC,SAAe7kC,EAAU+kC,GACf,MAAAjpC,EAAQwW,GAAKnR,MACb6jC,EAAe,EAAG3lC,gBACpB,MAAMygB,EAAUzgB,EAAYvD,EACxBgkB,GAAWilB,IACXxjC,GAAYyjC,GACZhlC,EAAS8f,EAAUilB,GAC/B,EAGW,OADDzjC,GAAAV,KAAKokC,GAAc,GAClB,IAAMzjC,GAAYyjC,EAC7B,CFmPkCpyB,CAAMkyB,EAAqB,KACrCvK,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC1CrlC,KAAA0uC,MAAM7zC,QAAQi1C,IAC3C,GAEA,CACgBpJ,GACK1mC,KAAA+hB,KAAKguB,mBAAmBrJ,EAAU1mC,OAGd,IAAzBA,KAAK2d,QAAQoO,SACb7kB,IACCw/B,GAAYlJ,IACRx9B,KAAA05B,iBAAiB,aAAa,EAAGzvB,QAAO86B,mBAAkBiL,2BAA0BxS,OAAQyS,MACzF,GAAAjwC,KAAKkwC,yBAGL,OAFAlwC,KAAKkc,YAAS,OACdlc,KAAKmwC,oBAAiB,GAI1B,MAAMC,EAAmBpwC,KAAK2d,QAAQ1U,YAClC/B,EAAcwB,wBACd2nC,IACEC,uBAAEA,EAAAC,0BAAwBA,GAA+BrpC,EAAcQ,WAKvE8oC,GAAiBxwC,KAAKywC,eACvBrG,GAAiBpqC,KAAKywC,aAAcR,IACrCD,EAMEU,GAAgC3L,GAAoBiL,EAC1D,GAAIhwC,KAAK2d,QAAQgzB,YACZ3wC,KAAKgrC,YAAchrC,KAAKgrC,WAAW1qC,UACpCowC,GACC3L,IACIyL,IAAkBxwC,KAAKynC,kBAAoB,CAC5CznC,KAAKgrC,aACLhrC,KAAKyrC,aAAezrC,KAAKgrC,WACzBhrC,KAAKyrC,aAAaA,kBAAe,GAEhCzrC,KAAA4wC,mBAAmB3mC,EAAOymC,GAC/B,MAAMG,EAAmB,IAClB7nC,GAAmBonC,EAAkB,UACxC/kB,OAAQilB,EACRt8B,WAAYu8B,IAEZrpC,EAAcssB,oBACdxzB,KAAK2d,QAAQgzB,cACbE,EAAiBpzB,MAAQ,EACzBozB,EAAiBl9C,MAAO,GAE5BqM,KAAKyxB,eAAeof,EAC5C,MAO6B9L,GACD+K,GAAgB9vC,MAEhBA,KAAK0nC,UAAY1nC,KAAK2d,QAAQgb,gBAC9B34B,KAAK2d,QAAQgb,iBAGrB34B,KAAKywC,aAAeR,CAAA,GAGxC,CACQ,OAAAxX,GACSz4B,KAAA2d,QAAQ+oB,UAAY1mC,KAAKmnC,aACzBnnC,KAAA+hB,KAAK2sB,MAAMnuC,OAAOP,MACjB,MAAAsnC,EAAQtnC,KAAKunC,WACVD,GAAAA,EAAM/mC,OAAOP,MACtBA,KAAK40B,QAAU50B,KAAK40B,OAAOzzB,SAASiK,OAAOpL,MAC3CA,KAAKM,cAAW,EAChB8L,GAAYpM,KAAKyuC,iBAC7B,CAEQ,WAAAqC,GACI9wC,KAAK6tC,uBAAwB,CACzC,CACQ,aAAAkD,GACI/wC,KAAK6tC,uBAAwB,CACzC,CACQ,eAAAmD,GACW,OAAAhxC,KAAK6tC,uBAAyB7tC,KAAK8tC,qBACtD,CACQ,sBAAAoC,GACI,OAAQlwC,KAAKohC,oBACRphC,KAAK40B,QAAU50B,KAAK40B,OAAOsb,2BAC5B,CAChB,CAEQ,WAAAe,GACQjxC,KAAKgxC,oBAEThxC,KAAKorC,YAAa,EAClBprC,KAAK0uC,OAAS1uC,KAAK0uC,MAAM7zC,QAAQq2C,IAC5BlxC,KAAAwtC,cACjB,CACQ,oBAAA2D,GACU,MAAAjqC,cAAEA,GAAkBlH,KAAK2d,QACxB,OAAAzW,GAAiBA,EAAcQ,WAAW28B,iBAC7D,CACQ,UAAA8C,CAAWiK,GAAwB,GAE3B,GADJpxC,KAAK+hB,KAAKosB,iBAAkB,EACxBnuC,KAAK+hB,KAAKivB,kBAEV,YADAhxC,KAAK2d,QAAQgb,gBAAkB34B,KAAK2d,QAAQgb,kBAoBhD,GALIj5B,OAAOutC,iCACNjtC,KAAK+sC,2BACNF,GAAuC7sC,OAE1CA,KAAK+hB,KAAKqpB,YAAcprC,KAAK+hB,KAAKkvB,cAC/BjxC,KAAKqrC,cACL,OACJrrC,KAAKqrC,eAAgB,EACrB,IAAA,IAASr2C,EAAI,EAAGA,EAAIgL,KAAKqvC,KAAKt6C,OAAQC,IAAK,CACjC,MAAAgjC,EAAOh4B,KAAKqvC,KAAKr6C,GACvBgjC,EAAKiW,sBAAuB,EAC5BjW,EAAKsM,aAAa,YACdtM,EAAKra,QAAQgzB,YACb3Y,EAAKmP,YAAW,EAEpC,CACY,MAAMT,SAAEA,EAAUlJ,OAAAA,GAAWx9B,KAAK2d,QAC9B,QAAa,IAAb+oB,IAA2BlJ,EAC3B,OACE,MAAA6G,EAAoBrkC,KAAKmxC,uBAC/BnxC,KAAKqxC,2BAA6BhN,EAC5BA,EAAkBrkC,KAAKozB,aAAc,SACrC,EACNpzB,KAAKsxC,iBACoBF,GAAApxC,KAAKsvC,gBAAgB,aAC1D,CACQ,MAAA3jC,GACI3L,KAAKouC,iBAAkB,EAKvB,GAJyBpuC,KAAKgxC,kBAQ1B,OAHAhxC,KAAK+wC,gBACL/wC,KAAKwuC,yBACAxuC,KAAA0uC,MAAM7zC,QAAQ02C,IAGlBvxC,KAAKorC,YACDprC,KAAA0uC,MAAM7zC,QAAQ22C,IAEvBxxC,KAAKorC,YAAa,EAIbprC,KAAA0uC,MAAM7zC,QAAQ42C,IAKdzxC,KAAA0uC,MAAM7zC,QAAQ0pC,IAKdvkC,KAAA0uC,MAAM7zC,QAAQ62C,IACnB1xC,KAAKwuC,oBAMCxiC,MAAAA,EAAMmR,GAAKnR,MACjBV,GAAUrB,MAAQ2F,GAAM,EAAG,IAAO,GAAI5D,EAAMV,GAAUpB,WACtDoB,GAAUpB,UAAY8B,EACtBV,GAAUnB,cAAe,EACdkC,GAAAV,OAAON,QAAQC,IACfe,GAAAT,UAAUP,QAAQC,IAClBe,GAAApL,OAAOoK,QAAQC,IAC1BA,GAAUnB,cAAe,CACrC,CACQ,SAAA28B,GACS9mC,KAAKouC,kBACNpuC,KAAKouC,iBAAkB,EACbhI,GAAA36B,KAAKzL,KAAKquC,gBAEpC,CACQ,iBAAAG,GACSxuC,KAAA0uC,MAAM7zC,QAAQ82C,IACd3xC,KAAAovC,YAAYv0C,QAAQ+2C,GACrC,CACQ,wBAAAC,GACS7xC,KAAKsuC,4BACNtuC,KAAKsuC,2BAA4B,EACjCniC,GAAMP,UAAU5L,KAAKyuC,kBAAkB,GAAO,GAE9D,CACQ,yBAAA7G,GAMIz7B,GAAMN,YAAW,KACT7L,KAAKqrC,cACLrrC,KAAK+hB,KAAK+kB,YAGV9mC,KAAK+hB,KAAKwsB,mBAC9B,GAEA,CAIQ,cAAA+C,IACQtxC,KAAKkrC,UAAalrC,KAAKM,WAEtBN,KAAAkrC,SAAWlrC,KAAKsiC,UACjC,CACQ,YAAAiC,GACI,IAAKvkC,KAAKM,SACN,OAGA,GADJN,KAAKskC,iBACCtkC,KAAK2d,QAAQm0B,qBAAuB9xC,KAAK0nC,UAC1C1nC,KAAKqrC,eACN,OASJ,GAAIrrC,KAAKgrC,aAAehrC,KAAKgrC,WAAW1qC,SACpC,IAAA,IAAStL,EAAI,EAAGA,EAAIgL,KAAKqvC,KAAKt6C,OAAQC,IAAK,CAC1BgL,KAAKqvC,KAAKr6C,GAClBsvC,cACzB,CAEY,MAAMyN,EAAa/xC,KAAKw9B,OACnBx9B,KAAAw9B,OAASx9B,KAAKsiC,SAAQ,GAC3BtiC,KAAKgyC,gB3BngBQ,CACrBhlC,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2BqgB7BjM,KAAKqrC,eAAgB,EACrBrrC,KAAK6lC,qBAAkB,EACvB7lC,KAAKsvC,gBAAgB,UAAWtvC,KAAKw9B,OAAO+D,WACtC,MAAAr6B,cAAEA,GAAkBlH,KAAK2d,QAE3BzW,GAAAA,EAAc2oB,OAAO,gBAAiB7vB,KAAKw9B,OAAO+D,UAAWwQ,EAAaA,EAAWxQ,eAAY,EACjH,CACQ,YAAA+C,CAAa2N,EAAQ,WACjB,IAAIj/B,EAAmBiC,QAAQjV,KAAK2d,QAAQu0B,cAAgBlyC,KAAKM,UAMjE,GALIN,KAAKkjC,QACLljC,KAAKkjC,OAAOsK,cAAgBxtC,KAAK+hB,KAAKyrB,aACtCxtC,KAAKkjC,OAAO+O,QAAUA,IACHj/B,GAAA,GAEnBA,EAAkB,CACZ,MAAAm/B,EAAS7E,EAAkBttC,KAAKM,UACtCN,KAAKkjC,OAAS,CACVsK,YAAaxtC,KAAK+hB,KAAKyrB,YACvByE,QACAE,SACAnqB,OAAQqlB,EAAcrtC,KAAKM,UAC3B8xC,QAASpyC,KAAKkjC,OAASljC,KAAKkjC,OAAOiP,OAASA,EAEhE,CACA,CACQ,cAAA5E,GACI,IAAKA,EACD,OACJ,MAAM8E,EAAmBryC,KAAKqrC,eAC1BrrC,KAAKiuC,sBACLjuC,KAAK2d,QAAQm0B,oBACXQ,EAAgBtyC,KAAK6lC,kBAAoBoE,GAAYjqC,KAAK6lC,iBAC1DxB,EAAoBrkC,KAAKmxC,uBACzBoB,EAAyBlO,EACzBA,EAAkBrkC,KAAKozB,aAAc,SACrC,EACAof,EAA8BD,IAA2BvyC,KAAKqxC,2BAChEgB,IACCC,GACG5T,GAAa1+B,KAAKozB,eAClBof,KACWjF,EAAAvtC,KAAKM,SAAUiyC,GAC9BvyC,KAAKiuC,sBAAuB,EAC5BjuC,KAAKwqC,iBAErB,CACQ,OAAAlI,CAAQmQ,GAAkB,GAChB,MAAAC,EAAU1yC,KAAKmjC,iBACjB,IAAA5B,EAAYvhC,KAAK2yC,oBAAoBD,GAi+BrD,IAAkBxT,EAv9BC,OAJHuT,IACYlR,EAAAvhC,KAAKyyC,gBAAgBlR,IA29B7CqR,IADc1T,EAx9BGqC,GAy9BHv0B,GACd4lC,GAAU1T,EAAIttB,GAz9BC,CACH47B,YAAaxtC,KAAK+hB,KAAKyrB,YACvBqF,YAAaH,EACbnR,YACAnO,aAAc,CAAE,EAChBv9B,OAAQmK,KAAKk4B,GAE7B,CACQ,cAAAiL,GACQtiC,IAAAA,EACE,MAAAqG,cAAEA,GAAkBlH,KAAK2d,QAC/B,IAAKzW,EACD,M3B1kBS,CACrB8F,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2B4kBvB,MAAAizB,EAAMh4B,EAAcyV,qBAE1B,MADgD,QAAtB9b,EAAKb,KAAKkjC,cAA2B,IAAPriC,OAAgB,EAASA,EAAGuxC,UAAYpyC,KAAKqvC,KAAKltC,KAAK2wC,KACzF,CAEZ,MAAA5P,OAAEA,GAAWljC,KAAK+hB,KACpBmhB,IACA7D,GAAcH,EAAIlyB,EAAGk2B,EAAOlb,OAAOhb,GACnCqyB,GAAcH,EAAIttB,EAAGsxB,EAAOlb,OAAOpW,GAEvD,CACmB,OAAAstB,CACnB,CACQ,mBAAAyT,CAAoBzT,GACZr+B,IAAAA,EACJ,MAAMkyC,E3BzlBO,CACrB/lC,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2B4lBxBpL,GADLooC,GAAY8J,EAAkB7T,GACH,QAAtBr+B,EAAKb,KAAKkjC,cAA2B,IAAPriC,OAAgB,EAASA,EAAGuxC,QACpD,OAAAW,EAMX,IAAA,IAAS/9C,EAAI,EAAGA,EAAIgL,KAAKqvC,KAAKt6C,OAAQC,IAAK,CACjC,MAAAgjC,EAAOh4B,KAAKqvC,KAAKr6C,IACjBkuC,OAAEA,EAAQvlB,QAAAA,GAAYqa,EACxBA,IAASh4B,KAAK+hB,MAAQmhB,GAAUvlB,EAAQu0B,eAKpChP,EAAOkP,SACPnJ,GAAY8J,EAAkB7T,GAElCG,GAAc0T,EAAiB/lC,EAAGk2B,EAAOlb,OAAOhb,GAChDqyB,GAAc0T,EAAiBnhC,EAAGsxB,EAAOlb,OAAOpW,GAEpE,CACmB,OAAAmhC,CACnB,CACQ,cAAAC,CAAe9T,EAAK+T,GAAgB,GAChC,MAAMC,E3BpnBO,CACrBlmC,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2BsnB7Bg9B,GAAYiK,EAAgBhU,GAC5B,IAAA,IAASlqC,EAAI,EAAGA,EAAIgL,KAAKqvC,KAAKt6C,OAAQC,IAAK,CACjC,MAAAgjC,EAAOh4B,KAAKqvC,KAAKr6C,IAClBi+C,GACDjb,EAAKra,QAAQu0B,cACbla,EAAKkL,QACLlL,IAASA,EAAKjW,MACd2d,GAAawT,EAAgB,CACzBlmC,GAAIgrB,EAAKkL,OAAOlb,OAAOhb,EACvB4E,GAAIomB,EAAKkL,OAAOlb,OAAOpW,IAG1B8sB,GAAa1G,EAAK5E,eAEVsM,GAAAwT,EAAgBlb,EAAK5E,aAClD,CAImB,OAHHsL,GAAa1+B,KAAKozB,eACLsM,GAAAwT,EAAgBlzC,KAAKozB,cAE/B8f,CACnB,CACQ,eAAAT,CAAgBvT,GACZ,MAAMiU,E3B3oBO,CACrBnmC,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2B6oB7Bg9B,GAAYkK,EAAqBjU,GACjC,IAAA,IAASlqC,EAAI,EAAGA,EAAIgL,KAAKqvC,KAAKt6C,OAAQC,IAAK,CACjC,MAAAgjC,EAAOh4B,KAAKqvC,KAAKr6C,GACvB,IAAKgjC,EAAK13B,SACN,SACA,IAACo+B,GAAa1G,EAAK5E,cACnB,SACJqL,GAASzG,EAAK5E,eAAiB4E,EAAKsZ,iBACpC,MAAMvH,E3BppBG,CACrB/8B,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2BupBzBg9B,GAAYc,EADI/R,EAAKmL,kBAED2G,GAAAqJ,EAAqBnb,EAAK5E,aAAc4E,EAAKkT,SAAWlT,EAAKkT,SAAS3J,eAAY,EAAWwI,EACjI,CAImB,OAHHrL,GAAa1+B,KAAKozB,eACE0W,GAAAqJ,EAAqBnzC,KAAKozB,cAE3C+f,CACnB,CACQ,cAAAC,CAAenpC,GACXjK,KAAKqzC,YAAcppC,EACnBjK,KAAK+hB,KAAK8vB,2BACV7xC,KAAK0tC,mBAAoB,CACrC,CACQ,UAAA1G,CAAWrpB,GACP3d,KAAK2d,QAAU,IACR3d,KAAK2d,WACLA,EACH2tB,eAAiC,IAAtB3tB,EAAQ2tB,WAA0B3tB,EAAQ2tB,UAErE,CACQ,iBAAAiG,GACIvxC,KAAKkjC,YAAS,EACdljC,KAAKw9B,YAAS,EACdx9B,KAAKkrC,cAAW,EAChBlrC,KAAKqxC,gCAA6B,EAClCrxC,KAAKqzC,iBAAc,EACnBrzC,KAAKkc,YAAS,EACdlc,KAAKqrC,eAAgB,CACjC,CACQ,kCAAAiI,GACStzC,KAAKuzC,gBAQNvzC,KAAKuzC,eAAevE,2BACpB1jC,GAAUpB,WACLlK,KAAAuzC,eAAe3E,oBAAmB,EAEvD,CACQ,kBAAAA,CAAmB4E,GAAqB,GAChC3yC,IAAAA,EAME,MAAA6pC,EAAO1qC,KAAKyzC,UACbzzC,KAAA0tC,oBAAsB1tC,KAAK0tC,kBAAoBhD,EAAKgD,mBACpD1tC,KAAA4tC,mBAAqB5tC,KAAK4tC,iBAAmBlD,EAAKkD,kBAClD5tC,KAAA2tC,0BAA4B3tC,KAAK2tC,wBAA0BjD,EAAKiD,yBACrE,MAAM+F,EAAWz+B,QAAQjV,KAAKyrC,eAAiBzrC,OAAS0qC,EAWpD,KANc8I,GACbE,GAAY1zC,KAAK2tC,yBAClB3tC,KAAK0tC,oBACmB,QAAtB7sC,EAAKb,KAAK40B,cAA2B,IAAP/zB,OAAgB,EAASA,EAAG6sC,oBAC5D1tC,KAAK2zC,gCACL3zC,KAAK+hB,KAAK+rB,uBAEV,OACJ,MAAQtQ,OAAAA,EAAQkJ,SAAAA,GAAa1mC,KAAK2d,QAIlC,GAAK3d,KAAKw9B,SAAYA,GAAUkJ,GAAhC,CAQA,GANA1mC,KAAKgvC,yBAA2B1jC,GAAUpB,WAMrClK,KAAKqzC,cAAgBrzC,KAAKmwC,eAAgB,CACrC,MAAAoD,EAAiBvzC,KAAK4zC,6BACxBL,GACAA,EAAe/V,QACY,IAA3Bx9B,KAAKmvC,mBACLnvC,KAAKuzC,eAAiBA,EACtBvzC,KAAKszC,qCACLtzC,KAAKmwC,e3B5uBA,CACrBnjC,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2B8uBrBjM,KAAK6zC,qB3B7uBA,CACrB7mC,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2B+uBrBwxB,GAAqBz9B,KAAK6zC,qBAAsB7zC,KAAKw9B,OAAO+D,UAAWgS,EAAe/V,OAAO+D,WACjF0H,GAAAjpC,KAAKmwC,eAAgBnwC,KAAK6zC,uBAGjC7zC,KAAAuzC,eAAiBvzC,KAAKmwC,oBAAiB,CAEhE,CAKY,GAAKnwC,KAAKmwC,gBAAmBnwC,KAAKqzC,YAAlC,C7B9tBZ,IAAyBn3B,EAAQohB,EAAU1I,E6BuwB/B,GApCK50B,KAAKkc,SACNlc,KAAKkc,O3B/vBI,CACrBlP,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2BiwBzBjM,KAAK8zC,qB3BhwBI,CACrB9mC,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,K2BswBzBjM,KAAKmwC,gBACLnwC,KAAK6zC,sBACL7zC,KAAKuzC,gBACLvzC,KAAKuzC,eAAer3B,QACpBlc,KAAKszC,qC7B9uBIp3B,E6B+uBOlc,KAAKkc,O7B/uBJohB,E6B+uBYt9B,KAAKmwC,e7B/uBPvb,E6B+uBuB50B,KAAKuzC,eAAer3B,O7B9uBlFmhB,GAAiBnhB,EAAOlP,EAAGswB,EAAStwB,EAAG4nB,EAAO5nB,GAC9CqwB,GAAiBnhB,EAAOtK,EAAG0rB,EAAS1rB,EAAGgjB,EAAOhjB,I6BkvB7B5R,KAAKqzC,aACNp+B,QAAQjV,KAAKyrC,cAEbzrC,KAAKkc,OAASlc,KAAKgzC,eAAehzC,KAAKw9B,OAAO+D,WAG9C0H,GAAYjpC,KAAKkc,OAAQlc,KAAKw9B,OAAO+D,WAE3BtC,GAAAj/B,KAAKkc,OAAQlc,KAAKqzC,cAMhCpK,GAAYjpC,KAAKkc,OAAQlc,KAAKw9B,OAAO+D,WAKrCvhC,KAAK2zC,+BAAgC,CACrC3zC,KAAK2zC,gCAAiC,EAChC,MAAAJ,EAAiBvzC,KAAK4zC,6BACxBL,GACAt+B,QAAQs+B,EAAe9H,gBACnBx2B,QAAQjV,KAAKyrC,gBAChB8H,EAAe51B,QAAQu0B,cACxBqB,EAAer3B,QACY,IAA3Blc,KAAKmvC,mBACLnvC,KAAKuzC,eAAiBA,EACtBvzC,KAAKszC,qCACLtzC,KAAKmwC,e3B7yBA,CACrBnjC,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2B+yBrBjM,KAAK6zC,qB3B9yBA,CACrB7mC,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2BgzBrBwxB,GAAqBz9B,KAAK6zC,qBAAsB7zC,KAAKkc,OAAQq3B,EAAer3B,QAChE+sB,GAAAjpC,KAAKmwC,eAAgBnwC,KAAK6zC,uBAGjC7zC,KAAAuzC,eAAiBvzC,KAAKmwC,oBAAiB,CAEhE,CAIgB9D,IACQJ,GAAAE,sBAhER,CA5BA,CA8FhB,CACQ,0BAAAyH,GACI,GAAK5zC,KAAK40B,SACN6J,GAASz+B,KAAK40B,OAAOxB,gBACrBuL,GAAe3+B,KAAK40B,OAAOxB,cAG3B,OAAApzB,KAAK40B,OAAOmf,eACL/zC,KAAK40B,OAGL50B,KAAK40B,OAAOgf,4BAEnC,CACQ,YAAAG,GACW,OAAA9+B,SAASjV,KAAKmwC,gBACjBnwC,KAAKqzC,aACLrzC,KAAK2d,QAAQgzB,aACb3wC,KAAKw9B,OACrB,CACQ,cAAAqR,GACQhuC,IAAAA,EACE,MAAA6pC,EAAO1qC,KAAKyzC,UACZC,EAAWz+B,QAAQjV,KAAKyrC,eAAiBzrC,OAAS0qC,EACxD,IAAIsJ,GAAU,EAuBV,IAlBAh0C,KAAK0tC,oBAA6C,QAAtB7sC,EAAKb,KAAK40B,cAA2B,IAAP/zB,OAAgB,EAASA,EAAG6sC,sBAC5EsG,GAAA,GAMVN,IACC1zC,KAAK2tC,yBAA2B3tC,KAAK4tC,oBAC5BoG,GAAA,GAMVh0C,KAAKgvC,2BAA6B1jC,GAAUpB,YAClC8pC,GAAA,GAEVA,EACA,OACJ,MAAQxW,OAAAA,EAAQkJ,SAAAA,GAAa1mC,KAAK2d,QAWlC,GANK3d,KAAAytC,gBAAkBx4B,QAASjV,KAAK40B,QAAU50B,KAAK40B,OAAO6Y,iBACvDztC,KAAKynC,kBACLznC,KAAKi0C,kBACJj0C,KAAKytC,kBACDztC,KAAAqzC,YAAcrzC,KAAKmwC,oBAAiB,IAExCnwC,KAAKw9B,SAAYA,IAAUkJ,EAC5B,OAKJuC,GAAYjpC,KAAKgyC,gBAAiBhyC,KAAKw9B,OAAO+D,WAIxC,MAAA2S,EAAiBl0C,KAAK4lC,UAAU54B,EAChCmnC,EAAiBn0C,KAAK4lC,UAAUh0B,GvBp2BlD,SAAyBstB,EAAK0G,EAAWwO,EAAUC,GAAqB,GACpE,MAAMC,EAAaF,EAASr/C,OAC5B,IAAKu/C,EACD,OAGA,IAAAtc,EACA/tB,EAFM27B,EAAA54B,EAAI44B,EAAUh0B,EAAI,EAG5B,IAAA,IAAS5c,EAAI,EAAGA,EAAIs/C,EAAYt/C,IAAK,CACjCgjC,EAAOoc,EAASp/C,GAChBiV,EAAQ+tB,EAAK6N,gBAKP,MAAA3+B,cAAEA,GAAkB8wB,EAAKra,QAC3BzW,GACAA,EAActT,MAAM2L,OACkB,aAAtC2H,EAActT,MAAM2L,MAAMg1C,UAG1BF,GACArc,EAAKra,QAAQu0B,cACbla,EAAKkL,QACLlL,IAASA,EAAKjW,MACd2d,GAAaR,EAAK,CACdlyB,GAAIgrB,EAAKkL,OAAOlb,OAAOhb,EACvB4E,GAAIomB,EAAKkL,OAAOlb,OAAOpW,IAG3B3H,IAEU27B,EAAA54B,GAAK/C,EAAM+C,EAAEiD,MACb21B,EAAAh0B,GAAK3H,EAAM2H,EAAE3B,MAEvBgvB,GAAcC,EAAKj1B,IAEnBoqC,GAAsB3V,GAAa1G,EAAK5E,eAC3BsM,GAAAR,EAAKlH,EAAK5E,cAEnC,CAKQwS,EAAU54B,EAAIoyB,IACdwG,EAAU54B,EAAImyB,KACdyG,EAAU54B,EAAI,GAEd44B,EAAUh0B,EAAIwtB,IACdwG,EAAUh0B,EAAIutB,KACdyG,EAAUh0B,EAAI,EAEtB,CuBozBY4iC,CAAgBx0C,KAAKgyC,gBAAiBhyC,KAAK4lC,UAAW5lC,KAAKqvC,KAAMqE,IAK7DhJ,EAAKlN,QACJkN,EAAKxuB,QACgB,IAArBlc,KAAK4lC,UAAU54B,GAAgC,IAArBhN,KAAK4lC,UAAUh0B,IACrC84B,EAAAxuB,OAASwuB,EAAKlN,OAAO+D,UAC1BmJ,EAAKoJ,qB3Bj5BI,CACrB9mC,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,K2Bo5BvB,MAAAiQ,OAAEA,GAAWwuB,EACdxuB,GAYAlc,KAAK6lC,iBAAoB7lC,KAAKy0C,qBAI/BtL,GAAkBnpC,KAAKy0C,oBAAoBznC,EAAGhN,KAAK6lC,gBAAgB74B,GACnEm8B,GAAkBnpC,KAAKy0C,oBAAoB7iC,EAAG5R,KAAK6lC,gBAAgBj0B,IAJnE5R,KAAK00C,yBAeTtX,GAAap9B,KAAK6lC,gBAAiB7lC,KAAKgyC,gBAAiB91B,EAAQlc,KAAKozB,cAClEpzB,KAAK4lC,UAAU54B,IAAMknC,GACrBl0C,KAAK4lC,UAAUh0B,IAAMuiC,GACpB7J,GAAgBtqC,KAAK6lC,gBAAgB74B,EAAGhN,KAAKy0C,oBAAoBznC,IACjEs9B,GAAgBtqC,KAAK6lC,gBAAgBj0B,EAAG5R,KAAKy0C,oBAAoB7iC,KAClE5R,KAAKivC,cAAe,EACpBjvC,KAAKwqC,iBACAxqC,KAAAsvC,gBAAgB,mBAAoBpzB,IAKzCmwB,IACQJ,GAAAG,0BAnCJpsC,KAAKy0C,sBACLz0C,KAAK00C,yBACL10C,KAAKwqC,iBAmCzB,CACQ,IAAAe,GACIvrC,KAAKkvC,WAAY,CAE7B,CACQ,IAAAnE,GACI/qC,KAAKkvC,WAAY,CAE7B,CACQ,cAAA1E,CAAemK,GAAY,GACnB9zC,IAAAA,EAEJ,GADsC,QAArCA,EAAKb,KAAK2d,QAAQzW,qBAAkC,IAAPrG,GAAyBA,EAAG2pC,iBACtEmK,EAAW,CACL,MAAArN,EAAQtnC,KAAKunC,WACnBD,GAASA,EAAMkD,gBAC/B,CACgBxqC,KAAKyrC,eAAiBzrC,KAAKyrC,aAAanrC,WACxCN,KAAKyrC,kBAAe,EAEpC,CACQ,sBAAAiJ,GACI10C,KAAKy0C,oB3Bz9BU,CACvBznC,EAP2B,CAC3BmwB,UAAW,EACXltB,MAAO,EACPgM,OAAQ,EACRihB,YAAa,GAIbtrB,EAR2B,CAC3BurB,UAAW,EACXltB,MAAO,EACPgM,OAAQ,EACRihB,YAAa,I2B49BLl9B,KAAK6lC,gB3B19BU,CACvB74B,EAP2B,CAC3BmwB,UAAW,EACXltB,MAAO,EACPgM,OAAQ,EACRihB,YAAa,GAIbtrB,EAR2B,CAC3BurB,UAAW,EACXltB,MAAO,EACPgM,OAAQ,EACRihB,YAAa,I2B69BLl9B,KAAK40C,6B3B39BU,CACvB5nC,EAP2B,CAC3BmwB,UAAW,EACXltB,MAAO,EACPgM,OAAQ,EACRihB,YAAa,GAIbtrB,EAR2B,CAC3BurB,UAAW,EACXltB,MAAO,EACPgM,OAAQ,EACRihB,YAAa,G2B89BjB,CACQ,kBAAA0T,CAAmB3mC,EAAOymC,GAA+B,GACrD,MAAMxF,EAAWlrC,KAAKkrC,SAChB2J,EAAuB3J,EACvBA,EAAS9X,aACT,CAAE,EACF0hB,EAAc,IAAK90C,KAAKozB,cACxBigB,E3Bn+BS,CACvBrmC,EAP2B,CAC3BmwB,UAAW,EACXltB,MAAO,EACPgM,OAAQ,EACRihB,YAAa,GAIbtrB,EAR2B,CAC3BurB,UAAW,EACXltB,MAAO,EACPgM,OAAQ,EACRihB,YAAa,I2Bs+BAl9B,KAAKuzC,gBACLvzC,KAAKuzC,eAAe51B,QAAQgzB,aACxB3wC,KAAAmwC,eAAiBnwC,KAAK6zC,0BAAuB,GAEtD7zC,KAAK2zC,gCAAkCjD,EACvC,MAAMqE,E3Bp+BO,CACrB/nC,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2Bw+BvB+oC,GAFiB9J,EAAWA,EAASr1C,YAAS,MAC/BmK,KAAKw9B,OAASx9B,KAAKw9B,OAAO3nC,YAAS,GAElDyxC,EAAQtnC,KAAKunC,WACb0N,GAAgB3N,GAASA,EAAME,QAAQzyC,QAAU,EACjDmgD,EAAyBjgC,QAAQ+/B,IAClCC,IAC0B,IAA3Bj1C,KAAK2d,QAAQ2tB,YACZtrC,KAAKqvC,KAAKltC,KAAKgzC,KAEhB,IAAAC,EADJp1C,KAAKmvC,kBAAoB,EAEpBnvC,KAAAq1C,eAAkBvxB,IACnB,MAAMzE,EAAWyE,EAAS,ILj/B1C,IAAmB5wB,EAAGE,EK0/CNgkB,EAAQtE,EAAMwM,EAAI3sB,EAxgBlB2iD,GAAajC,EAAYrmC,EAAG/C,EAAM+C,EAAGqS,GACrCi2B,GAAajC,EAAYzhC,EAAG3H,EAAM2H,EAAGyN,GACrCrf,KAAKozC,eAAeC,GAChBrzC,KAAKmwC,gBACLnwC,KAAK6zC,sBACL7zC,KAAKw9B,QACLx9B,KAAKuzC,gBACLvzC,KAAKuzC,eAAe/V,SACpBC,GAAqBsX,EAAgB/0C,KAAKw9B,OAAO+D,UAAWvhC,KAAKuzC,eAAe/V,OAAO+D,WAggB3FnqB,EA/fWpX,KAAKmwC,eA+fRr9B,EA/fwB9S,KAAK6zC,qBA+fvBv0B,EA/f6Cy1B,EA+fzCpiD,EA/fyD0sB,EAggBvFk2B,GAAQn+B,EAAOpK,EAAG8F,EAAK9F,EAAGsS,EAAGtS,EAAGra,GAChC4iD,GAAQn+B,EAAOxF,EAAGkB,EAAKlB,EAAG0N,EAAG1N,EAAGjf,GA5fZyiD,ILhgCLliD,EKigCe8M,KAAKmwC,eLjgCjB/8C,EKigCiCgiD,ELhgC5ClL,GAAWh3C,EAAE8Z,EAAG5Z,EAAE4Z,IAAMk9B,GAAWh3C,EAAE0e,EAAGxe,EAAEwe,MKigC7B5R,KAAK0tC,mBAAoB,GAExB0H,IACDA,E3BrgCC,CACrBpoC,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,K2BugCTg9B,GAAAmM,EAAoBp1C,KAAKmwC,iBAErC6E,IACAh1C,KAAKmrC,gBAAkB2J,ER1gC3C,SAAmB54B,EAAQs5B,EAAQ9K,EAAMrrB,EAAU61B,EAAwBD,GACnEC,GACAh5B,EAAO5B,QAAU2K,GAAU,OAEV,IAAjBylB,EAAKpwB,QAAwBowB,EAAKpwB,QAAU,EAAGsuB,GAAgBvpB,IACxDnD,EAAAu5B,YAAcxwB,QAA6B,IAAnBuwB,EAAOl7B,QAAwBk7B,EAAOl7B,QAAU,EAAG,EAAGwuB,GAAiBzpB,KAEjG41B,IACL/4B,EAAO5B,QAAU2K,QAA6B,IAAnBuwB,EAAOl7B,QAAwBk7B,EAAOl7B,QAAU,OAAoB,IAAjBowB,EAAKpwB,QAAwBowB,EAAKpwB,QAAU,EAAG+E,IAKjI,IAAA,IAASrqB,EAAI,EAAGA,EAAIuzC,GAAYvzC,IAAK,CACjC,MAAM0gD,EAAc,SAASpN,GAAQtzC,WACjC,IAAA2gD,EAAejN,GAAU8M,EAAQE,GACjCE,EAAalN,GAAUgC,EAAMgL,QACZ,IAAjBC,QAA6C,IAAfC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACAnN,GAAKkN,KAAkBlN,GAAKmN,IAE5B15B,EAAOw5B,GAAe5sC,KAAKmD,IAAIgZ,GAAUujB,GAASmN,GAAenN,GAASoN,GAAav2B,GAAW,IAC9F/O,GAAQjC,KAAKunC,IAAetlC,GAAQjC,KAAKsnC,MACzCz5B,EAAOw5B,IAAgB,MAI3Bx5B,EAAOw5B,GAAeE,EAElC,EAIQJ,EAAOj8B,QAAUmxB,EAAKnxB,UACf2C,EAAA3C,OAAS0L,GAAUuwB,EAAOj8B,QAAU,EAAGmxB,EAAKnxB,QAAU,EAAG8F,GAExE,CQm+BoBw2B,CAAUf,EAAaD,EAAsB70C,KAAKozB,aAAc/T,EAAU61B,EAAwBD,IAEtGj1C,KAAK+hB,KAAK8vB,2BACV7xC,KAAKwqC,iBACLxqC,KAAKmvC,kBAAoB9vB,CAAAA,EAE7Brf,KAAKq1C,eAAer1C,KAAK2d,QAAQgzB,WAAa,IAAO,EACjE,CACQ,cAAAlf,CAAe9T,GACX3d,KAAKsvC,gBAAgB,kBAChBtvC,KAAAynC,kBAAoBznC,KAAKynC,iBAAiB3e,OAC3C9oB,KAAKyrC,cAAgBzrC,KAAKyrC,aAAahE,kBAClCznC,KAAAyrC,aAAahE,iBAAiB3e,OAEnC9oB,KAAKi0C,mBACL7nC,GAAYpM,KAAKi0C,kBACjBj0C,KAAKi0C,sBAAmB,GAOvBj0C,KAAAi0C,iBAAmB9nC,GAAMR,QAAO,KACjCy5B,GAAsBC,wBAAyB,EAC1CrlC,KAAAynC,iBG1iCrB,SAA4B/xC,EAAOkT,EAAW+U,GAC1C,MAAMm4B,EAAgBxjB,GAAc58B,GAASA,EAAQue,GAAYve,GAEjE,OADAogD,EAAcnvC,MAAMmoB,GAAmB,GAAIgnB,EAAeltC,EAAW+U,IAC9Dm4B,EAAclpB,SACzB,CHsiCwCmpB,CAAmB,EArgCnC,IAqgCuD,IACxDp4B,EACHS,SAAW0F,IACP9jB,KAAKq1C,eAAevxB,GACZnG,EAAAS,UAAYT,EAAQS,SAAS0F,EAAM,EAE/C9P,WAAY,KACA2J,EAAA3J,YAAc2J,EAAQ3J,aAC9BhU,KAAKg2C,mBAAmB,IAG5Bh2C,KAAKyrC,eACAzrC,KAAAyrC,aAAahE,iBAAmBznC,KAAKynC,kBAE9CznC,KAAKi0C,sBAAmB,CAAA,GAExC,CACQ,iBAAA+B,GACQh2C,KAAKyrC,eACLzrC,KAAKyrC,aAAahE,sBAAmB,EACrCznC,KAAKyrC,aAAaR,qBAAkB,GAElC,MAAA3D,EAAQtnC,KAAKunC,WACnBD,GAASA,EAAMkE,wBACfxrC,KAAKyrC,aACDzrC,KAAKynC,iBACDznC,KAAKmrC,qBACD,EACZnrC,KAAKsvC,gBAAgB,oBACjC,CACQ,eAAAQ,GACQ9vC,KAAKynC,mBACAznC,KAAAq1C,gBAAkBr1C,KAAKq1C,eAriCpB,KAsiCRr1C,KAAKynC,iBAAiB3e,QAE1B9oB,KAAKg2C,mBACjB,CACQ,uBAAAC,GACU,MAAAvL,EAAO1qC,KAAKyzC,UAClB,IAAIK,qBAAEA,EAAsB53B,OAAAA,EAAQshB,OAAAA,EAAAA,aAAQpK,GAAiBsX,EAC7D,GAAKoJ,GAAyB53B,GAAWshB,EAAzC,CAOA,GAAIx9B,OAAS0qC,GACT1qC,KAAKw9B,QACLA,GACA0Y,GAA0Bl2C,KAAK2d,QAAQw4B,cAAen2C,KAAKw9B,OAAO+D,UAAW/D,EAAO+D,WAAY,CACvFrlB,EAAAlc,KAAKkc,Q3BtlCL,CACrBlP,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2BwlCzB,MAAMmqC,EAAUrZ,GAAW/8B,KAAKw9B,OAAO+D,UAAUv0B,GACjDkP,EAAOlP,EAAEd,IAAMw+B,EAAKxuB,OAAOlP,EAAEd,IAC7BgQ,EAAOlP,EAAEf,IAAMiQ,EAAOlP,EAAEd,IAAMkqC,EAC9B,MAAMC,EAAUtZ,GAAW/8B,KAAKw9B,OAAO+D,UAAU3vB,GACjDsK,EAAOtK,EAAE1F,IAAMw+B,EAAKxuB,OAAOtK,EAAE1F,IAC7BgQ,EAAOtK,EAAE3F,IAAMiQ,EAAOtK,EAAE1F,IAAMmqC,CAC9C,CACYpN,GAAY6K,EAAsB53B,GAMlCwjB,GAAaoU,EAAsB1gB,GAOnCgK,GAAap9B,KAAK40C,6BAA8B50C,KAAKgyC,gBAAiB8B,EAAsB1gB,EA/BxF,CAgChB,CACQ,kBAAA2c,CAAmBrJ,EAAU1O,GACpBh4B,KAAKovC,YAAY35C,IAAIixC,IACtB1mC,KAAKovC,YAAY5oC,IAAIkgC,EAAU,IAAI6D,IAEzBvqC,KAAKovC,YAAYz5C,IAAI+wC,GAC7BrmC,IAAI23B,GACJ,MAAAse,EAASte,EAAKra,QAAQ44B,uBAC5Bve,EAAKoP,QAAQ,CACTn+B,WAAYqtC,EAASA,EAAOrtC,gBAAa,EACzC6hC,sBAAuBwL,GAAUA,EAAOE,4BAClCF,EAAOE,4BAA4Bxe,QACnC,GAEtB,CACQ,MAAA0P,GACU,MAAAJ,EAAQtnC,KAAKunC,WACZ,OAAAD,GAAQA,EAAMoD,OAAS1qC,IAC1C,CACQ,OAAAyzC,GACQ5yC,IAAAA,EACE,MAAA6lC,SAAEA,GAAa1mC,KAAK2d,QACnB,OAAA+oB,IAAuC,QAA1B7lC,EAAKb,KAAKunC,kBAA+B,IAAP1mC,OAAgB,EAASA,EAAG6pC,OAAgB1qC,IAC9G,CACQ,WAAAy2C,GACQ51C,IAAAA,EACE,MAAA6lC,SAAEA,GAAa1mC,KAAK2d,QACnB,OAAA+oB,EAAsC,QAA1B7lC,EAAKb,KAAKunC,kBAA+B,IAAP1mC,OAAgB,EAASA,EAAG4pC,cAAW,CACxG,CACQ,QAAAlD,GACU,MAAAb,SAAEA,GAAa1mC,KAAK2d,QACtB,GAAA+oB,EACA,OAAO1mC,KAAK+hB,KAAKqtB,YAAYz5C,IAAI+wC,EACjD,CACQ,OAAAU,EAAQ4G,WAAEA,EAAA/kC,WAAYA,wBAAY6hC,GAA2B,CAAA,GACnD,MAAAxD,EAAQtnC,KAAKunC,WACfD,GACMA,EAAAF,QAAQpnC,KAAM8qC,GACpBkD,IACAhuC,KAAK6lC,qBAAkB,EACvB7lC,KAAKguC,YAAa,GAElB/kC,GACKjJ,KAAAgnC,WAAW,CAAE/9B,cAClC,CACQ,QAAAo+B,GACU,MAAAC,EAAQtnC,KAAKunC,WACnB,QAAID,GACOA,EAAMD,SAASrnC,KAKtC,CACQ,oBAAAkxC,GACU,MAAAhqC,cAAEA,GAAkBlH,KAAK2d,QAC/B,IAAKzW,EACD,OAEJ,IAAIwvC,GAAyB,EAKvB,MAAAtjB,aAAEA,GAAiBlsB,EAWzB,IAVIksB,EAAajZ,GACbiZ,EAAa7Z,QACb6Z,EAAa5Z,SACb4Z,EAAa3Z,SACb2Z,EAAa1Z,SACb0Z,EAAarZ,OACbqZ,EAAapZ,SACY08B,GAAA,IAGxBA,EACD,OACJ,MAAMC,EAAc,CAAE,EAClBvjB,EAAajZ,GACbuyB,GAAyB,IAAKxlC,EAAeyvC,EAAa32C,KAAKmrC,iBAGnE,IAAA,IAASn2C,EAAI,EAAGA,EAAIu3C,GAAcx3C,OAAQC,IACb03C,GAAA,SAASH,GAAcv3C,KAAMkS,EAAeyvC,EAAa32C,KAAKmrC,iBAC9DuB,GAAA,OAAOH,GAAcv3C,KAAMkS,EAAeyvC,EAAa32C,KAAKmrC,iBAIzFjkC,EAAcjG,SAEd,IAAA,MAAWrO,KAAO+jD,EACdzvC,EAAc0lC,eAAeh6C,EAAK+jD,EAAY/jD,IAC1CoN,KAAKmrC,kBACLnrC,KAAKmrC,gBAAgBv4C,GAAO+jD,EAAY/jD,IAKhDsU,EAAcsjC,gBAC1B,CACQ,mBAAAoM,CAAoBC,GAChB,IAAIh2C,EAAIgE,EACJ,IAAC7E,KAAKM,UAAYN,KAAK+tC,MAChB,OACP,IAAC/tC,KAAKkvC,UACC,OAAA1C,GAEX,MAAMsK,EAAS,CACXrK,WAAY,IAEVpI,EAAoBrkC,KAAKmxC,uBAC/B,GAAInxC,KAAKguC,WAQE,OAPPhuC,KAAKguC,YAAa,EAClB8I,EAAOx8B,QAAU,GACVw8B,EAAAC,cACHjL,GAAmB+K,aAA6C,EAASA,EAAUE,gBAAkB,GACzGD,EAAO/mC,UAAYs0B,EACbA,EAAkBrkC,KAAKozB,aAAc,IACrC,OACC0jB,EAEL,MAAApM,EAAO1qC,KAAKyzC,UACd,IAACzzC,KAAK6lC,kBAAoB7lC,KAAKw9B,SAAWkN,EAAKxuB,OAAQ,CACvD,MAAM86B,EAAc,CAAE,EAef,OAdHh3C,KAAK2d,QAAQ+oB,WACbsQ,EAAY18B,aACsB,IAA9Bta,KAAKozB,aAAa9Y,QACZta,KAAKozB,aAAa9Y,QAClB,EACE08B,EAAAD,cACRjL,GAAmB+K,aAA6C,EAASA,EAAUE,gBAAkB,IAEzG/2C,KAAKivC,eAAiBvQ,GAAa1+B,KAAKozB,gBACxC4jB,EAAYjnC,UAAYs0B,EAClBA,EAAkB,CAAE,EAAE,IACtB,OACNrkC,KAAKivC,cAAe,GAEjB+H,CACvB,CACkB,MAAAC,EAAiBvM,EAAKS,iBAAmBT,EAAKtX,aACpDpzB,KAAKi2C,0BACLa,EAAO/mC,UIrwCnB,SAAkC9F,EAAO27B,EAAWsR,GAChD,IAAInnC,EAAY,GAOhB,MAAMonC,EAAaltC,EAAM+C,EAAEmwB,UAAYyI,EAAU54B,EAC3CoqC,EAAantC,EAAM2H,EAAEurB,UAAYyI,EAAUh0B,EAC3CylC,GAAcH,aAAyD,EAASA,EAAgB/8B,IAAM,EAW5G,IAVIg9B,GAAcC,GAAcC,KAC5BtnC,EAAY,eAAeonC,QAAiBC,QAAiBC,SAM7C,IAAhBzR,EAAU54B,GAA2B,IAAhB44B,EAAUh0B,IAC/B7B,GAAa,SAAS,EAAI61B,EAAU54B,MAAM,EAAI44B,EAAUh0B,OAExDslC,EAAiB,CACjB,MAAM78B,qBAAEA,EAAsBd,OAAAA,EAAAC,QAAQA,UAASC,EAASM,MAAAA,EAAAC,MAAOA,GAAUk9B,EACrE78B,IACYtK,EAAA,eAAesK,QAA2BtK,KACtDwJ,IACAxJ,GAAa,UAAUwJ,UACvBC,IACAzJ,GAAa,WAAWyJ,UACxBC,IACA1J,GAAa,WAAW0J,UACxBM,IACAhK,GAAa,SAASgK,UACtBC,IACAjK,GAAa,SAASiK,SAClC,CAKI,MAAMs9B,EAAgBrtC,EAAM+C,EAAEiD,MAAQ21B,EAAU54B,EAC1CuqC,EAAgBttC,EAAM2H,EAAE3B,MAAQ21B,EAAUh0B,EAIhD,OAHsB,IAAlB0lC,GAAyC,IAAlBC,IACVxnC,GAAA,SAASunC,MAAkBC,MAErCxnC,GAAa,MACxB,CJutC+BynC,CAAyBx3C,KAAK40C,6BAA8B50C,KAAK4lC,UAAWqR,GAC3F5S,IACAyS,EAAO/mC,UAAYs0B,EAAkB4S,EAAgBH,EAAO/mC,YAEhE,MAAM/C,EAAEA,EAAA4E,EAAGA,GAAM5R,KAAK6lC,gBACfiR,EAAAW,gBAAkB,GAAc,IAAXzqC,EAAEiP,WAA4B,IAAXrK,EAAEqK,YAC7CyuB,EAAKS,gBAKE2L,EAAAx8B,QACHowB,IAAS1qC,KACiG,QAAnG6E,EAAuC,QAAjChE,EAAKo2C,EAAe38B,eAA4B,IAAPzZ,EAAgBA,EAAKb,KAAKozB,aAAa9Y,eAA4B,IAAPzV,EAAgBA,EAAK,EACjI7E,KAAKirC,gBACDjrC,KAAKozB,aAAa9Y,QAClB28B,EAAexB,YAO7BqB,EAAOx8B,QACHowB,IAAS1qC,UACwB,IAA3Bi3C,EAAe38B,QACX28B,EAAe38B,QACf,QAC2B,IAA/B28B,EAAexB,YACXwB,EAAexB,YACf,EAKlB,IAAA,MAAW7iD,KAAOuzC,GAAiB,CAC3B,QAAwB,IAAxB8Q,EAAerkD,GACf,SACJ,MAAM8yC,QAAEA,EAAA0C,QAASA,GAAYjC,GAAgBvzC,GAOvC8kD,EAAiC,SAArBZ,EAAO/mC,UACnBknC,EAAerkD,GACf8yC,EAAQuR,EAAerkD,GAAM83C,GACnC,GAAItC,EAAS,CACT,MAAMuP,EAAMvP,EAAQrzC,OACpB,IAAA,IAASC,EAAI,EAAGA,EAAI2iD,EAAK3iD,IACd8hD,EAAA1O,EAAQpzC,IAAM0iD,CAE7C,MAEoBZ,EAAOlkD,GAAO8kD,CAElC,CAYmB,OANH13C,KAAK2d,QAAQ+oB,WACboQ,EAAOC,cACHrM,IAAS1qC,KACH8rC,GAAmB+K,aAA6C,EAASA,EAAUE,gBAAkB,GACrG,QAEPD,CACnB,CACQ,aAAAnF,GACS3xC,KAAAgrC,WAAahrC,KAAKkrC,cAAW,CAC9C,CAEQ,SAAA0M,GACI53C,KAAK+hB,KAAK2sB,MAAM7zC,SAASm9B,IAAen3B,IAAAA,EAAYA,OAAgC,QAAhCA,EAAKm3B,EAAKyP,wBAAqC,IAAP5mC,OAAgB,EAASA,EAAGioB,MAAM,IACzH9oB,KAAA+hB,KAAK2sB,MAAM7zC,QAAQ02C,IACnBvxC,KAAA+hB,KAAKqtB,YAAY7jC,OAClC,EAEA,CACA,SAASg5B,GAAavM,GAClBA,EAAKuM,cACT,CACA,SAASmN,GAAmB1Z,GACpBn3B,IAAAA,EACE,MAAAqqC,GAAuC,QAA1BrqC,EAAKm3B,EAAKgT,kBAA+B,IAAPnqC,OAAgB,EAASA,EAAGqqC,WAAalT,EAAKkT,SAC/F,GAAAlT,EAAK0P,UACL1P,EAAKwF,QACL0N,GACAlT,EAAKwX,aAAa,aAAc,CAChC,MAAQjO,UAAW/D,EAAQqV,YAAagF,GAAmB7f,EAAKwF,QAC1D2Y,cAAEA,GAAkBne,EAAKra,QACzB+1B,EAAWxI,EAASr1C,SAAWmiC,EAAKwF,OAAO3nC,OAG3B,SAAlBsgD,EACA7X,IAAUtB,IACA,MAAA8a,EAAepE,EACfxI,EAAS2H,YAAY7V,GACrBkO,EAAS3J,UAAUvE,GACnBjoC,EAASgoC,GAAW+a,GACbA,EAAA5rC,IAAMsxB,EAAOR,GAAM9wB,IACnB4rC,EAAA7rC,IAAM6rC,EAAa5rC,IAAMnX,CAAA,IAGrCmhD,GAA0BC,EAAejL,EAAS3J,UAAW/D,IAClEc,IAAUtB,IACA,MAAA8a,EAAepE,EACfxI,EAAS2H,YAAY7V,GACrBkO,EAAS3J,UAAUvE,GACnBjoC,EAASgoC,GAAWS,EAAOR,IACpB8a,EAAA7rC,IAAM6rC,EAAa5rC,IAAMnX,EAIlCijC,EAAKmY,iBAAmBnY,EAAKyP,mBAC7BzP,EAAK0V,mBAAoB,EACpB1V,EAAAmY,eAAenT,GAAM/wB,IACtB+rB,EAAKmY,eAAenT,GAAM9wB,IAAMnX,EACxD,IAGQ,MAAMgjD,E3B33Ca,CACvB/qC,EAP2B,CAC3BmwB,UAAW,EACXltB,MAAO,EACPgM,OAAQ,EACRihB,YAAa,GAIbtrB,EAR2B,CAC3BurB,UAAW,EACXltB,MAAO,EACPgM,OAAQ,EACRihB,YAAa,I2B83CIE,GAAA2a,EAAava,EAAQ0N,EAAS3J,WAC3C,MAAMyW,E3B73Ca,CACvBhrC,EAP2B,CAC3BmwB,UAAW,EACXltB,MAAO,EACPgM,OAAQ,EACRihB,YAAa,GAIbtrB,EAR2B,CAC3BurB,UAAW,EACXltB,MAAO,EACPgM,OAAQ,EACRihB,YAAa,I2Bg4CLwW,EACAtW,GAAa4a,EAAahgB,EAAKgb,eAAe6E,GAAgB,GAAO3M,EAAS2H,aAGjEzV,GAAA4a,EAAaxa,EAAQ0N,EAAS3J,WAEzC,MAAAwD,GAAoBkF,GAAY8N,GACtC,IAAI/H,GAA2B,EAC3B,IAAChY,EAAKgT,WAAY,CACZ,MAAAuI,EAAiBvb,EAAK4b,6BAKxB,GAAAL,IAAmBA,EAAevI,WAAY,CAC9C,MAAQE,SAAU+M,EAAgBza,OAAQ0a,GAAiB3E,EAC3D,GAAI0E,GAAkBC,EAAc,CAChC,MAAMC,E3B14CD,CACrBnrC,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2B44CrBwxB,GAAqB0a,EAAkBjN,EAAS3J,UAAW0W,EAAe1W,WAC1E,MAAMwT,E3B54CD,CACrB/nC,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,I2B84CAwxB,GAAAsX,EAAgBvX,EAAQ0a,EAAa3W,WACrD6I,GAAiB+N,EAAkBpD,KACT/E,GAAA,GAE3BuD,EAAe51B,QAAQgzB,aACvB3Y,EAAKmY,eAAiB4E,EACtB/c,EAAK6b,qBAAuBsE,EAC5BngB,EAAKub,eAAiBA,EAE9C,CACA,CACA,CACQvb,EAAKsX,gBAAgB,YAAa,CAC9B9R,OAAAA,EACA0N,WACAjhC,MAAO+tC,EACPD,cACAhT,mBACAiL,4BAEZ,MAAA,GACahY,EAAK0P,SAAU,CACd,MAAA/O,eAAEA,GAAmBX,EAAKra,QAChCgb,GAAkBA,GAC1B,CAMIX,EAAKra,QAAQ1U,gBAAa,CAC9B,CACA,SAAS0lC,GAAoB3W,GAIrBqU,IACQJ,GAAAC,aAEPlU,EAAKpD,SAQLoD,EAAK+b,iBACD/b,EAAA0V,kBAAoB1V,EAAKpD,OAAO8Y,mBAOpC1V,EAAA2V,0BAA4B3V,EAAK2V,wBAA0B14B,QAAQ+iB,EAAK0V,mBACzE1V,EAAKpD,OAAO8Y,mBACZ1V,EAAKpD,OAAO+Y,0BAChB3V,EAAK4V,mBAAqB5V,EAAK4V,iBAAmB5V,EAAKpD,OAAOgZ,kBAClE,CACA,SAASkB,GAAgB9W,GACrBA,EAAK0V,kBACD1V,EAAK2V,wBACD3V,EAAK4V,kBACD,CAChB,CACA,SAAS+D,GAAc3Z,GACnBA,EAAK2Z,eACT,CACA,SAASJ,GAAkBvZ,GACvBA,EAAKuZ,mBACT,CACA,SAASC,GAAmBxZ,GACxBA,EAAKqT,eAAgB,CACzB,CACA,SAASoG,GAAoBzZ,GACnB,MAAA9wB,cAAEA,GAAkB8wB,EAAKra,QAC3BzW,GAAiBA,EAAcQ,WAAW0wC,uBAC1ClxC,EAAc2oB,OAAO,uBAEzBmI,EAAKuV,gBACT,CACA,SAASuC,GAAgB9X,GACrBA,EAAK8X,kBACL9X,EAAKqb,YAAcrb,EAAKmY,eAAiBnY,EAAK9b,YAAS,EACvD8b,EAAK0V,mBAAoB,CAC7B,CACA,SAASkB,GAAmB5W,GACxBA,EAAK4W,oBACT,CACA,SAASC,GAAe7W,GACpBA,EAAK6W,gBACT,CACA,SAASqC,GAAqBlZ,GAC1BA,EAAKkZ,sBACT,CACA,SAASU,GAAoBtK,GACzBA,EAAMoE,oBACV,CACA,SAAS4J,GAAal+B,EAAQnN,EAAOtX,GACjCykB,EAAO+lB,UAAYlY,GAAUhb,EAAMkzB,UAAW,EAAGxqC,GACjDykB,EAAOnH,MAAQgV,GAAUhb,EAAMgG,MAAO,EAAGtd,GACzCykB,EAAO6E,OAAShS,EAAMgS,OACtB7E,EAAO8lB,YAAcjzB,EAAMizB,WAC/B,CACA,SAASqY,GAAQn+B,EAAQtE,EAAMwM,EAAI3sB,GAC/BykB,EAAOlL,IAAM+Y,GAAUnS,EAAK5G,IAAKoT,EAAGpT,IAAKvZ,GACzCykB,EAAOnL,IAAMgZ,GAAUnS,EAAK7G,IAAKqT,EAAGrT,IAAKtZ,EAC7C,CAKA,SAASwiD,GAAoBnd,GACzB,OAAQA,EAAKmT,sBAAwD,IAArCnT,EAAKmT,gBAAgBsK,WACzD,CACA,MAAMpF,GAA0B,CAC5B7nC,SAAU,IACVC,KAAM,CAAC,GAAK,EAAG,GAAK,IAElB4vC,GAAqBn6C,GAAgC,oBAAdo6C,WACzCA,UAAUC,WACVD,UAAUC,UAAUx+C,cAAc4B,SAASuC,GAMzCs6C,GAAaH,GAAkB,kBAAoBA,GAAkB,WACrEvvC,KAAK8L,MACLnL,GACN,SAASmpC,GAAU5V,GAEVA,EAAA9wB,IAAMssC,GAAWxb,EAAK9wB,KACtB8wB,EAAA/wB,IAAMusC,GAAWxb,EAAK/wB,IAC/B,CAKA,SAASiqC,GAA0BC,EAAejL,EAAU1N,GACxD,MAA0B,aAAlB2Y,GACe,oBAAlBA,I7B3hDOzgD,E6B4hDI20C,GAAYa,G7B5hDThvB,E6B4hDoBmuB,GAAY7M,G7B5hDxBib,E6B4hDiC,K7B3hDrD3vC,KAAKuE,IAAI3X,EAAQwmB,IAAWu8B,IADvC,IAAgB/iD,EAAOwmB,EAAQu8B,C6B6hD/B,CACA,SAAS3F,GAAuB9a,GACxBn3B,IAAAA,EACG,OAAAm3B,IAASA,EAAKjW,OAAgC,QAAtBlhB,EAAKm3B,EAAKkL,cAA2B,IAAPriC,OAAgB,EAASA,EAAGuxC,QAC7F,CKziDA,MAAMsG,GAAyBxL,GAAqB,CAChDC,qBAAsB,CAACt6C,EAAKg9B,IAAW2J,GAAY3mC,EAAK,SAAUg9B,GAClEwd,cAAe,KAAO,CAClBrgC,EAAGrN,SAASg5C,gBAAgBC,YAAcj5C,SAASk5C,KAAKD,WACxDhnC,EAAGjS,SAASg5C,gBAAgBG,WAAan5C,SAASk5C,KAAKC,YAE3DxL,kBAAmB,KAAM,ICNvBtK,GAAqB,CACvBlvC,aAAS,GAEPilD,GAAqB7L,GAAqB,CAC5CG,cAAgB/sC,IAAc,CAC1B0M,EAAG1M,EAASs4C,WACZhnC,EAAGtR,EAASw4C,YAEhB1L,cAAe,KACP,IAACpK,GAAmBlvC,QAAS,CAC7B,MAAMklD,EAAe,IAAIN,GAAuB,IAChDM,EAAa1gB,MAAM54B,QACnBs5C,EAAahS,WAAW,CAAEkL,cAAc,IACxClP,GAAmBlvC,QAAUklD,CACzC,CACQ,OAAOhW,GAAmBlvC,OAAA,EAE9By5C,eAAgB,CAACjtC,EAAU5K,KACvB4K,EAASf,MAAMwQ,eAAsB,IAAVra,EAAsBA,EAAQ,MAAA,EAE7D43C,kBAAoBhtC,GAAa2U,QAAuD,UAA/CvV,OAAO8P,iBAAiBlP,GAAU24C,YClBzExc,GAAO,CACTyc,IAAK,CACDnhB,Q1BKR,cAAyBA,GACrB,WAAAjjC,GACIiM,SAASmD,WACTlE,KAAKm5C,0BAA4B1vC,EACzC,CACI,aAAA2vC,CAAcC,GACVr5C,KAAKs5C,QAAU,IAAIxf,GAAWuf,EAAkBr5C,KAAKu5C,oBAAqB,CACtEvf,mBAAoBh6B,KAAKg4B,KAAK+J,wBAC9B9H,cAAe8F,GAAiB//B,KAAKg4B,OAEjD,CACI,iBAAAuhB,GACU,MAAAC,kBAAEA,aAAmBC,EAAYC,MAAAA,EAAAC,SAAOA,GAAa35C,KAAKg4B,KAAKtwB,WAC9D,MAAA,CACHg0B,eAAgBsJ,GAAawU,GAC7Bze,QAASiK,GAAayU,GACtBze,OAAQ0e,EACRre,MAAO,CAACpC,EAAOsB,YACJv6B,KAAKs5C,QACRK,GACAxtC,GAAMN,YAAW,IAAM8tC,EAAS1gB,EAAOsB,IAC3D,EAGA,CACI,KAAAjC,GACSt4B,KAAAm5C,0BAA4Bvf,GAAgB55B,KAAKg4B,KAAKlkC,QAAS,eAAgBmlC,GAAUj5B,KAAKo5C,cAAcngB,IACzH,CACI,MAAAttB,GACI3L,KAAKs5C,SAAWt5C,KAAKs5C,QAAQ1d,eAAe57B,KAAKu5C,oBACzD,CACI,OAAA9gB,GACIz4B,KAAKm5C,4BACAn5C,KAAAs5C,SAAWt5C,KAAKs5C,QAAQle,KACrC,I0BrCIqB,KAAM,CACF1E,QCNR,cAA0BA,GACtB,WAAAjjC,CAAYkjC,GACRj3B,MAAMi3B,GACNh4B,KAAK45C,oBAAsBnwC,GAC3BzJ,KAAK27B,gBAAkBlyB,GAClBzJ,KAAA6uB,SAAW,IAAIuR,GAA0BpI,EACtD,CACI,KAAAM,GAGI,MAAMuhB,aAAEA,GAAiB75C,KAAKg4B,KAAKtwB,WAC/BmyC,IACA75C,KAAK45C,oBAAsBC,EAAaxhB,UAAUr4B,KAAK6uB,WAE3D7uB,KAAK27B,gBAAkB37B,KAAK6uB,SAAS2V,gBAAkB/6B,EAC/D,CACI,OAAAgvB,GACIz4B,KAAK45C,sBACL55C,KAAK27B,iBACb,GDZQme,eAAgBf,GAChBjR,mBENR,SAASiS,GAAc/hB,EAAMhC,GACnB,MAAAhF,EAAYgF,EAAW,eAAiB,eACxCgkB,EAAehkB,EAAW,eAAiB,aAajD,OAAO4D,GAAgB5B,EAAKlkC,QAASk9B,GAZjB,CAACiI,EAAOsB,KACpB,GAAsB,UAAtBtB,EAAMC,aAA2B0D,KACjC,OACE,MAAAhpC,EAAQokC,EAAKtwB,WACfswB,EAAK9E,gBAAkBt/B,EAAM8jC,YACxBM,EAAA9E,eAAekE,UAAU,aAAcpB,GAE1C,MAAAnrB,EAAWjX,EAAMomD,GACnBnvC,GACAsB,GAAMN,YAAW,IAAMhB,EAASouB,EAAOsB,IACnD,GAEiE,CACzDd,SAAUzB,EAAKtwB,WAAWsyC,IAElC,CCjBA,MAAMC,GAAgB,CAACrlB,EAAQ3vB,MACtBA,IAGI2vB,IAAW3vB,GAITg1C,GAAcrlB,EAAQ3vB,EAAMi1C,gBCL3C,SAASC,GAA0BzjD,EAAMk5B,GACrC,IAAKA,EACD,OACJ,MAAMwqB,EAAwB,IAAIC,aAAa,UAAY3jD,GACnDk5B,EAAAwqB,EAAuB/gB,GAAiB+gB,GACpD,CCVA,MAAME,OAAwBna,QAMxBoa,OAAgBpa,QAChBqa,GAAwBC,IAC1B,MAAM5vC,EAAWyvC,GAAkB3kD,IAAI8kD,EAAMv+B,QAC7CrR,GAAYA,EAAS4vC,EAAK,EAExBC,GAA4BplD,IAC9BA,EAAQuF,QAAQ2/C,GAAoB,EAqBxC,SAASG,GAAoB3rC,EAAS2O,EAAS9S,GACrC,MAAA+vC,EApBV,UAAkC74B,KAAEA,KAASpE,IACzC,MAAMk9B,EAAa94B,GAAQpiB,SAItB46C,GAAU9kD,IAAIolD,IACLN,GAAA/zC,IAAIq0C,EAAY,IAExB,MAAAC,EAAgBP,GAAU5kD,IAAIklD,GAC9BjoD,EAAMmoD,KAAKC,UAAUr9B,GAQ3B,OAHKm9B,EAAcloD,KACDkoD,EAAAloD,GAAO,IAAIqoD,qBAAqBP,GAA0B,CAAE34B,UAASpE,KAEhFm9B,EAAcloD,EACzB,CAEsCsoD,CAAyBv9B,GAG3D,OAFkB28B,GAAA9zC,IAAIwI,EAASnE,GAC/B+vC,EAA0BO,QAAQnsC,GAC3B,KACHsrC,GAAkBlvC,OAAO4D,GACzB4rC,EAA0BQ,UAAUpsC,EAAO,CAEnD,CC3CA,MAAMqsC,GAAiB,CACnBl5C,KAAM,EACNksB,IAAK,GCAT,MAAMitB,GAAoB,CACtBC,OAAQ,CACJxjB,QDAR,cAA4BA,GACxB,WAAAjjC,GACIiM,SAASmD,WACTlE,KAAKw7C,gBAAiB,EACtBx7C,KAAKy7C,UAAW,CACxB,CACI,aAAAC,GACI17C,KAAKy4B,UACL,MAAMkjB,SAAEA,EAAW,CAAE,GAAK37C,KAAKg4B,KAAKtwB,YAC9Bqa,KAAEA,EAAMhJ,OAAQ6iC,SAAYC,EAAS,OAAAC,KAAQA,GAASH,EACtDh+B,EAAU,CACZoE,KAAMA,EAAOA,EAAKjuB,aAAU,EAC5B8nD,aACAG,UAA6B,iBAAXF,EAAsBA,EAASR,GAAeQ,IA+BpE,OAAOlB,GAAoB36C,KAAKg4B,KAAKlkC,QAAS6pB,GA7BhB88B,IACpB,MAAAuB,eAAEA,GAAmBvB,EAI3B,GAAIz6C,KAAKy7C,WAAaO,EAClB,OAMJ,GALAh8C,KAAKy7C,SAAWO,EAKZF,IAASE,GAAkBh8C,KAAKw7C,eAChC,OAEKQ,IACLh8C,KAAKw7C,gBAAiB,GAEtBx7C,KAAKg4B,KAAK9E,gBACVlzB,KAAKg4B,KAAK9E,eAAekE,UAAU,cAAe4kB,GAMtD,MAAMC,gBAAEA,EAAiBC,gBAAAA,GAAoBl8C,KAAKg4B,KAAKtwB,WACjDmD,EAAWmxC,EAAiBC,EAAkBC,EACpDrxC,GAAYA,EAAS4vC,EAAK,GAGtC,CACI,KAAAniB,GACIt4B,KAAK07C,eACb,CACI,MAAA/vC,GACI,GAAoC,oBAAzBsvC,qBACP,OACJ,MAAMrnD,MAAEA,EAAA4kC,UAAOA,GAAcx4B,KAAKg4B,KACR,CAAC,SAAU,SAAU,QAAQ71B,KAO/D,UAAkCw5C,SAAEA,EAAW,KAAQA,SAAUQ,EAAe,IAAO,IACnF,OAAQzlD,GAASilD,EAASjlD,KAAUylD,EAAazlD,EACrD,CAToE0lD,CAAyBxoD,EAAO4kC,KAExFx4B,KAAK07C,eAEjB,CACI,OAAAjjB,GAAU,ICxDV4jB,IAAK,CACDtkB,QHMR,cAA2BA,GACvB,WAAAjjC,GACIiM,SAASmD,WACTlE,KAAKs8C,qBAAuB7yC,GAC5BzJ,KAAKu8C,mBAAqB9yC,GAC1BzJ,KAAKw8C,0BAA4B/yC,GAC5BzJ,KAAAy8C,kBAAoB,CAACtiB,EAAYuiB,KAClC,GAAI18C,KAAK28C,WACL,OACJ38C,KAAKu8C,qBACC,MAAA3oD,EAAQoM,KAAKg4B,KAAKtwB,WAiBlBk1C,EAA0BhjB,GAAgBl6B,OAAQ,aAhBhC,CAACm9C,EAAUC,KAC3B,IAAC98C,KAAK+8C,gBACN,OACJ,MAAMC,MAAEA,EAAOC,YAAAA,EAAAC,gBAAaA,GAAoBl9C,KAAKg4B,KAAKtwB,WAKpDkoB,EAAWstB,GACZjD,GAAcj6C,KAAKg4B,KAAKlkC,QAAS+oD,EAAS3gC,QAEzC8gC,EADAC,EAEFrtB,GACAzjB,GAAMR,QAAO,IAAMikB,EAAQitB,EAAUC,IACzD,GAEkG,CAClFrjB,UAAW7lC,EAAMopD,OAASppD,EAAmB,eAE3CupD,EAA8BvjB,GAAgBl6B,OAAQ,iBAAiB,CAAC09C,EAAaC,IAAer9C,KAAKs9C,YAAYF,EAAaC,IAAa,CACjJ5jB,UAAW7lC,EAAMqpD,aACbrpD,EAAuB,mBAE1BoM,KAAAu8C,mBAAqBx3B,GAAK63B,EAAyBO,GACnDn9C,KAAAu9C,WAAWpjB,EAAYuiB,EAAS,EAEzC18C,KAAKw9C,qBAAuB,KAClB,MAmBAC,EAAwBjkB,GAAYx5B,KAAKg4B,KAAKlkC,QAAS,WAnBtC4pD,IACf,GAAqB,UAArBA,EAAa9qD,KAAmBoN,KAAK28C,WACrC,OAWJ38C,KAAKu8C,qBACLv8C,KAAKu8C,mBAAqB/iB,GAAYx5B,KAAKg4B,KAAKlkC,QAAS,SAXpC6pD,IACM,UAAnBA,EAAW/qD,KAAoBoN,KAAK+8C,iBAEd5C,GAAA,MAAM,CAAClhB,EAAOsB,KACpC,MAAMyiB,MAAEA,GAAUh9C,KAAKg4B,KAAKtwB,WACxBs1C,GACA7wC,GAAMN,YAAW,IAAMmxC,EAAM/jB,EAAOsB,IAChE,GACqB,IAIqB4f,GAAA,QAAQ,CAAClhB,EAAOsB,KACjCv6B,KAAAu9C,WAAWtkB,EAAOsB,EAAI,GAC9B,IAQCqjB,EAAqBpkB,GAAYx5B,KAAKg4B,KAAKlkC,QAAS,QALvC,KACVkM,KAAK28C,YAEgBxC,GAAA,UAAU,CAACiD,EAAaC,IAAer9C,KAAKs9C,YAAYF,EAAaC,IAAW,IAGzGr9C,KAAAw8C,0BAA4Bz3B,GAAK04B,EAAuBG,EAAkB,CAE3F,CACI,UAAAL,CAAWtkB,EAAOsB,GACdv6B,KAAK28C,YAAa,EAClB,MAAMkB,WAAEA,EAAYlmB,SAAAA,GAAa33B,KAAKg4B,KAAKtwB,WAIvCiwB,GAAY33B,KAAKg4B,KAAK9E,gBACtBlzB,KAAKg4B,KAAK9E,eAAekE,UAAU,YAAY,GAE/CymB,GACA1xC,GAAMN,YAAW,IAAMgyC,EAAW5kB,EAAOsB,IAErD,CACI,aAAAwiB,GACI/8C,KAAKu8C,qBACLv8C,KAAK28C,YAAa,EAKlB,OAJc38C,KAAKg4B,KAAKtwB,WACdiwB,UAAY33B,KAAKg4B,KAAK9E,gBAC5BlzB,KAAKg4B,KAAK9E,eAAekE,UAAU,YAAY,IAE3CwF,IAChB,CACI,WAAA0gB,CAAYrkB,EAAOsB,GACX,IAACv6B,KAAK+8C,gBACN,OACJ,MAAME,YAAEA,GAAgBj9C,KAAKg4B,KAAKtwB,WAC9Bu1C,GACA9wC,GAAMN,YAAW,IAAMoxC,EAAYhkB,EAAOsB,IAEtD,CACI,KAAAjC,GACU,MAAA1kC,EAAQoM,KAAKg4B,KAAKtwB,WAClBo2C,EAAwBlkB,GAAgBhmC,EAAMspD,gBAAkBx9C,OAASM,KAAKg4B,KAAKlkC,QAAS,cAAekM,KAAKy8C,kBAAmB,CACrIhjB,UAAW7lC,EAAMiqD,YACbjqD,EAAsB,kBAExBmqD,EAAsBvkB,GAAYx5B,KAAKg4B,KAAKlkC,QAAS,QAASkM,KAAKw9C,sBACpEx9C,KAAAs8C,qBAAuBv3B,GAAK+4B,EAAuBC,EAChE,CACI,OAAAtlB,GACIz4B,KAAKs8C,uBACLt8C,KAAKu8C,qBACLv8C,KAAKw8C,2BACb,IGlHIwB,MAAO,CACHjmB,QCTR,cAA2BA,GACvB,WAAAjjC,GACIiM,SAASmD,WACTlE,KAAKg2B,UAAW,CACxB,CACI,OAAAioB,GACI,IAAIC,GAAiB,EAOjB,IACAA,EAAiBl+C,KAAKg4B,KAAKlkC,QAAQqqD,QAAQ,iBACvD,OACe7qD,GACc4qD,GAAA,CAC7B,CACaA,GAAmBl+C,KAAKg4B,KAAK9E,iBAElClzB,KAAKg4B,KAAK9E,eAAekE,UAAU,cAAc,GACjDp3B,KAAKg2B,UAAW,EACxB,CACI,MAAAooB,GACSp+C,KAAKg2B,UAAah2B,KAAKg4B,KAAK9E,iBAEjClzB,KAAKg4B,KAAK9E,eAAekE,UAAU,cAAc,GACjDp3B,KAAKg2B,UAAW,EACxB,CACI,KAAAsC,GACSt4B,KAAAy4B,QAAU1T,GAAKyU,GAAYx5B,KAAKg4B,KAAKlkC,QAAS,SAAS,IAAMkM,KAAKi+C,YAAYzkB,GAAYx5B,KAAKg4B,KAAKlkC,QAAS,QAAQ,IAAMkM,KAAKo+C,WAC7I,CACI,OAAA3lB,GAAU,IDtBV4lB,MAAO,CACHtmB,QLSR,cAA2BA,GACvB,KAAAO,GACSt4B,KAAAy4B,QAAU1T,GAAKg1B,GAAc/5C,KAAKg4B,MAAM,GAAO+hB,GAAc/5C,KAAKg4B,MAAM,GACrF,CACI,OAAAS,GAAU,KO1BR+E,GAAS,CACXA,OAAQ,CACJsc,eAAgBf,GAChBjR,mBCAFwW,GAAsB39C,EAAAA,cAAc,CACtCq5B,mBAAqBrnC,GAAMA,EAC3B4rD,UAAU,EACVC,cAAe,UCNbC,GAAgB99C,EAAaA,cAAC,ICH9B+9C,GAA8B,oBAAXh/C,OCGnBi/C,GAA4BD,GAAYE,EAAAA,gBAAkB3W,EAASA,UCAnE4W,GAAcl+C,EAAaA,cAAC,CAAEm+C,QAAQ,ICQ5C,SAASC,GAAiBj+C,EAAWk+C,EAAaprD,EAAOqrD,EAAqBC,GAC1E,IAAIr+C,EAAIgE,EACR,MAAQqC,cAAe0tB,GAAWmT,EAAAA,WAAW0W,IACvCU,EAAcpX,EAAUA,WAAC8W,IACzBjrB,EAAkBmU,EAAUA,WAAC9C,IAC7Bma,EAAsBrX,EAAAA,WAAWuW,IAAqBE,cACtDa,EAAmBC,EAAAA,SAIzBL,EAAsBA,GAAuBE,EAAYI,UACpDF,EAAiBvrD,SAAWmrD,IACZI,EAAAvrD,QAAUmrD,EAAoBn+C,EAAW,CACtDk+C,cACApqB,SACAhhC,QACAggC,kBACAmD,wBAAuBnD,IACW,IAA5BA,EAAgBiB,QAEtBuqB,yBAGR,MAAMl4C,EAAgBm4C,EAAiBvrD,QAKjC0rD,EAA2BzX,EAAUA,WAAC5C,KACxCj+B,GACCA,EAAci6B,aACf+d,GACwB,SAAvBh4C,EAAcvT,MAA0C,QAAvBuT,EAAcvT,MA2DxD,SAA8BuT,EAAetT,EAAOsrD,EAA2B3I,GACrE,MAAA7P,SAAEA,EAAUlJ,OAAAA,EAAQf,KAAAA,EAAM4F,gBAAAA,EAAA6P,aAAiBA,EAAcvB,WAAAA,GAAgB/8C,EAC/EsT,EAAci6B,WAAa,IAAI+d,EAA0Bh4C,EAAcksB,aAAcx/B,EAAM,8BACrF,EACA6rD,GAAyBv4C,EAAc0tB,SAC7C1tB,EAAci6B,WAAW6F,WAAW,CAChCN,WACAlJ,OAAAA,EACAsU,oBAAqB78B,QAAQwnB,IAAU4F,GAAmBvF,GAAYuF,GACtEn7B,gBAQAivC,cAAiC,iBAAX3Y,EAAsBA,EAAS,OACrD+Y,yBACArE,eACAvB,cAER,CAhFQzD,CAAqBmS,EAAiBvrD,QAASF,EAAOsrD,EAA2BM,GAE/E,MAAAvnB,EAAYqnB,EAAMA,QAAC,GACzBI,EAAAA,oBAAmB,KAKXx4C,GAAiB+wB,EAAUnkC,SACboT,EAAAyE,OAAO/X,EAAOggC,EACxC,IAMU,MAAA+rB,EAAoB/rD,EAAMw+B,IAC1BwtB,EAAeN,EAAAA,OAAOrqC,QAAQ0qC,MACY,QAAzC9+C,EAAKnB,OAAOmgD,+BAA4C,IAAPh/C,OAAgB,EAASA,EAAGrN,KAAKkM,OAAQigD,MAC9C,QAA7C96C,EAAKnF,OAAOstC,mCAAgD,IAAPnoC,OAAgB,EAASA,EAAGrR,KAAKkM,OAAQigD,KAqC7F,OApCPhB,IAA0B,KACjBz3C,IAEL+wB,EAAUnkC,SAAU,EACpB4L,OAAOogD,iBAAkB,EACzB54C,EAAc64C,iBACJ3Z,GAAAnlC,OAAOiG,EAAcjG,QAW3B2+C,EAAa9rD,SAAWoT,EAAcgsB,gBACtChsB,EAAcgsB,eAAesC,iBACzC,IAEIyS,EAAAA,WAAU,KACD/gC,KAEA04C,EAAa9rD,SAAWoT,EAAcgsB,gBACvChsB,EAAcgsB,eAAesC,iBAE7BoqB,EAAa9rD,UAEbupB,gBAAe,KACPxc,IAAAA,EAC0C,QAA7CA,EAAKnB,OAAOsgD,mCAAgD,IAAPn/C,GAAyBA,EAAGrN,KAAKkM,OAAQigD,EAAiB,IAEpHC,EAAa9rD,SAAU,GACnC,IAEWoT,CACX,CAwBA,SAASu4C,GAAyBv4C,GAC9B,GAAKA,EAEE,OAA0C,IAA1CA,EAAcyW,QAAQsiC,gBACvB/4C,EAAci6B,WACdse,GAAyBv4C,EAAc0tB,OACjD,CC5HA,SAASsrB,GAAalB,EAAa93C,EAAei5C,GAC9C,OAAOjY,EAAAA,aAAa5nC,IAChBA,GAAY0+C,EAAY1mB,OAAS0mB,EAAY1mB,MAAMh4B,GAC/C4G,IACI5G,EACA4G,EAAcoxB,MAAMh4B,GAGpB4G,EAAcuxB,WAGlB0nB,IAC2B,mBAAhBA,EACPA,EAAY7/C,GAEPw8B,GAAYqjB,KACjBA,EAAYrsD,QAAUwM,GAEtC,GAOI,CAAC4G,GACL,CC7BA,SAASytB,GAAsB/gC,GAC3B,OAAQ6S,GAAoB7S,EAAMm4B,UAC9BnkB,GAAazF,MAAMzL,GAASsQ,GAAepT,EAAM8C,KACzD,CACA,SAAS0pD,GAAcxsD,GACnB,OAAOqhB,QAAQ0f,GAAsB/gC,IAAUA,EAAM4T,SACzD,CCNA,SAAS64C,GAAuBzsD,GACtB,MAAAihC,QAAEA,UAAS9I,GCFrB,SAAgCn4B,EAAOiM,GAC/B,GAAA80B,GAAsB/gC,GAAQ,CACxB,MAAAihC,QAAEA,EAAS9I,QAAAA,GAAYn4B,EACtB,MAAA,CACHihC,SAAqB,IAAZA,GAAqB7tB,GAAe6tB,GACvCA,OACA,EACN9I,QAAS/kB,GAAe+kB,GAAWA,OAAU,EAEzD,CACI,OAAyB,IAAlBn4B,EAAM0sD,QAAoBzgD,EAAU,CAAE,CACjD,CDTiC0gD,CAAuB3sD,EAAOm0C,EAAAA,WAAW0W,KACtE,OAAO+B,WAAQ,KAAO,CAAE3rB,UAAS9I,aAAY,CAAC00B,GAA0B5rB,GAAU4rB,GAA0B10B,IAChH,CACA,SAAS00B,GAA0B3rB,GAC/B,OAAO3/B,MAAMC,QAAQ0/B,GAAQA,EAAK77B,KAAK,KAAO67B,CAClD,CEVA,MAAM4rB,GAAe,CACjB9zB,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJkL,KAAM,CAAC,QACP2E,KAAM,CAAC,OAAQ,gBACfuhB,MAAO,CAAC,cACRK,MAAO,CAAC,aAAc,eAAgB,cACtChC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCnD,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDqC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3C/d,OAAQ,CAAC,SAAU,aAEjBmjB,GAAqB,CAAE,EAC7B,IAAA,MAAW/tD,MAAO8tD,GACdC,GAAmB/tD,IAAO,CACtBguD,UAAYhtD,GAAU8sD,GAAa9tD,IAAKuP,MAAMzL,KAAW9C,EAAM8C,MCvBvE,MAAMmqD,GAAwB5uD,OAAOC,IAAI,yBCyBzC,SAAS4uD,IAA8BC,kBAAEA,EAAA9B,oBAAmBA,YAAqB+B,EAAWC,eAAAA,EAAAngD,UAAgBA,IACxGigD,GCxBJ,SAAsBG,GAClB,IAAA,MAAWtuD,KAAOsuD,EACdP,GAAmB/tD,GAAO,IACnB+tD,GAAmB/tD,MACnBsuD,EAAStuD,GAGxB,CDiByBuuD,CAAaJ,GAiC5B,MAAAK,EAA4BC,cAhCzB,SAAgBztD,EAAOusD,GAKxBrY,IAAAA,EACJ,MAAMwZ,EAAiB,IAChBvZ,EAAAA,WAAWuW,OACX1qD,EACH8yC,SAAU6a,GAAY3tD,KAEpB2qD,SAAEA,GAAa+C,EACfzhD,EAAUwgD,GAAuBzsD,GACjCorD,EAAciC,EAAertD,EAAO2qD,GACtC,IAACA,GAAYG,GAAW,CA6BJ8C,EAAAzZ,WAAA8W,IAAaC,OA3B3B,MAAA2C,EAyClB,SAAoC7tD,GAC1B,MAAE6oC,KAAAA,EAAMe,OAAAA,GAAWmjB,GACrB,IAAClkB,IAASe,EACV,MAAO,CAAC,EACZ,MAAMkkB,EAAW,IAAKjlB,KAASe,GACxB,MAAA,CACHsK,eAAgBrL,aAAmC,EAASA,EAAKmkB,UAAUhtD,MAAY4pC,aAAuC,EAASA,EAAOojB,UAAUhtD,IAClJ8tD,EAAS5Z,mBACT,EACNgS,eAAgB4H,EAAS5H,eAEjC,CApDqC6H,CAA2BL,GACpDxZ,EAAgB2Z,EAAiB3Z,cAOjCjoC,EAAQqH,cAAgB63C,GAAiBj+C,EAAWk+C,EAAasC,EAAgBrC,EAAqBwC,EAAiB3H,eAAc,CAMzI,OAAQ7lD,EAAAA,KAAKwqD,GAAcv9C,SAAU,CAAExL,MAAOmK,EAASsB,SAAU,CAAC2mC,GAAiBjoC,EAAQqH,cAAiBlT,MAAI8zC,EAAe,CAAE5gC,cAAerH,EAAQqH,iBAAkBo6C,IAAqB,KAAMN,EAAUlgD,EAAWlN,EAAOssD,GAAalB,EAAan/C,EAAQqH,cAAei5C,GAAcnB,EAAaT,EAAU1+C,EAAQqH,iBAAiB,IAI7U,OADPk6C,EAA0BP,IAAyB//C,EAC5CsgD,CACX,CACA,SAASG,IAAY7a,SAAEA,IACb,MAAAkb,EAAgB7Z,EAAAA,WAAW7C,IAAoBhN,GACrD,OAAO0pB,QAA8B,IAAblb,EAClBkb,EAAgB,IAAMlb,EACtBA,CACV,CEhEA,MAAMmb,GAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,GAAehhD,GACpB,MAKqB,iBAAdA,IAIHA,EAAUnF,SAAS,SAOvBkmD,GAAqB7nD,QAAQ8G,IAAa,GAItC,SAASuN,KAAKvN,GAItB,CC3BA,SAASihD,GAAW/yC,GAASzP,MAAEA,OAAOyiD,GAAQnL,EAAW1V,GAC9C9uC,OAAAw3B,OAAO7a,EAAQzP,MAAOA,EAAO4hC,GAAcA,EAAWyV,oBAAoBC,IAEjF,IAAA,MAAWjkD,KAAOovD,EACdhzC,EAAQzP,MAAM0iD,YAAYrvD,EAAKovD,EAAKpvD,GAE5C,CCHA,MAAMsvD,OAA0BztD,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS0tD,GAAUnzC,EAASozC,EAAaC,EAAYlhB,GACtC4gB,GAAA/yC,EAASozC,OAAa,EAAWjhB,GACjC,IAAA,MAAAvuC,KAAOwvD,EAAYE,MAC1BtzC,EAAQ9M,aAAcggD,GAAoBzsD,IAAI7C,GAA0BA,EAAnBu/B,GAAYv/B,GAAYwvD,EAAYE,MAAM1vD,GAEvG,CCNA,SAAS2vD,GAAoB3vD,GAAO4qC,OAAAA,EAAAA,SAAQkJ,IACxC,OAAQ5+B,GAAerS,IAAI7C,IACvBA,EAAIiW,WAAW,YACb20B,QAAuB,IAAbkJ,OACLP,GAAgBvzC,IAAgB,YAARA,EACvC,CCLA,SAAS4vD,GAA4B5uD,EAAO4kC,EAAWtxB,GAC/CrG,IAAAA,EACE,MAAAtB,MAAEA,GAAU3L,EACZ6uD,EAAY,CAAE,EACpB,IAAA,MAAW7vD,KAAO2M,GACV+yB,GAAc/yB,EAAM3M,KACnB4lC,EAAUj5B,OACP+yB,GAAckG,EAAUj5B,MAAM3M,KAClC2vD,GAAoB3vD,EAAKgB,SACgI,KAAnD,QAApGiN,EAAKqG,aAAqD,EAASA,EAAckM,SAASxgB,UAAyB,IAAPiO,OAAgB,EAASA,EAAGg2B,cAChI4rB,EAAA7vD,GAAO2M,EAAM3M,IAGxB,OAAA6vD,CACX,CCbA,SAASD,GAA4B5uD,EAAO4kC,EAAWtxB,GACnD,MAAMu7C,EAAYC,GAA8B9uD,EAAO4kC,EAAWtxB,GAClE,IAAA,MAAWtU,KAAOgB,EACV,GAAA0+B,GAAc1+B,EAAMhB,KACpB0/B,GAAckG,EAAU5lC,IAAO,CAIrB6vD,OAHQ56C,GAAmB7N,QAAQpH,GACvC,OAASA,EAAI+vD,OAAO,GAAG7e,cAAgBlxC,EAAIojB,UAAU,GACrDpjB,GACiBgB,EAAMhB,EACzC,CAEW,OAAA6vD,CACX,CCPA,SAASG,GAAYl+C,GACX,MAAA7R,EAAMysD,EAAMA,OAAC,MAInB,OAHoB,OAAhBzsD,EAAIiB,UACJjB,EAAIiB,QAAU4Q,KAEX7R,EAAIiB,OACf,CCIA,MAAM+uD,GAAsBvM,GAAW,CAAC1iD,EAAO2qD,KACrC,MAAA1+C,EAAUkoC,EAAUA,WAAC0W,IACrB7qB,EAAkBmU,EAAUA,WAAC9C,IAC7B6d,EAAO,IAbjB,UAAqBN,4BAAAA,EAAAA,kBAA6BO,UAAmBC,GAAYpvD,EAAOiM,EAAS+zB,GAC7F,MAAMnvB,EAAQ,CACV2uB,aAAc6vB,GAAiBrvD,EAAOiM,EAAS+zB,EAAiB4uB,GAChEJ,YAAaW,KAKV,OAHHC,IACAv+C,EAAM6zB,MAASh4B,GAAa0iD,EAAQpvD,EAAO0M,EAAUmE,IAElDA,CACX,CAIuBy+C,CAAU5M,EAAQ1iD,EAAOiM,EAAS+zB,GACrD,OAAO2qB,EAAWuE,IAASF,GAAYE,EAAI,EAE/C,SAASG,GAAiBrvD,EAAOiM,EAAS+zB,EAAiBuvB,GACvD,MAAMprD,EAAS,CAAE,EACXqrD,EAAeD,EAAmBvvD,EAAO,IAC/C,IAAA,MAAWhB,KAAOwwD,EACdrrD,EAAOnF,GAAOk5C,GAAmBsX,EAAaxwD,IAE9C,IAAAiiC,QAAEA,EAAS9I,QAAAA,GAAYn4B,EACrB,MAAAyvD,EAA0B1uB,GAAsB/gC,GAChD0vD,EAAkBlD,GAAcxsD,GAClCiM,GACAyjD,IACCD,IACiB,IAAlBzvD,EAAM0sD,eACU,IAAZzrB,IACAA,EAAUh1B,EAAQg1B,cACN,IAAZ9I,IACAA,EAAUlsB,EAAQksB,UAE1B,IAAIw3B,IAA4B3vB,IACE,IAA5BA,EAAgBiB,QAEtB0uB,EAA4BA,IAAyC,IAAZ1uB,EACnD,MAAA2uB,EAAeD,EAA4Bx3B,EAAU8I,EAC3D,GAAI2uB,GACwB,kBAAjBA,IACN/8C,GAAoB+8C,GAAe,CACpC,MAAMC,EAAOtuD,MAAMC,QAAQouD,GAAgBA,EAAe,CAACA,GAC3D,IAAA,IAASxuD,EAAI,EAAGA,EAAIyuD,EAAK1uD,OAAQC,IAAK,CAClC,MAAMua,EAAWnI,GAAwBxT,EAAO6vD,EAAKzuD,IACrD,GAAIua,EAAU,CACV,MAAMyjB,cAAEA,EAAA/pB,WAAeA,KAAeiT,GAAW3M,EACjD,IAAA,MAAW3c,KAAOspB,EAAQ,CAClB,IAAAmX,EAAcnX,EAAOtpB,GACrB,GAAAuC,MAAMC,QAAQi+B,GAAc,CAQ5BA,EAAcA,EAHAkwB,EACRlwB,EAAYt+B,OAAS,EACrB,EAE9B,CACwC,OAAhBs+B,IACAt7B,EAAOnF,GAAOygC,EAEtC,CACgB,IAAA,MAAWzgC,KAAOogC,EACPj7B,EAAAnF,GAAOogC,EAAcpgC,EAEhD,CACA,CACA,CACW,OAAAmF,CACX,CC/EA,MAAM2rD,GAAwB,KAAO,CACjCnkD,MAAO,CAAE,EACTwQ,UAAW,CAAE,EACb0nC,gBAAiB,CAAE,EACnBuK,KAAM,CAAE,ICFN2B,GAAuB,KAAO,CDDhCpkD,MAAO,CAAE,EACTwQ,UAAW,CAAE,EACb0nC,gBAAiB,CAAE,EACnBuK,KAAM,CAAE,ECARM,MAAO,CAAE,ICDPsB,GAAiB,CAACluD,EAAO/B,IACpBA,GAAyB,iBAAV+B,EAChB/B,EAAKoc,UAAUra,GACfA,ECFJmuD,GAAiB,CACnB72C,EAAG,aACH4E,EAAG,aACHuI,EAAG,aACHE,qBAAsB,eAEpBypC,GAAgBj8C,GAAmB9S,OCJzC,SAASgvD,GAAgBt/C,EAAO2uB,EAAciR,GAC1C,MAAM9kC,MAAEA,EAAAyiD,KAAOA,EAAMvK,gBAAAA,GAAoBhzC,EAEzC,IAAIi6B,GAAe,EACfslB,GAAqB,EAOzB,IAAA,MAAWpxD,KAAOwgC,EAAc,CACtB,MAAA19B,EAAQ09B,EAAaxgC,GACvB,GAAAkV,GAAerS,IAAI7C,GAEnB8rC,GAAe,OAE3B,GACiBjwB,GAAkB7b,GACvBovD,EAAKpvD,GAAO8C,MAGX,CAED,MAAMuuD,EAAcL,GAAeluD,EAAOilB,GAAiB/nB,IACvDA,EAAIiW,WAAW,WAEMm7C,GAAA,EACrBvM,EAAgB7kD,GACZqxD,GAGJ1kD,EAAM3M,GAAOqxD,CAE7B,CACA,CAiBI,GAhBK7wB,EAAarjB,YACV2uB,GAAgB2F,EAChB9kC,EAAMwQ,UD3BlB,SAAwBqjB,EAAcrjB,EAAWs0B,GAE7C,IAAI6f,EAAkB,GAClBC,GAAqB,EAKzB,IAAA,IAASnvD,EAAI,EAAGA,EAAI8uD,GAAe9uD,IAAK,CAC9B,MAAApC,EAAMiV,GAAmB7S,GACzBU,EAAQ09B,EAAaxgC,GAC3B,QAAc,IAAV8C,EACA,SACJ,IAAI0uD,GAAiB,EAOjB,GALAA,EADiB,iBAAV1uD,EACUA,KAAW9C,EAAIiW,WAAW,SAAW,EAAI,GAGnB,IAAtB8G,WAAWja,IAE3B0uD,GAAkB/f,EAAmB,CACtC,MAAM4f,EAAcL,GAAeluD,EAAOilB,GAAiB/nB,IACtDwxD,IACoBD,GAAA,EAEFD,GAAA,GADGL,GAAejxD,IAAQA,KACNqxD,OAEvC5f,IACAt0B,EAAUnd,GAAOqxD,EAEjC,CACA,CAUW,OATPC,EAAkBA,EAAgBr1C,OAG9Bw1B,EACA6f,EAAkB7f,EAAkBt0B,EAAWo0C,EAAqB,GAAKD,GAEpEC,IACaD,EAAA,QAEfA,CACX,CCf8BG,CAAejxB,EAAc3uB,EAAMsL,UAAWs0B,GAE3D9kC,EAAMwQ,YAKXxQ,EAAMwQ,UAAY,SAOtBi0C,EAAoB,CACpB,MAAMzpC,QAAEA,EAAU,MAAAC,QAAOA,EAAU,MAAOC,QAAAA,EAAU,GAAOg9B,EAC3Dl4C,EAAMk4C,gBAAkB,GAAGl9B,KAAWC,KAAWC,GACzD,CACA,CC5DA,SAAS2pB,GAAWnoB,EAAQ+L,EAAQ3yB,GACzB,MAAkB,iBAAX4mB,EACRA,EACA1L,GAAGR,UAAUiY,EAAS3yB,EAAO4mB,EACvC,CCJA,MAAMqoC,GAAW,CACbt8B,OAAQ,oBACRu8B,MAAO,oBAELC,GAAY,CACdx8B,OAAQ,mBACRu8B,MAAO,mBCDX,SAASE,GAAchgD,GAAOigD,MAAEA,EAAAC,MAAOA,EAAAC,UAAOA,EAAArqC,QAAWA,EAAAC,QAASA,EAAAqqC,WAASA,EAAAC,YAAYA,EAAc,EAAAC,WAAGA,EAAa,KAElHjhC,GAAUkhC,EAAU3gB,GAMnB,GALgB0f,GAAAt/C,EAAOqf,EAAQugB,GAK3B2gB,EAIA,YAHIvgD,EAAMlF,MAAM0lD,UACNxgD,EAAA69C,MAAM2C,QAAUxgD,EAAMlF,MAAM0lD,UAI1CxgD,EAAM69C,MAAQ79C,EAAMlF,MACpBkF,EAAMlF,MAAQ,CAAE,EAChB,MAAM+iD,MAAEA,EAAA/iD,MAAOA,EAAO2lD,WAAAA,GAAezgD,EAKjC69C,EAAMvyC,YACFm1C,IACA3lD,EAAMwQ,UAAYuyC,EAAMvyC,kBACrBuyC,EAAMvyC,WAGbm1C,SACa,IAAZ3qC,QAAqC,IAAZC,GAAyBjb,EAAMwQ,aACnDxQ,EAAAk4C,gBFzBd,SAAgCyN,EAAY3qC,EAASC,GAG1C,MAAA,GAFW4pB,GAAW7pB,EAAS2qC,EAAWl4C,EAAGk4C,EAAW1zC,UAC7C4yB,GAAW5pB,EAAS0qC,EAAWtzC,EAAGszC,EAAWvzC,SAEnE,CEqBgCwzC,CAAuBD,OAAwB,IAAZ3qC,EAAwBA,EAAU,QAAiB,IAAZC,EAAwBA,EAAU,UAG1H,IAAVkqC,IACApC,EAAMt1C,EAAI03C,QACA,IAAVC,IACArC,EAAM1wC,EAAI+yC,QACI,IAAdC,IACAtC,EAAMryC,MAAQ20C,QAEC,IAAfC,GD7BR,SAAsBvC,EAAOvtD,EAAQqwD,EAAU,EAAGp9B,EAAS,EAAGq9B,GAAc,GAExE/C,EAAMuC,WAAa,EAGb,MAAA5vD,EAAOowD,EAAcf,GAAWE,GAEtClC,EAAMrtD,EAAK+yB,QAAUzX,GAAGR,WAAWiY,GAE7B,MAAA68B,EAAat0C,GAAGR,UAAUhb,GAC1B+vD,EAAcv0C,GAAGR,UAAUq1C,GACjC9C,EAAMrtD,EAAKsvD,OAAS,GAAGM,KAAcC,GACzC,CCkBQQ,CAAahD,EAAOuC,EAAYC,EAAaC,GAAY,EAEjE,CCjDA,MAAMC,GAAYnrD,GAAuB,iBAARA,GAA0C,QAAtBA,EAAIE,cCQnDwrD,GAAkB,CACpBtE,eAAgB4B,GAAmB,CAC/BL,+BACAO,kBAAmBY,GACnBX,QAAS,CAACpvD,EAAO0M,GAAY8hD,cAAahvB,mBACtCjnB,GAAMV,MAAK,KACH,IACY22C,EAAA8C,WAEJ,mBADG5kD,EAASklD,QAEVllD,EAASklD,UACTllD,EAASw/B,uBACvC,OACuBxsC,GAEH8uD,EAAY8C,WAAa,CACrBl4C,EAAG,EACH4E,EAAG,EACHJ,MAAO,EACPG,OAAQ,EAEhC,KAEYxF,GAAMlL,QAAO,KACTwjD,GAAcrC,EAAahvB,EAAc4xB,GAAS1kD,EAASnG,SAAUvG,EAAMywC,mBAC3E8d,GAAU7hD,EAAU8hD,EAAW,GAClC,KC9BPqD,GAAmB,CACrBxE,eAAgB4B,GAAmB,CACvCL,4BAAQA,GACAO,kBAAmBW,MCD3B,SAASgC,GAAkBxpC,EAAQrmB,EAAQjC,GACvC,IAAA,MAAWhB,KAAOiD,EACTy8B,GAAcz8B,EAAOjD,KAAU2vD,GAAoB3vD,EAAKgB,KAClDsoB,EAAAtpB,GAAOiD,EAAOjD,GAGjC,CAQA,SAAS+yD,GAAS/xD,EAAOorD,GACf,MACAz/C,EAAQ,CAAE,EAMT,OAFWmmD,GAAAnmD,EALA3L,EAAM2L,OAAS,CAAE,EAKC3L,GACpCvB,OAAOw3B,OAAOtqB,EAdlB,UAAgC8kC,kBAAEA,GAAqB2a,GAC5CwB,OAAAA,EAAOA,SAAC,KACX,MAAM/7C,EXfuB,CACjClF,MAAO,CAAE,EACTwQ,UAAW,CAAE,EACb0nC,gBAAiB,CAAE,EACnBuK,KAAM,CAAE,GWaJ,OADgB+B,GAAAt/C,EAAOu6C,EAAa3a,GAC7BhyC,OAAOw3B,OAAO,CAAE,EAAEplB,EAAMu9C,KAAMv9C,EAAMlF,MAAK,GACjD,CAACy/C,GACR,CAQyB4G,CAAuBhyD,EAAOorD,IAC5Cz/C,CACX,CACA,SAASsmD,GAAajyD,EAAOorD,GAEzB,MAAM8G,EAAY,CAAE,EACdvmD,EAAQomD,GAAS/xD,EAAOorD,GAoBvB,OAnBHprD,EAAM6oC,OAA+B,IAAvB7oC,EAAM8wC,eAEpBohB,EAAUC,WAAY,EAEtBxmD,EAAMymD,WACFzmD,EAAM0mD,iBACF1mD,EAAM2mD,mBACF,OAEN3mD,EAAA4mD,aACa,IAAfvyD,EAAM6oC,KACA,OACA,QAAsB,MAAf7oC,EAAM6oC,KAAe,IAAM,WAEzB,IAAnB7oC,EAAMwyD,WACLxyD,EAAMopD,OAASppD,EAAMiqD,YAAcjqD,EAAM+jC,YAC1CmuB,EAAUM,SAAW,GAEzBN,EAAUvmD,MAAQA,EACXumD,CACX,CChDA,MAAMO,OAAuB5xD,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAAS6xD,GAAkB1zD,GACvB,OAAQA,EAAIiW,WAAW,UAClBjW,EAAIiW,WAAW,SAAmB,cAARjW,GAC3BA,EAAIiW,WAAW,WACfjW,EAAIiW,WAAW,UACfjW,EAAIiW,WAAW,UACfjW,EAAIiW,WAAW,aACfw9C,GAAiB5wD,IAAI7C,EAC7B,CCpDA,IAAI2zD,GAAiB3zD,IAAS0zD,GAAkB1zD,GAoBhD,KAnBiC4zD,GAyBLC,QAAQ,0BAA0B3qD,WArB1CyqD,GAAC3zD,GAAQA,EAAIiW,WAAW,OAASy9C,GAAkB1zD,GAAO4zD,GAAY5zD,GAsB1F,CAAA,MACOiO,IAEP,CA7BA,IAAiC2lD,GCGjC,SAASE,GAAY9yD,EAAOorD,EAAa2H,EAAW7lD,GAC1C,MAAA8lD,EAAcpG,EAAAA,SAAQ,KACxB,MAAM/7C,EbNsB,CDDhClF,MAAO,CAAE,EACTwQ,UAAW,CAAE,EACb0nC,gBAAiB,CAAE,EACnBuK,KAAM,CAAE,ECARM,MAAO,CAAE,GaME,OADPmC,GAAchgD,EAAOu6C,EAAagG,GAASlkD,GAAYlN,EAAMywC,mBACtD,IACA5/B,EAAM69C,MACT/iD,MAAO,IAAKkF,EAAMlF,OACrB,GACF,CAACy/C,IACJ,GAAIprD,EAAM2L,MAAO,CACb,MAAMsnD,EAAY,CAAE,EACFnB,GAAAmB,EAAWjzD,EAAM2L,MAAO3L,GAC1CgzD,EAAYrnD,MAAQ,IAAKsnD,KAAcD,EAAYrnD,MAC3D,CACW,OAAAqnD,CACX,CCdA,SAASE,GAAgBC,GAAqB,GAsBnC,MArBW,CAACjmD,EAAWlN,EAAOf,GAAOugC,gBAAgBmrB,KACxD,MAGMqI,GAHiB9E,GAAehhD,GAChC4lD,GACAb,IAC6BjyD,EAAOw/B,EAAcmrB,EAAUz9C,GAC5DkmD,EFoBd,SAAqBpzD,EAAOqzD,EAAOF,GAC/B,MAAMC,EAAgB,CAAE,EACxB,IAAA,MAAWp0D,KAAOgB,EAQF,WAARhB,GAA4C,iBAAjBgB,EAAMmE,SAEjCwuD,GAAc3zD,KACU,IAAvBm0D,GAA+BT,GAAkB1zD,KAChDq0D,IAAUX,GAAkB1zD,IAE7BgB,EAAiB,WACdhB,EAAIiW,WAAW,aACLm+C,EAAAp0D,GACVgB,EAAMhB,IAGX,OAAAo0D,CACX,CE3C8BE,CAAYtzD,EAA4B,iBAAdkN,EAAwBimD,GAClEI,EAAermD,IAAcsmD,EAAAA,SAC7B,IAAKJ,KAAkBJ,EAAa/zD,OACpC,CAAE,GAMFsO,SAAEA,GAAavN,EACfyzD,EAAmB7G,EAAAA,SAAQ,IAAOluB,GAAcnxB,GAAYA,EAASxL,MAAQwL,GAAW,CAACA,IACxF7D,OAAAA,EAAAA,cAAcwD,EAAW,IACzBqmD,EACHhmD,SAAUkmD,GACb,CAGT,CCxBA,SAASC,GAA6BvG,EAAmB9B,GAC9C,OAAA,SAA+Bn+C,GAAWimD,mBAAEA,GAAuB,CAAEA,oBAAoB,IAW5F,OAAOjG,GAPQ,IAHIgB,GAAehhD,GAC5BykD,GACAE,GAGF1E,oBACAC,UAAW8F,GAAgBC,GAC3B9H,sBACAn+C,aAGP,CACL,CCnBA,MAAMymD,GAAuB,CAAEzzD,QAAS,MAClC0zD,GAA2B,CAAE1zD,SAAS,GCF5C,MAAM2zD,OAAyBtnB,QCQzBunB,GAAa,IAAIp1C,GAAqBgE,GAAOgB,ICc7CqwC,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GAQF,2BAAApF,CAA4BqF,EAAQC,EAAYC,GAC5C,MAAO,CAAC,CAAA,CAEZ,WAAAjzD,EAAY8/B,OAAEA,EAAAhhC,MAAQA,EAAOggC,gBAAAA,EAAAwrB,oBAAiBA,EAAqBroB,sBAAAA,EAAAioB,YAAuBA,GAAgBrhC,EAAU,IAKhH3d,KAAKlM,QAAU,KAIVkM,KAAAmB,aAAe1M,IAIpBuL,KAAKogD,eAAgB,EACrBpgD,KAAK20B,uBAAwB,EAQ7B30B,KAAKwzB,mBAAqB,KAMrBxzB,KAAAjI,WAAaxD,IAClByL,KAAK8T,iBAAmBA,GAIxB9T,KAAKkhD,SAAW,CAAC,EAKZlhD,KAAAgoD,uBAAyBzzD,IAM9ByL,KAAKioD,iBAAmB,CAAC,EAIzBjoD,KAAKmwB,OAAS,CAAC,EAMfnwB,KAAKkoD,uBAAyB,CAAC,EAC/BloD,KAAKmoD,aAAe,IAAMnoD,KAAK6vB,OAAO,SAAU7vB,KAAKozB,cACrDpzB,KAAKiB,OAAS,KACLjB,KAAKlM,UAEVkM,KAAKooD,eACApoD,KAAAqoD,eAAeroD,KAAKlM,QAASkM,KAAKoiD,YAAapiD,KAAKpM,MAAM2L,MAAOS,KAAKmhC,YAAU,EAEzFnhC,KAAKsoD,kBAAoB,EACzBtoD,KAAKwqC,eAAiB,KACZx+B,MAAAA,EAAMmR,GAAKnR,MACbhM,KAAKsoD,kBAAoBt8C,IACzBhM,KAAKsoD,kBAAoBt8C,EACzBG,GAAMlL,OAAOjB,KAAKiB,QAAQ,GAAO,GAAI,EAGvC,MAAAmyB,aAAEA,EAAcgvB,YAAAA,GAAgBpD,EACtCh/C,KAAKozB,aAAeA,EACfpzB,KAAAuoD,WAAa,IAAKn1B,GACvBpzB,KAAKwoD,cAAgB50D,EAAMihC,QAAU,IAAKzB,GAAiB,CAAC,EAC5DpzB,KAAKoiD,YAAcA,EACnBpiD,KAAK40B,OAASA,EACd50B,KAAKpM,MAAQA,EACboM,KAAK4zB,gBAAkBA,EACvB5zB,KAAKiP,MAAQ2lB,EAASA,EAAO3lB,MAAQ,EAAI,EACzCjP,KAAKo/C,oBAAsBA,EAC3Bp/C,KAAK2d,QAAUA,EACV3d,KAAA+2B,sBAAwB9hB,QAAQ8hB,GAChC/2B,KAAA20B,sBAAwBA,GAAsB/gC,GAC9CoM,KAAAogD,cAAgBA,GAAcxsD,GAC/BoM,KAAKogD,gBACApgD,KAAA+zB,oBAAsBt/B,KAE/BuL,KAAKk2B,uBAAyBjhB,QAAQ2f,GAAUA,EAAO9gC,SAWjD,MAAA0+B,WAAEA,KAAei2B,GAAwBzoD,KAAKwiD,4BAA4B5uD,EAAO,CAAC,EAAGoM,MAC3F,IAAA,MAAWpN,KAAO61D,EAAqB,CAC7B,MAAA/yD,EAAQ+yD,EAAoB71D,QACR,IAAtBwgC,EAAaxgC,IAAsB0/B,GAAc58B,IACjDA,EAAM8Q,IAAI4sB,EAAaxgC,IAAM,EACjC,CACJ,CAEJ,KAAA0lC,CAAMh4B,GACFN,KAAKlM,QAAUwM,EACImnD,GAAAjhD,IAAIlG,EAAUN,MAC7BA,KAAKmhC,aAAenhC,KAAKmhC,WAAW7gC,UAC/BN,KAAAmhC,WAAW7I,MAAMh4B,GAEtBN,KAAK40B,QAAU50B,KAAKogD,gBAAkBpgD,KAAK20B,wBAC3C30B,KAAK0oD,sBAAwB1oD,KAAK40B,OAAO+zB,gBAAgB3oD,OAExDA,KAAAjI,OAAO8C,SAAQ,CAACnF,EAAO9C,IAAQoN,KAAK4oD,kBAAkBh2D,EAAK8C,KAC3D8xD,GAAyB1zD,SC/JtC,WAEI,GADA0zD,GAAyB1zD,SAAU,EAC9B4qD,GAEL,GAAIh/C,OAAOmpD,WAAY,CACb,MAAAC,EAAmBppD,OAAOmpD,WAAW,4BACrCE,EAA8B,IAAOxB,GAAqBzzD,QAAUg1D,EAAiB3K,QAC3F2K,EAAiBE,YAAYD,GACAA,GACrC,MAEQxB,GAAqBzzD,SAAU,CAEvC,CDmJqCm1D,GAExBjpD,KAAAwzB,mBAC4B,UAA7BxzB,KAAKo/C,sBAE8B,WAA7Bp/C,KAAKo/C,qBAEDmI,GAAqBzzD,SAI/BkM,KAAK40B,QACA50B,KAAA40B,OAAOzzB,SAASd,IAAIL,MAC7BA,KAAK2L,OAAO3L,KAAKpM,MAAOoM,KAAK4zB,gBAAe,CAEhD,OAAA6E,GACuBgvB,GAAAr8C,OAAOpL,KAAKlM,SAC1BkM,KAAAmhC,YAAcnhC,KAAKmhC,WAAW1I,UACnCrsB,GAAYpM,KAAKmoD,cACjB/7C,GAAYpM,KAAKiB,QACjBjB,KAAKgoD,mBAAmBntD,SAAS0F,GAAWA,MAC5CP,KAAKgoD,mBAAmBz8C,QACnBvL,KAAA0oD,uBAAyB1oD,KAAK0oD,wBACnC1oD,KAAK40B,QAAU50B,KAAK40B,OAAOzzB,SAASiK,OAAOpL,MAChC,IAAA,MAAApN,KAAOoN,KAAKmwB,OACdnwB,KAAAmwB,OAAOv9B,GAAK2Y,QAEV,IAAA,MAAA3Y,KAAOoN,KAAKkhD,SAAU,CACvB,MAAAgI,EAAUlpD,KAAKkhD,SAAStuD,GAC1Bs2D,IACAA,EAAQzwB,UACRywB,EAAQjxB,WAAY,EACxB,CAEJj4B,KAAKlM,QAAU,IAAA,CAEnB,iBAAA80D,CAAkBh2D,EAAK8C,GACfsK,KAAKgoD,mBAAmBvyD,IAAI7C,IACvBoN,KAAAgoD,mBAAmBryD,IAAI/C,EAAvBoN,GAEH,MAAAmpD,EAAmBrhD,GAAerS,IAAI7C,GACtCw2D,EAAiB1zD,EAAMq7B,GAAG,UAAWs4B,IAClCrpD,KAAAozB,aAAaxgC,GAAOy2D,EACzBrpD,KAAKpM,MAAMwqB,UAAYjS,GAAMP,UAAU5L,KAAKmoD,cACxCgB,GAAoBnpD,KAAKmhC,aACzBnhC,KAAKmhC,WAAWyM,kBAAmB,EAAA,IAGrC0b,EAAwB5zD,EAAMq7B,GAAG,gBAAiB/wB,KAAKwqC,gBACzD,IAAA+e,EACA7pD,OAAO8pD,wBACPD,EAAkB7pD,OAAO8pD,sBAAsBxpD,KAAMpN,EAAK8C,IAEzDsK,KAAAgoD,mBAAmBxhD,IAAI5T,GAAK,KACdw2D,IACOE,IAClBC,GACgBA,IAChB7zD,EAAMw3B,OACNx3B,EAAMozB,MAAK,GAClB,CAEL,gBAAA0L,CAAiBi1B,GAIT,OAACzpD,KAAKlM,SACLkM,KAAK0pD,0BACN1pD,KAAKrM,OAAS81D,EAAM91D,KAGjBqM,KAAK0pD,yBAAyB1pD,KAAKlM,QAAS21D,EAAM31D,SAF9C,CAEqD,CAEpE,cAAAisD,GACI,IAAIntD,EAAM,YACV,IAAKA,KAAO+tD,GAAoB,CACtB,MAAAgJ,EAAoBhJ,GAAmB/tD,GAC7C,IAAK+2D,EACD,SACJ,MAAM/I,UAAEA,EAAW7oB,QAAS6xB,GAAuBD,EAY/C,IARC3pD,KAAKkhD,SAAStuD,IACfg3D,GACAhJ,EAAU5gD,KAAKpM,SACfoM,KAAKkhD,SAAStuD,GAAO,IAAIg3D,EAAmB5pD,OAK5CA,KAAKkhD,SAAStuD,GAAM,CACd,MAAAs2D,EAAUlpD,KAAKkhD,SAAStuD,GAC1Bs2D,EAAQjxB,UACRixB,EAAQv9C,UAGRu9C,EAAQ5wB,QACR4wB,EAAQjxB,WAAY,EACxB,CACJ,CACJ,CAEJ,YAAAmwB,GACIpoD,KAAK6pD,MAAM7pD,KAAKoiD,YAAapiD,KAAKozB,aAAcpzB,KAAKpM,MAAK,CAO9D,kBAAA+oB,GACW,OAAA3c,KAAKlM,QACNkM,KAAK8pD,2BAA2B9pD,KAAKlM,QAASkM,KAAKpM,OxFzQxC,CACrBoZ,EAFsB,CAAEd,IAAK,EAAGD,IAAK,GAGrC2F,EAHsB,CAAE1F,IAAK,EAAGD,IAAK,GwF2QjB,CAEpB,cAAA89C,CAAen3D,GACJ,OAAAoN,KAAKozB,aAAaxgC,EAAG,CAEhC,cAAAg6C,CAAeh6C,EAAK8C,GACXsK,KAAAozB,aAAaxgC,GAAO8C,CAAA,CAM7B,MAAAiW,CAAO/X,EAAOggC,IACNhgC,EAAMywC,mBAAqBrkC,KAAKpM,MAAMywC,oBACtCrkC,KAAKwqC,iBAETxqC,KAAKw4B,UAAYx4B,KAAKpM,MACtBoM,KAAKpM,MAAQA,EACboM,KAAK64B,oBAAsB74B,KAAK4zB,gBAChC5zB,KAAK4zB,gBAAkBA,EAIvB,IAAA,IAAS5+B,EAAI,EAAGA,EAAI2yD,GAAkB5yD,OAAQC,IAAK,CACzC,MAAApC,EAAM+0D,GAAkB3yD,GAC1BgL,KAAKkoD,uBAAuBt1D,KACvBoN,KAAAkoD,uBAAuBt1D,YACrBoN,KAAKkoD,uBAAuBt1D,IAEvC,MACMo3D,EAAWp2D,EADK,KAAOhB,GAEzBo3D,IACAhqD,KAAKkoD,uBAAuBt1D,GAAOoN,KAAK+wB,GAAGn+B,EAAKo3D,GACpD,CAEChqD,KAAAioD,iBEpTb,SAAqCj5C,EAASzZ,EAAMuR,GAChD,IAAA,MAAWlU,KAAO2C,EAAM,CACd,MAAA00D,EAAY10D,EAAK3C,GACjBs3D,EAAYpjD,EAAKlU,GACnB,GAAA0/B,GAAc23B,GAKNj7C,EAAAkjB,SAASt/B,EAAKq3D,QAOtB,GAEK33B,GAAc43B,GAKXl7C,EAAAkjB,SAASt/B,EAAKqhB,GAAYg2C,EAAW,CAAE/8B,MAAOle,UAAU,GAE3Dk7C,IAAcD,EAMf,GAAAj7C,EAAQijB,SAASr/B,GAAM,CACjB,MAAAu3D,EAAgBn7C,EAAQoE,SAASxgB,IACP,IAA5Bu3D,EAActzB,UACdszB,EAActtC,KAAKotC,GAEbE,EAAcz5B,aACpBy5B,EAAc3jD,IAAIyjD,EACtB,KAEC,CACK,MAAAZ,EAAcr6C,EAAQ+6C,eAAen3D,GACnCoc,EAAAkjB,SAASt/B,EAAKqhB,QAA4B,IAAhBo1C,EAA4BA,EAAcY,EAAW,CAAE/8B,MAAOle,IAAU,CAElH,CAGJ,IAAA,MAAWpc,KAAOkU,OACI,IAAdvR,EAAK3C,IACLoc,EAAQo7C,YAAYx3D,GAErB,OAAA2C,CACX,CFgQgC80D,CAA4BrqD,KAAMA,KAAKwiD,4BAA4B5uD,EAAOoM,KAAKw4B,UAAWx4B,MAAOA,KAAKioD,kBAC1HjoD,KAAKsqD,wBACLtqD,KAAKsqD,wBACT,CAEJ,QAAA5iD,GACI,OAAO1H,KAAKpM,KAAA,CAKhB,UAAA22D,CAAW7zD,GACP,OAAOsJ,KAAKpM,MAAM4T,SAAWxH,KAAKpM,MAAM4T,SAAS9Q,QAAQ,CAAA,CAK7D,oBAAAgS,GACI,OAAO1I,KAAKpM,MAAMqV,UAAA,CAEtB,qBAAA84B,GACI,OAAO/hC,KAAKpM,MAAMomC,kBAAA,CAEtB,qBAAAwwB,GACW,OAAAxqD,KAAKogD,cACNpgD,KACAA,KAAK40B,OACD50B,KAAK40B,OAAO41B,6BACZ,CAAA,CAKd,eAAA7B,CAAgB1jD,GACN,MAAAwlD,EAAqBzqD,KAAKwqD,wBAChC,GAAIC,EAGA,OAFAA,EAAmB12B,iBACf02B,EAAmB12B,gBAAgB1zB,IAAI4E,GACpC,IAAMwlD,EAAmB12B,gBAAgB3oB,OAAOnG,EAC3D,CAKJ,QAAAitB,CAASt/B,EAAK8C,GAEV,MAAMy0D,EAAgBnqD,KAAKjI,OAAOpC,IAAI/C,GAClC8C,IAAUy0D,IACNA,GACAnqD,KAAKoqD,YAAYx3D,GAChBoN,KAAA4oD,kBAAkBh2D,EAAK8C,GACvBsK,KAAAjI,OAAOyO,IAAI5T,EAAK8C,GACrBsK,KAAKozB,aAAaxgC,GAAO8C,EAAMC,MACnC,CAKJ,WAAAy0D,CAAYx3D,GACHoN,KAAAjI,OAAOqT,OAAOxY,GACnB,MAAMq+B,EAAcjxB,KAAKgoD,mBAAmBryD,IAAI/C,GAC5Cq+B,IACYA,IACPjxB,KAAAgoD,mBAAmB58C,OAAOxY,WAE5BoN,KAAKozB,aAAaxgC,GACpBoN,KAAA0qD,2BAA2B93D,EAAKoN,KAAKoiD,YAAW,CAKzD,QAAAnwB,CAASr/B,GACE,OAAAoN,KAAKjI,OAAOtC,IAAI7C,EAAG,CAE9B,QAAAwgB,CAASxgB,EAAKilB,GACV,GAAI7X,KAAKpM,MAAMmE,QAAUiI,KAAKpM,MAAMmE,OAAOnF,GAChC,OAAAoN,KAAKpM,MAAMmE,OAAOnF,GAE7B,IAAI8C,EAAQsK,KAAKjI,OAAOpC,IAAI/C,GAKrB,YAJO,IAAV8C,QAAwC,IAAjBmiB,IACfniB,EAAAue,GAA6B,OAAjB4D,OAAwB,EAAYA,EAAc,CAAEqV,MAAOltB,OAC1EA,KAAAkyB,SAASt/B,EAAK8C,IAEhBA,CAAA,CAOX,SAAA6e,CAAU3hB,EAAKspB,GACPrb,IAAAA,EACJ,IAAInL,OAAmC,IAA3BsK,KAAKozB,aAAaxgC,IAAuBoN,KAAKlM,QAEI,QAAvD+M,EAAKb,KAAK2qD,uBAAuB3qD,KAAKpM,MAAOhB,UAAyB,IAAPiO,EAAgBA,EAAKb,KAAK4qD,sBAAsB5qD,KAAKlM,QAASlB,EAAKoN,KAAK2d,SADxI3d,KAAKozB,aAAaxgC,GDzYV,IAAC8T,ECsZf,OAXIhR,UACqB,iBAAVA,IACN4Y,GAAkB5Y,IAAU0Y,GAAkB1Y,IAE/CA,EAAQia,WAAWja,ID/YZgR,ECiZahR,GDjZPgyD,GAAWl1C,KAAKH,GAAc3L,KCiZb4Q,GAAQjJ,KAAK6N,KACnCxmB,EAAA8hB,GAAkB5kB,EAAKspB,KAE9Blc,KAAA6qD,cAAcj4D,EAAK0/B,GAAc58B,GAASA,EAAMC,MAAQD,IAE1D48B,GAAc58B,GAASA,EAAMC,MAAQD,CAAA,CAMhD,aAAAm1D,CAAcj4D,EAAK8C,GACVsK,KAAAuoD,WAAW31D,GAAO8C,CAAA,CAM3B,aAAAwhC,CAActkC,GACNiO,IAAAA,EACE,MAAAg0B,QAAEA,GAAY70B,KAAKpM,MACrB,IAAAk3D,EACJ,GAAuB,iBAAZj2B,GAA2C,iBAAZA,EAAsB,CAC5D,MAAMlB,EAAUvsB,GAAwBpH,KAAKpM,MAAOihC,EAAyC,QAA/Bh0B,EAAKb,KAAK4zB,uBAAoC,IAAP/yB,OAAgB,EAASA,EAAGyG,QAC7HqsB,IACAm3B,EAAmBn3B,EAAQ/gC,GAC/B,CAKA,GAAAiiC,QAAgC,IAArBi2B,EACJ,OAAAA,EAMX,MAAM5uC,EAASlc,KAAK2qD,uBAAuB3qD,KAAKpM,MAAOhB,GACvD,YAAe,IAAXspB,GAAyBoW,GAAcpW,QAMR,IAA5Blc,KAAKwoD,cAAc51D,SACD,IAArBk4D,OACE,EACA9qD,KAAKuoD,WAAW31D,GARXspB,CAQc,CAE7B,EAAA6U,CAAGC,EAAWnmB,GAIV,OAHK7K,KAAKmwB,OAAOa,KACbhxB,KAAKmwB,OAAOa,GAAa,IAAIrB,IAE1B3vB,KAAKmwB,OAAOa,GAAW3wB,IAAIwK,EAAQ,CAE9C,MAAAglB,CAAOmB,KAAcz6B,GACbyJ,KAAKmwB,OAAOa,IACZhxB,KAAKmwB,OAAOa,GAAWnB,UAAUt5B,EACrC,EGrdR,MAAMw0D,WAAyBnD,GAC3B,WAAA9yD,GACIiM,SAASmD,WACTlE,KAAK8T,iBAAmBgI,EAChC,CACI,wBAAA4tC,CAAyBx2D,EAAGE,GAMxB,OAAsC,EAA/BF,EAAE83D,wBAAwB53D,GAAS,GAAI,CACtD,CACI,sBAAAu3D,CAAuB/2D,EAAOhB,GAC1B,OAAOgB,EAAM2L,MACP3L,EAAM2L,MAAM3M,QACZ,CACd,CACI,0BAAA83D,CAA2B93D,GAAKovD,KAAEA,EAAAziD,MAAMA,WAC7ByiD,EAAKpvD,UACL2M,EAAM3M,EACrB,ECXA,MAAMq4D,WAA0BF,GAC5B,WAAAj2D,GACIiM,SAASmD,WACTlE,KAAKrM,KAAO,OACZqM,KAAKqoD,eAAiBtG,EAC9B,CACI,qBAAA6I,CAAsBtqD,EAAU1N,GACxB,GAAAkV,GAAerS,IAAI7C,GAAM,CACnB,MAAAs4D,EAAcvvC,GAAoB/oB,GACjC,OAAAs4D,GAAcA,EAAYpvD,SAAe,CAC5D,CACa,CACK,MAAAqvD,GAfQn8C,EAeyB1O,EAdxCZ,OAAO8P,iBAAiBR,IAejBtZ,GAAS+Y,GAAkB7b,GAC3Bu4D,EAAc17C,iBAAiB7c,GAC/Bu4D,EAAcv4D,KAAS,EAC7B,MAAwB,iBAAV8C,EAAqBA,EAAMmZ,OAASnZ,CAC9D,CApBA,IAA0BsZ,CAqB1B,CACI,0BAAA86C,CAA2BxpD,GAAU05B,mBAAEA,IAC5B,OAAArd,GAAmBrc,EAAU05B,EAC5C,CACI,KAAA6vB,CAAMzH,EAAahvB,EAAcx/B,GACbmwD,GAAA3B,EAAahvB,EAAcx/B,EAAMywC,kBACzD,CACI,2BAAAme,CAA4B5uD,EAAO4kC,EAAWtxB,GACnCs7C,OAAAA,GAA4B5uD,EAAO4kC,EAAWtxB,EAC7D,CACI,sBAAAojD,GACQtqD,KAAKorD,oBACLprD,KAAKorD,2BACEprD,KAAKorD,mBAEV,MAAAjqD,SAAEA,GAAanB,KAAKpM,MACtB0+B,GAAcnxB,KACdnB,KAAKorD,kBAAoBjqD,EAAS4vB,GAAG,UAAWjN,IACxC9jB,KAAKlM,UACAkM,KAAAlM,QAAQu3D,YAAc,GAAGvnC,IAAM,IAGxD,EC1CA,MAAMwnC,WAAyBP,GAC3B,WAAAj2D,GACIiM,SAASmD,WACTlE,KAAKrM,KAAO,MACZqM,KAAKglD,UAAW,EAChBhlD,KAAK8pD,2BAA6BzrB,EAC1C,CACI,sBAAAssB,CAAuB/2D,EAAOhB,GAC1B,OAAOgB,EAAMhB,EACrB,CACI,qBAAAg4D,CAAsBtqD,EAAU1N,GACxB,GAAAkV,GAAerS,IAAI7C,GAAM,CACnB,MAAAs4D,EAAcvvC,GAAoB/oB,GACjC,OAAAs4D,GAAcA,EAAYpvD,SAAe,CAC5D,CAEe,OADPlJ,EAAOsvD,GAAoBzsD,IAAI7C,GAA0BA,EAAnBu/B,GAAYv/B,GAC3C0N,EAASsC,aAAahQ,EACrC,CACI,2BAAA4vD,CAA4B5uD,EAAO4kC,EAAWtxB,GACnC,OAAAs7C,GAA4B5uD,EAAO4kC,EAAWtxB,EAC7D,CACI,KAAA2iD,CAAMzH,EAAahvB,EAAcx/B,GAC7B6wD,GAAcrC,EAAahvB,EAAcpzB,KAAKglD,SAAUpxD,EAAMywC,kBACtE,CACI,cAAAgkB,CAAe/nD,EAAU8hD,EAAavL,EAAW1V,GACnCghB,GAAA7hD,EAAU8hD,EAAavL,EAAW1V,EACpD,CACI,KAAA7I,CAAMh4B,GACGN,KAAAglD,SAAWA,GAAS1kD,EAASnG,SAClC4G,MAAMu3B,MAAMh4B,EACpB,ECpCA,MCFMirD,MCImEjE,GAAA,IAClEr5B,MACAqtB,MACA7e,MACAe,KFNwB,CAAC18B,EAAW6c,IAChCmkC,GAAehhD,GAChB,IAAIwqD,GAAiB3tC,GACrB,IAAIstC,GAAkBttC,EAAS,CAC7BsiC,gBAAiBn/C,IAAcsmD,EAAQA,cGCnD,MAAMoE,WAAwBC,EAAAA,UAC1B,uBAAAxkB,CAAwBzO,GACd,MAAAxpB,EAAUhP,KAAKpM,MAAM83D,SAAS53D,QACpC,GAAIkb,GAAWwpB,EAAUE,YAAc14B,KAAKpM,MAAM8kC,UAAW,CACnD,MAAArjC,EAAO2K,KAAKpM,MAAM+3D,QAAQ73D,QAC3BuB,EAAAsc,OAAS3C,EAAQ48C,cAAgB,EACjCv2D,EAAAmc,MAAQxC,EAAQ68C,aAAe,EACpCx2D,EAAK0c,IAAM/C,EAAQ88C,UACnBz2D,EAAK2c,KAAOhD,EAAQ+8C,UAChC,CACe,OAAA,IACf,CAII,kBAAAznD,GAAqB,CACrB,MAAArD,GACI,OAAOjB,KAAKpM,MAAMuN,QAC1B,EAEA,SAAS6qD,IAAS7qD,SAAEA,EAAUu3B,UAAAA,IACpBR,MAAAA,EAAK8P,EAAAA,QACLn1C,EAAMysD,EAAMA,OAAC,MACbjqD,EAAOiqD,EAAAA,OAAO,CAChB9tC,MAAO,EACPG,OAAQ,EACRI,IAAK,EACLC,KAAM,KAEJi6C,MAAEA,GAAUlkB,EAAUA,WAACuW,IAkC7B,OAxBAoB,EAAAA,oBAAmB,KACf,MAAMluC,MAAEA,EAAOG,OAAAA,EAAAI,IAAQA,EAAKC,KAAAA,GAAS3c,EAAKvB,QAC1C,GAAI4kC,IAAc7lC,EAAIiB,UAAY0d,IAAUG,EACxC,OACA9e,EAAAiB,QAAQo4D,QAAQC,YAAcj0B,EAC5B,MAAA34B,EAAQI,SAASrC,cAAc,SAerC,OAdI2uD,IACA1sD,EAAM0sD,MAAQA,GACTtsD,SAAA2B,KAAKU,YAAYzC,GACtBA,EAAM6sD,OACN7sD,EAAM6sD,MAAMC,WAAW,oCACFn0B,yEAEZ1mB,wCACCG,qCACHI,sCACCC,0CAIL,KACMrS,SAAA2B,KAAKiB,YAAYhD,EAAK,CAClC,GACF,CAACm5B,IACI1kC,EAAAA,IAAIw3D,GAAiB,CAAE9yB,YAAsBgzB,SAAU74D,EAAK84D,QAASt2D,EAAM8L,SAAUmrD,EAAkBC,aAACprD,EAAU,CAAEtO,SAChI,CClEA,MAAM25D,GAAgB,EAAGrrD,WAAU0zB,UAAS6D,YAAWC,iBAAgBrxB,SAAQmlD,wBAAuBC,WAC5F,MAAAC,EAAmB/J,GAAYgK,IAC/B10B,EAAK8P,EAAAA,QACL6kB,EAAyB3kB,eAAa4kB,IACvBH,EAAAnmD,IAAIsmD,GAAS,GACnB,IAAA,MAAA34C,KAAcw4C,EAAiB50D,SACtC,IAAKoc,EACD,OAERwkB,GAAkBA,GAAgB,GACnC,CAACg0B,EAAkBh0B,IAChB94B,EAAU2gD,EAAAA,SAAQ,KAAO,CAC3BtoB,GAAAA,EACArD,UACA6D,YACApxB,SACAqxB,eAAgBk0B,EAChB9zB,SAAW+zB,IACUH,EAAAnmD,IAAIsmD,GAAS,GACvB,IAAMH,EAAiBvhD,OAAO0hD,OAQ7CL,EACM,CAAC3jD,KAAKikD,SAAUF,GAChB,CAACn0B,EAAWm0B,IAiBV74D,OAhBRwsD,EAAAA,SAAQ,KACamM,EAAA9xD,SAAQ,CAACmyD,EAAGp6D,IAAQ+5D,EAAiBnmD,IAAI5T,GAAK,IAAM,GACtE,CAAC8lC,IAKJu0B,EAAAA,WAAgB,MACXv0B,IACIi0B,EAAiBt3D,MAClBsjC,GACAA,GAAgB,GACrB,CAACD,IACS,cAATg0B,IACAvrD,EAAWnN,EAAGA,IAACg4D,GAAU,CAAEtzB,YAAsBv3B,cAE7CnN,EAAGA,IAACixC,GAAgB/jC,SAAU,CAAExL,MAAOmK,EAASsB,YAAoB,EAEhF,SAASyrD,KACL,WAAWr4D,GACf,CCxDA,MAAM24D,GAAejoD,GAAUA,EAAMrS,KAAO,GAC5C,SAASu6D,GAAahsD,GAClB,MAAMisD,EAAW,GAMV,OAJPpnD,EAAAA,SAASnL,QAAQsG,GAAW8D,IACpBooD,EAAAA,eAAepoD,IACfmoD,EAAStyD,KAAKmK,EAAK,IAEpBmoD,CACX,CCgCA,MAAME,GAAkB,EAAGnsD,WAAUosD,kBAAiBjmD,SAAQutB,WAAU,EAAM8D,iBAAgB8zB,yBAAwB,EAAMC,OAAO,WAMzH,MAAAc,EAAkBhN,EAAAA,SAAQ,IAAM2M,GAAahsD,IAAW,CAACA,IAKzDssD,EAAcD,EAAgBj0D,IAAI2zD,IAIlC53B,EAAkBgqB,UAAO,GAMzBoO,EAAyBpO,SAAOkO,GAIhCG,EAAe/K,IAAY,IAAM,IAAIruD,OAKpCq5D,EAAgBC,GAAqBC,EAAAA,SAASN,IAC9CnG,EAAkB0G,GAAuBD,EAAAA,SAASN,GACzD7O,IAA0B,KACtBrpB,EAAgBxhC,SAAU,EAC1B45D,EAAuB55D,QAAU05D,EAIjC,IAAA,IAASx4D,EAAI,EAAGA,EAAIqyD,EAAiBtyD,OAAQC,IAAK,CAC9C,MAAMpC,EAAMs6D,GAAY7F,EAAiBryD,IACpCy4D,EAAY9xD,SAAS/I,GAMtB+6D,EAAaviD,OAAOxY,IALU,IAA1B+6D,EAAah4D,IAAI/C,IACJ+6D,EAAAnnD,IAAI5T,GAAK,EAK9B,IAEL,CAACy0D,EAAkBoG,EAAY14D,OAAQ04D,EAAYx0D,KAAK,OAC3D,MAAM+0D,EAAkB,GACxB,GAAIR,IAAoBI,EAAgB,CAChC,IAAAK,EAAe,IAAIT,GAKvB,IAAA,IAASx4D,EAAI,EAAGA,EAAIqyD,EAAiBtyD,OAAQC,IAAK,CACxC,MAAAiQ,EAAQoiD,EAAiBryD,GACzBpC,EAAMs6D,GAAYjoD,GACnBwoD,EAAY9xD,SAAS/I,KACTq7D,EAAAztD,OAAOxL,EAAG,EAAGiQ,GAC1B+oD,EAAgBlzD,KAAKmK,GACzB,CAeJ,MATa,SAATynD,GAAmBsB,EAAgBj5D,SACpBk5D,EAAAD,GAECD,EAAAZ,GAAac,SACjCJ,EAAkBL,EAKlB,CAYJ,MAAMU,YAAEA,GAAgBnmB,EAAAA,WAAW7C,IAC3BlxC,OAAAA,EAAAA,IAAIozD,EAAAA,SAAU,CAAEjmD,SAAUkmD,EAAiB9tD,KAAK0L,IAC1C,MAAArS,EAAMs6D,GAAYjoD,GAClByzB,EAAY80B,IAAoBnG,GAClCoG,EAAY9xD,SAAS/I,GAmBjBoB,OAAAA,MAAIw4D,GAAe,CAAE9zB,YAAsB7D,UAAUS,EAAgBxhC,UAAW+gC,SAC9E,EACOvtB,OAAQoxB,OAAY,EAAYpxB,EAAQmlD,wBAA8CC,OAAY/zB,eAAgBD,OAAY,EApBhI,KACP,IAAAi1B,EAAal4D,IAAI7C,GAIjB,OAHa+6D,EAAAnnD,IAAI5T,GAAK,GAK1B,IAAIu7D,GAAsB,EACbR,EAAA9yD,SAASuzD,IACbA,IACqBD,GAAA,EAAA,IAE1BA,IACAD,SAA0DA,IAC1DH,EAAoBL,EAAuB55D,SAC3C6kC,GAAkBA,IAAe,EAK0Hx3B,SAAU8D,GAASrS,EAAG,KACzL","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241]}